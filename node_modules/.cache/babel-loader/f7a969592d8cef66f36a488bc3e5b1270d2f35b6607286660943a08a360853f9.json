{"ast":null,"code":"/**\n * @license\n * Lo-Dash 2.4.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -o ./dist/lodash.js`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;\n(function () {\n  /** Used as a safe reference for `undefined` in pre ES5 environments */\n  var undefined;\n\n  /** Used to pool arrays and objects used internally */\n  var arrayPool = [],\n    objectPool = [];\n\n  /** Used to generate unique IDs */\n  var idCounter = 0;\n\n  /** Used to prefix keys to avoid issues with `__proto__` and properties on `Object.prototype` */\n  var keyPrefix = +new Date() + '';\n\n  /** Used as the size when optimizations are enabled for large arrays */\n  var largeArraySize = 75;\n\n  /** Used as the max size of the `arrayPool` and `objectPool` */\n  var maxPoolSize = 40;\n\n  /** Used to detect and test whitespace */\n  var whitespace =\n  // whitespace\n  ' \\t\\x0B\\f\\xA0\\ufeff' +\n  // line terminators\n  '\\n\\r\\u2028\\u2029' +\n  // unicode category \"Zs\" space separators\n  '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000';\n\n  /** Used to match empty string literals in compiled template source */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n    reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n    reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /**\n   * Used to match ES6 template delimiters\n   * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-literals-string-literals\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match regexp flags from their coerced string values */\n  var reFlags = /\\w*$/;\n\n  /** Used to detected named functions */\n  var reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;\n\n  /** Used to match \"interpolate\" template delimiters */\n  var reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match leading whitespace and zeros to be removed */\n  var reLeadingSpacesAndZeros = RegExp('^[' + whitespace + ']*0+(?=.$)');\n\n  /** Used to ensure capturing order of template delimiters */\n  var reNoMatch = /($^)/;\n\n  /** Used to detect functions containing a `this` reference */\n  var reThis = /\\bthis\\b/;\n\n  /** Used to match unescaped characters in compiled string literals */\n  var reUnescapedString = /['\\n\\r\\t\\u2028\\u2029\\\\]/g;\n\n  /** Used to assign default `context` object properties */\n  var contextProps = ['Array', 'Boolean', 'Date', 'Function', 'Math', 'Number', 'Object', 'RegExp', 'String', '_', 'attachEvent', 'clearTimeout', 'isFinite', 'isNaN', 'parseInt', 'setTimeout'];\n\n  /** Used to make template sourceURLs easier to identify */\n  var templateCounter = 0;\n\n  /** `Object#toString` result shortcuts */\n  var argsClass = '[object Arguments]',\n    arrayClass = '[object Array]',\n    boolClass = '[object Boolean]',\n    dateClass = '[object Date]',\n    funcClass = '[object Function]',\n    numberClass = '[object Number]',\n    objectClass = '[object Object]',\n    regexpClass = '[object RegExp]',\n    stringClass = '[object String]';\n\n  /** Used to identify object classifications that `_.clone` supports */\n  var cloneableClasses = {};\n  cloneableClasses[funcClass] = false;\n  cloneableClasses[argsClass] = cloneableClasses[arrayClass] = cloneableClasses[boolClass] = cloneableClasses[dateClass] = cloneableClasses[numberClass] = cloneableClasses[objectClass] = cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;\n\n  /** Used as an internal `_.debounce` options object */\n  var debounceOptions = {\n    'leading': false,\n    'maxWait': 0,\n    'trailing': false\n  };\n\n  /** Used as the property descriptor for `__bindData__` */\n  var descriptor = {\n    'configurable': false,\n    'enumerable': false,\n    'value': null,\n    'writable': false\n  };\n\n  /** Used to determine if values are of the language type Object */\n  var objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\t': 't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Used as a reference to the global object */\n  var root = objectTypes[typeof window] && window || this;\n\n  /** Detect free variable `exports` */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module` */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports` */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */\n  var freeGlobal = objectTypes[typeof global] && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches\n   * or `fromIndex` constraints.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value or `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    var index = (fromIndex || 0) - 1,\n      length = array ? array.length : 0;\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * An implementation of `_.contains` for cache objects that mimics the return\n   * signature of `_.indexOf` by returning `0` if the value is found, else `-1`.\n   *\n   * @private\n   * @param {Object} cache The cache object to inspect.\n   * @param {*} value The value to search for.\n   * @returns {number} Returns `0` if `value` is found, else `-1`.\n   */\n  function cacheIndexOf(cache, value) {\n    var type = typeof value;\n    cache = cache.cache;\n    if (type == 'boolean' || value == null) {\n      return cache[value] ? 0 : -1;\n    }\n    if (type != 'number' && type != 'string') {\n      type = 'object';\n    }\n    var key = type == 'number' ? value : keyPrefix + value;\n    cache = (cache = cache[type]) && cache[key];\n    return type == 'object' ? cache && baseIndexOf(cache, value) > -1 ? 0 : -1 : cache ? 0 : -1;\n  }\n\n  /**\n   * Adds a given value to the corresponding cache object.\n   *\n   * @private\n   * @param {*} value The value to add to the cache.\n   */\n  function cachePush(value) {\n    var cache = this.cache,\n      type = typeof value;\n    if (type == 'boolean' || value == null) {\n      cache[value] = true;\n    } else {\n      if (type != 'number' && type != 'string') {\n        type = 'object';\n      }\n      var key = type == 'number' ? value : keyPrefix + value,\n        typeCache = cache[type] || (cache[type] = {});\n      if (type == 'object') {\n        (typeCache[key] || (typeCache[key] = [])).push(value);\n      } else {\n        typeCache[key] = true;\n      }\n    }\n  }\n\n  /**\n   * Used by `_.max` and `_.min` as the default callback when a given\n   * collection is a string value.\n   *\n   * @private\n   * @param {string} value The character to inspect.\n   * @returns {number} Returns the code unit of given character.\n   */\n  function charAtCallback(value) {\n    return value.charCodeAt(0);\n  }\n\n  /**\n   * Used by `sortBy` to compare transformed `collection` elements, stable sorting\n   * them in ascending order.\n   *\n   * @private\n   * @param {Object} a The object to compare to `b`.\n   * @param {Object} b The object to compare to `a`.\n   * @returns {number} Returns the sort order indicator of `1` or `-1`.\n   */\n  function compareAscending(a, b) {\n    var ac = a.criteria,\n      bc = b.criteria,\n      index = -1,\n      length = ac.length;\n    while (++index < length) {\n      var value = ac[index],\n        other = bc[index];\n      if (value !== other) {\n        if (value > other || typeof value == 'undefined') {\n          return 1;\n        }\n        if (value < other || typeof other == 'undefined') {\n          return -1;\n        }\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to return the same value for\n    // `a` and `b`. See https://github.com/jashkenas/underscore/pull/1247\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See http://code.google.com/p/v8/issues/detail?id=90\n    return a.index - b.index;\n  }\n\n  /**\n   * Creates a cache object to optimize linear searches of large arrays.\n   *\n   * @private\n   * @param {Array} [array=[]] The array to search.\n   * @returns {null|Object} Returns the cache object or `null` if caching should not be used.\n   */\n  function createCache(array) {\n    var index = -1,\n      length = array.length,\n      first = array[0],\n      mid = array[length / 2 | 0],\n      last = array[length - 1];\n    if (first && typeof first == 'object' && mid && typeof mid == 'object' && last && typeof last == 'object') {\n      return false;\n    }\n    var cache = getObject();\n    cache['false'] = cache['null'] = cache['true'] = cache['undefined'] = false;\n    var result = getObject();\n    result.array = array;\n    result.cache = cache;\n    result.push = cachePush;\n    while (++index < length) {\n      result.push(array[index]);\n    }\n    return result;\n  }\n\n  /**\n   * Used by `template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {string} match The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(match) {\n    return '\\\\' + stringEscapes[match];\n  }\n\n  /**\n   * Gets an array from the array pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Array} The array from the pool.\n   */\n  function getArray() {\n    return arrayPool.pop() || [];\n  }\n\n  /**\n   * Gets an object from the object pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Object} The object from the pool.\n   */\n  function getObject() {\n    return objectPool.pop() || {\n      'array': null,\n      'cache': null,\n      'criteria': null,\n      'false': false,\n      'index': 0,\n      'null': false,\n      'number': null,\n      'object': null,\n      'push': null,\n      'string': null,\n      'true': false,\n      'undefined': false,\n      'value': null\n    };\n  }\n\n  /**\n   * Releases the given array back to the array pool.\n   *\n   * @private\n   * @param {Array} [array] The array to release.\n   */\n  function releaseArray(array) {\n    array.length = 0;\n    if (arrayPool.length < maxPoolSize) {\n      arrayPool.push(array);\n    }\n  }\n\n  /**\n   * Releases the given object back to the object pool.\n   *\n   * @private\n   * @param {Object} [object] The object to release.\n   */\n  function releaseObject(object) {\n    var cache = object.cache;\n    if (cache) {\n      releaseObject(cache);\n    }\n    object.array = object.cache = object.criteria = object.object = object.number = object.string = object.value = null;\n    if (objectPool.length < maxPoolSize) {\n      objectPool.push(object);\n    }\n  }\n\n  /**\n   * Slices the `collection` from the `start` index up to, but not including,\n   * the `end` index.\n   *\n   * Note: This function is used instead of `Array#slice` to support node lists\n   * in IE < 9 and to ensure dense arrays are returned.\n   *\n   * @private\n   * @param {Array|Object|string} collection The collection to slice.\n   * @param {number} start The start index.\n   * @param {number} end The end index.\n   * @returns {Array} Returns the new array.\n   */\n  function slice(array, start, end) {\n    start || (start = 0);\n    if (typeof end == 'undefined') {\n      end = array ? array.length : 0;\n    }\n    var index = -1,\n      length = end - start || 0,\n      result = Array(length < 0 ? 0 : length);\n    while (++index < length) {\n      result[index] = array[start + index];\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new `lodash` function using the given context object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns the `lodash` function.\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See http://es5.github.io/#x11.1.5.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references */\n    var Array = context.Array,\n      Boolean = context.Boolean,\n      Date = context.Date,\n      Function = context.Function,\n      Math = context.Math,\n      Number = context.Number,\n      Object = context.Object,\n      RegExp = context.RegExp,\n      String = context.String,\n      TypeError = context.TypeError;\n\n    /**\n     * Used for `Array` method references.\n     *\n     * Normally `Array.prototype` would suffice, however, using an array literal\n     * avoids issues in Narwhal.\n     */\n    var arrayRef = [];\n\n    /** Used for native method references */\n    var objectProto = Object.prototype;\n\n    /** Used to restore the original `_` reference in `noConflict` */\n    var oldDash = context._;\n\n    /** Used to resolve the internal [[Class]] of values */\n    var toString = objectProto.toString;\n\n    /** Used to detect if a method is native */\n    var reNative = RegExp('^' + String(toString).replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&').replace(/toString| for [^\\]]+/g, '.*?') + '$');\n\n    /** Native method shortcuts */\n    var ceil = Math.ceil,\n      clearTimeout = context.clearTimeout,\n      floor = Math.floor,\n      fnToString = Function.prototype.toString,\n      getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n      hasOwnProperty = objectProto.hasOwnProperty,\n      push = arrayRef.push,\n      setTimeout = context.setTimeout,\n      splice = arrayRef.splice,\n      unshift = arrayRef.unshift;\n\n    /** Used to set meta data on functions */\n    var defineProperty = function () {\n      // IE 8 only accepts DOM elements\n      try {\n        var o = {},\n          func = isNative(func = Object.defineProperty) && func,\n          result = func(o, o, o) && func;\n      } catch (e) {}\n      return result;\n    }();\n\n    /* Native method shortcuts for methods with the same name as other `lodash` methods */\n    var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,\n      nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,\n      nativeIsFinite = context.isFinite,\n      nativeIsNaN = context.isNaN,\n      nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,\n      nativeMax = Math.max,\n      nativeMin = Math.min,\n      nativeParseInt = context.parseInt,\n      nativeRandom = Math.random;\n\n    /** Used to lookup a built-in constructor by [[Class]] */\n    var ctorByClass = {};\n    ctorByClass[arrayClass] = Array;\n    ctorByClass[boolClass] = Boolean;\n    ctorByClass[dateClass] = Date;\n    ctorByClass[funcClass] = Function;\n    ctorByClass[objectClass] = Object;\n    ctorByClass[numberClass] = Number;\n    ctorByClass[regexpClass] = RegExp;\n    ctorByClass[stringClass] = String;\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps the given value to enable intuitive\n     * method chaining.\n     *\n     * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n     * and `unshift`\n     *\n     * Chaining is supported in custom builds as long as the `value` method is\n     * implicitly or explicitly included in the build.\n     *\n     * The chainable wrapper functions are:\n     * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,\n     * `compose`, `concat`, `countBy`, `create`, `createCallback`, `curry`,\n     * `debounce`, `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,\n     * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`,\n     * `range`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,\n     * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `transform`,\n     * `union`, `uniq`, `unshift`, `unzip`, `values`, `where`, `without`, `wrap`,\n     * and `zip`\n     *\n     * The non-chainable wrapper functions are:\n     * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,\n     * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,\n     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,\n     * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,\n     * `template`, `unescape`, `uniqueId`, and `value`\n     *\n     * The wrapper functions `first` and `last` return wrapped values when `n` is\n     * provided, otherwise they return unwrapped values.\n     *\n     * Explicit chaining can be enabled by using the `_.chain` method.\n     *\n     * @name _\n     * @constructor\n     * @category Chaining\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns a `lodash` instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(sum, num) {\n     *   return sum + num;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(num) {\n     *   return num * num;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      // don't wrap if already wrapped, even if wrapped by a different `lodash` constructor\n      return value && typeof value == 'object' && !isArray(value) && hasOwnProperty.call(value, '__wrapped__') ? value : new lodashWrapper(value);\n    }\n\n    /**\n     * A fast path for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @param {boolean} chainAll A flag to enable chaining for all methods\n     * @returns {Object} Returns a `lodash` instance.\n     */\n    function lodashWrapper(value, chainAll) {\n      this.__chain__ = !!chainAll;\n      this.__wrapped__ = value;\n    }\n    // ensure `new lodashWrapper` is an instance of `lodash`\n    lodashWrapper.prototype = lodash.prototype;\n\n    /**\n     * An object used to flag environments features.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * Detect if functions can be decompiled by `Function#toString`\n     * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcDecomp = !isNative(context.WinRTError) && reThis.test(runInContext);\n\n    /**\n     * Detect if `Function#name` is supported (all but IE).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcNames = typeof Function.name == 'string';\n\n    /**\n     * By default, the template delimiters used by Lo-Dash are similar to those in\n     * embedded Ruby (ERB). Change the following template settings to use alternative\n     * delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': /<%-([\\s\\S]+?)%>/g,\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': /<%([\\s\\S]+?)%>/g,\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * The base implementation of `_.bind` that creates the bound function and\n     * sets its meta data.\n     *\n     * @private\n     * @param {Array} bindData The bind data array.\n     * @returns {Function} Returns the new bound function.\n     */\n    function baseBind(bindData) {\n      var func = bindData[0],\n        partialArgs = bindData[2],\n        thisArg = bindData[4];\n      function bound() {\n        // `Function#bind` spec\n        // http://es5.github.io/#x15.3.4.5\n        if (partialArgs) {\n          // avoid `arguments` object deoptimizations by using `slice` instead\n          // of `Array.prototype.slice.call` and not assigning `arguments` to a\n          // variable as a ternary expression\n          var args = slice(partialArgs);\n          push.apply(args, arguments);\n        }\n        // mimic the constructor's `return` behavior\n        // http://es5.github.io/#x13.2.2\n        if (this instanceof bound) {\n          // ensure `new bound` is an instance of `func`\n          var thisBinding = baseCreate(func.prototype),\n            result = func.apply(thisBinding, args || arguments);\n          return isObject(result) ? result : thisBinding;\n        }\n        return func.apply(thisArg, args || arguments);\n      }\n      setBindData(bound, bindData);\n      return bound;\n    }\n\n    /**\n     * The base implementation of `_.clone` without argument juggling or support\n     * for `thisArg` binding.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep=false] Specify a deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, callback, stackA, stackB) {\n      if (callback) {\n        var result = callback(value);\n        if (typeof result != 'undefined') {\n          return result;\n        }\n      }\n      // inspect [[Class]]\n      var isObj = isObject(value);\n      if (isObj) {\n        var className = toString.call(value);\n        if (!cloneableClasses[className]) {\n          return value;\n        }\n        var ctor = ctorByClass[className];\n        switch (className) {\n          case boolClass:\n          case dateClass:\n            return new ctor(+value);\n          case numberClass:\n          case stringClass:\n            return new ctor(value);\n          case regexpClass:\n            result = ctor(value.source, reFlags.exec(value));\n            result.lastIndex = value.lastIndex;\n            return result;\n        }\n      } else {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isDeep) {\n        // check for circular references and return corresponding clone\n        var initedStack = !stackA;\n        stackA || (stackA = getArray());\n        stackB || (stackB = getArray());\n        var length = stackA.length;\n        while (length--) {\n          if (stackA[length] == value) {\n            return stackB[length];\n          }\n        }\n        result = isArr ? ctor(value.length) : {};\n      } else {\n        result = isArr ? slice(value) : assign({}, value);\n      }\n      // add array properties assigned by `RegExp#exec`\n      if (isArr) {\n        if (hasOwnProperty.call(value, 'index')) {\n          result.index = value.index;\n        }\n        if (hasOwnProperty.call(value, 'input')) {\n          result.input = value.input;\n        }\n      }\n      // exit for shallow clone\n      if (!isDeep) {\n        return result;\n      }\n      // add the source value to the stack of traversed objects\n      // and associate it with its clone\n      stackA.push(value);\n      stackB.push(result);\n\n      // recursively populate clone (susceptible to call stack limits)\n      (isArr ? forEach : forOwn)(value, function (objValue, key) {\n        result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);\n      });\n      if (initedStack) {\n        releaseArray(stackA);\n        releaseArray(stackB);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    function baseCreate(prototype, properties) {\n      return isObject(prototype) ? nativeCreate(prototype) : {};\n    }\n    // fallback for browsers without `Object.create`\n    if (!nativeCreate) {\n      baseCreate = function () {\n        function Object() {}\n        return function (prototype) {\n          if (isObject(prototype)) {\n            Object.prototype = prototype;\n            var result = new Object();\n            Object.prototype = null;\n          }\n          return result || context.Object();\n        };\n      }();\n    }\n\n    /**\n     * The base implementation of `_.createCallback` without support for creating\n     * \"_.pluck\" or \"_.where\" style callbacks.\n     *\n     * @private\n     * @param {*} [func=identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of the created callback.\n     * @param {number} [argCount] The number of arguments the callback accepts.\n     * @returns {Function} Returns a callback function.\n     */\n    function baseCreateCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      // exit early for no `thisArg` or already bound by `Function#bind`\n      if (typeof thisArg == 'undefined' || !('prototype' in func)) {\n        return func;\n      }\n      var bindData = func.__bindData__;\n      if (typeof bindData == 'undefined') {\n        if (support.funcNames) {\n          bindData = !func.name;\n        }\n        bindData = bindData || !support.funcDecomp;\n        if (!bindData) {\n          var source = fnToString.call(func);\n          if (!support.funcNames) {\n            bindData = !reFuncName.test(source);\n          }\n          if (!bindData) {\n            // checks if `func` references the `this` keyword and stores the result\n            bindData = reThis.test(source);\n            setBindData(func, bindData);\n          }\n        }\n      }\n      // exit early if there are no `this` references or `func` is bound\n      if (bindData === false || bindData !== true && bindData[1] & 1) {\n        return func;\n      }\n      switch (argCount) {\n        case 1:\n          return function (value) {\n            return func.call(thisArg, value);\n          };\n        case 2:\n          return function (a, b) {\n            return func.call(thisArg, a, b);\n          };\n        case 3:\n          return function (value, index, collection) {\n            return func.call(thisArg, value, index, collection);\n          };\n        case 4:\n          return function (accumulator, value, index, collection) {\n            return func.call(thisArg, accumulator, value, index, collection);\n          };\n      }\n      return bind(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `createWrapper` that creates the wrapper and\n     * sets its meta data.\n     *\n     * @private\n     * @param {Array} bindData The bind data array.\n     * @returns {Function} Returns the new function.\n     */\n    function baseCreateWrapper(bindData) {\n      var func = bindData[0],\n        bitmask = bindData[1],\n        partialArgs = bindData[2],\n        partialRightArgs = bindData[3],\n        thisArg = bindData[4],\n        arity = bindData[5];\n      var isBind = bitmask & 1,\n        isBindKey = bitmask & 2,\n        isCurry = bitmask & 4,\n        isCurryBound = bitmask & 8,\n        key = func;\n      function bound() {\n        var thisBinding = isBind ? thisArg : this;\n        if (partialArgs) {\n          var args = slice(partialArgs);\n          push.apply(args, arguments);\n        }\n        if (partialRightArgs || isCurry) {\n          args || (args = slice(arguments));\n          if (partialRightArgs) {\n            push.apply(args, partialRightArgs);\n          }\n          if (isCurry && args.length < arity) {\n            bitmask |= 16 & ~32;\n            return baseCreateWrapper([func, isCurryBound ? bitmask : bitmask & ~3, args, null, thisArg, arity]);\n          }\n        }\n        args || (args = arguments);\n        if (isBindKey) {\n          func = thisBinding[key];\n        }\n        if (this instanceof bound) {\n          thisBinding = baseCreate(func.prototype);\n          var result = func.apply(thisBinding, args);\n          return isObject(result) ? result : thisBinding;\n        }\n        return func.apply(thisBinding, args);\n      }\n      setBindData(bound, bindData);\n      return bound;\n    }\n\n    /**\n     * The base implementation of `_.difference` that accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to process.\n     * @param {Array} [values] The array of values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var index = -1,\n        indexOf = getIndexOf(),\n        length = array ? array.length : 0,\n        isLarge = length >= largeArraySize && indexOf === baseIndexOf,\n        result = [];\n      if (isLarge) {\n        var cache = createCache(values);\n        if (cache) {\n          indexOf = cacheIndexOf;\n          values = cache;\n        } else {\n          isLarge = false;\n        }\n      }\n      while (++index < length) {\n        var value = array[index];\n        if (indexOf(values, value) < 0) {\n          result.push(value);\n        }\n      }\n      if (isLarge) {\n        releaseObject(values);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` without support for callback\n     * shorthands or `thisArg` binding.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n     * @param {boolean} [isStrict=false] A flag to restrict flattening to arrays and `arguments` objects.\n     * @param {number} [fromIndex=0] The index to start from.\n     * @returns {Array} Returns a new flattened array.\n     */\n    function baseFlatten(array, isShallow, isStrict, fromIndex) {\n      var index = (fromIndex || 0) - 1,\n        length = array ? array.length : 0,\n        result = [];\n      while (++index < length) {\n        var value = array[index];\n        if (value && typeof value == 'object' && typeof value.length == 'number' && (isArray(value) || isArguments(value))) {\n          // recursively flatten arrays (susceptible to call stack limits)\n          if (!isShallow) {\n            value = baseFlatten(value, isShallow, isStrict);\n          }\n          var valIndex = -1,\n            valLength = value.length,\n            resIndex = result.length;\n          result.length += valLength;\n          while (++valIndex < valLength) {\n            result[resIndex++] = value[valIndex];\n          }\n        } else if (!isStrict) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isEqual`, without support for `thisArg` binding,\n     * that allows partial \"_.where\" style comparisons.\n     *\n     * @private\n     * @param {*} a The value to compare.\n     * @param {*} b The other value to compare.\n     * @param {Function} [callback] The function to customize comparing values.\n     * @param {Function} [isWhere=false] A flag to indicate performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `a` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `b` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(a, b, callback, isWhere, stackA, stackB) {\n      // used to indicate that when comparing objects, `a` has at least the properties of `b`\n      if (callback) {\n        var result = callback(a, b);\n        if (typeof result != 'undefined') {\n          return !!result;\n        }\n      }\n      // exit early for identical values\n      if (a === b) {\n        // treat `+0` vs. `-0` as not equal\n        return a !== 0 || 1 / a == 1 / b;\n      }\n      var type = typeof a,\n        otherType = typeof b;\n\n      // exit early for unlike primitive values\n      if (a === a && !(a && objectTypes[type]) && !(b && objectTypes[otherType])) {\n        return false;\n      }\n      // exit early for `null` and `undefined` avoiding ES3's Function#call behavior\n      // http://es5.github.io/#x15.3.4.4\n      if (a == null || b == null) {\n        return a === b;\n      }\n      // compare [[Class]] names\n      var className = toString.call(a),\n        otherClass = toString.call(b);\n      if (className == argsClass) {\n        className = objectClass;\n      }\n      if (otherClass == argsClass) {\n        otherClass = objectClass;\n      }\n      if (className != otherClass) {\n        return false;\n      }\n      switch (className) {\n        case boolClass:\n        case dateClass:\n          // coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal\n          return +a == +b;\n        case numberClass:\n          // treat `NaN` vs. `NaN` as equal\n          return a != +a ? b != +b\n          // but treat `+0` vs. `-0` as not equal\n          : a == 0 ? 1 / a == 1 / b : a == +b;\n        case regexpClass:\n        case stringClass:\n          // coerce regexes to strings (http://es5.github.io/#x15.10.6.4)\n          // treat string primitives and their corresponding object instances as equal\n          return a == String(b);\n      }\n      var isArr = className == arrayClass;\n      if (!isArr) {\n        // unwrap any `lodash` wrapped values\n        var aWrapped = hasOwnProperty.call(a, '__wrapped__'),\n          bWrapped = hasOwnProperty.call(b, '__wrapped__');\n        if (aWrapped || bWrapped) {\n          return baseIsEqual(aWrapped ? a.__wrapped__ : a, bWrapped ? b.__wrapped__ : b, callback, isWhere, stackA, stackB);\n        }\n        // exit for functions and DOM nodes\n        if (className != objectClass) {\n          return false;\n        }\n        // in older versions of Opera, `arguments` objects have `Array` constructors\n        var ctorA = a.constructor,\n          ctorB = b.constructor;\n\n        // non `Object` object instances with different constructors are not equal\n        if (ctorA != ctorB && !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) && 'constructor' in a && 'constructor' in b) {\n          return false;\n        }\n      }\n      // assume cyclic structures are equal\n      // the algorithm for detecting cyclic structures is adapted from ES 5.1\n      // section 15.12.3, abstract operation `JO` (http://es5.github.io/#x15.12.3)\n      var initedStack = !stackA;\n      stackA || (stackA = getArray());\n      stackB || (stackB = getArray());\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == a) {\n          return stackB[length] == b;\n        }\n      }\n      var size = 0;\n      result = true;\n\n      // add `a` and `b` to the stack of traversed objects\n      stackA.push(a);\n      stackB.push(b);\n\n      // recursively compare objects and arrays (susceptible to call stack limits)\n      if (isArr) {\n        // compare lengths to determine if a deep comparison is necessary\n        length = a.length;\n        size = b.length;\n        result = size == length;\n        if (result || isWhere) {\n          // deep compare the contents, ignoring non-numeric properties\n          while (size--) {\n            var index = length,\n              value = b[size];\n            if (isWhere) {\n              while (index--) {\n                if (result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB)) {\n                  break;\n                }\n              }\n            } else if (!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))) {\n              break;\n            }\n          }\n        }\n      } else {\n        // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`\n        // which, in this case, is more costly\n        forIn(b, function (value, key, b) {\n          if (hasOwnProperty.call(b, key)) {\n            // count the number of properties.\n            size++;\n            // deep compare each property value.\n            return result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB);\n          }\n        });\n        if (result && !isWhere) {\n          // ensure both objects have the same number of properties\n          forIn(a, function (value, key, a) {\n            if (hasOwnProperty.call(a, key)) {\n              // `size` will be `-1` if `a` has more properties than `b`\n              return result = --size > -1;\n            }\n          });\n        }\n      }\n      stackA.pop();\n      stackB.pop();\n      if (initedStack) {\n        releaseArray(stackA);\n        releaseArray(stackB);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.merge` without argument juggling or support\n     * for `thisArg` binding.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [callback] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     */\n    function baseMerge(object, source, callback, stackA, stackB) {\n      (isArray(source) ? forEach : forOwn)(source, function (source, key) {\n        var found,\n          isArr,\n          result = source,\n          value = object[key];\n        if (source && ((isArr = isArray(source)) || isPlainObject(source))) {\n          // avoid merging previously merged cyclic sources\n          var stackLength = stackA.length;\n          while (stackLength--) {\n            if (found = stackA[stackLength] == source) {\n              value = stackB[stackLength];\n              break;\n            }\n          }\n          if (!found) {\n            var isShallow;\n            if (callback) {\n              result = callback(value, source);\n              if (isShallow = typeof result != 'undefined') {\n                value = result;\n              }\n            }\n            if (!isShallow) {\n              value = isArr ? isArray(value) ? value : [] : isPlainObject(value) ? value : {};\n            }\n            // add `source` and associated `value` to the stack of traversed objects\n            stackA.push(source);\n            stackB.push(value);\n\n            // recursively merge objects and arrays (susceptible to call stack limits)\n            if (!isShallow) {\n              baseMerge(value, source, callback, stackA, stackB);\n            }\n          }\n        } else {\n          if (callback) {\n            result = callback(value, source);\n            if (typeof result == 'undefined') {\n              result = source;\n            }\n          }\n          if (typeof result != 'undefined') {\n            value = result;\n          }\n        }\n        object[key] = value;\n      });\n    }\n\n    /**\n     * The base implementation of `_.random` without argument juggling or support\n     * for returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns a random number.\n     */\n    function baseRandom(min, max) {\n      return min + floor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * or `thisArg` binding.\n     *\n     * @private\n     * @param {Array} array The array to process.\n     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n     * @param {Function} [callback] The function called per iteration.\n     * @returns {Array} Returns a duplicate-value-free array.\n     */\n    function baseUniq(array, isSorted, callback) {\n      var index = -1,\n        indexOf = getIndexOf(),\n        length = array ? array.length : 0,\n        result = [];\n      var isLarge = !isSorted && length >= largeArraySize && indexOf === baseIndexOf,\n        seen = callback || isLarge ? getArray() : result;\n      if (isLarge) {\n        var cache = createCache(seen);\n        indexOf = cacheIndexOf;\n        seen = cache;\n      }\n      while (++index < length) {\n        var value = array[index],\n          computed = callback ? callback(value, index, array) : value;\n        if (isSorted ? !index || seen[seen.length - 1] !== computed : indexOf(seen, computed) < 0) {\n          if (callback || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      if (isLarge) {\n        releaseArray(seen.array);\n        releaseObject(seen);\n      } else if (callback) {\n        releaseArray(seen);\n      }\n      return result;\n    }\n\n    /**\n     * Creates a function that aggregates a collection, creating an object composed\n     * of keys generated from the results of running each element of the collection\n     * through a callback. The given `setter` function sets the keys and values\n     * of the composed object.\n     *\n     * @private\n     * @param {Function} setter The setter function.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter) {\n      return function (collection, callback, thisArg) {\n        var result = {};\n        callback = lodash.createCallback(callback, thisArg, 3);\n        var index = -1,\n          length = collection ? collection.length : 0;\n        if (typeof length == 'number') {\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, callback(value, index, collection), collection);\n          }\n        } else {\n          forOwn(collection, function (value, key, collection) {\n            setter(result, value, callback(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that, when called, either curries or invokes `func`\n     * with an optional `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of method flags to compose.\n     *  The bitmask may be composed of the following flags:\n     *  1 - `_.bind`\n     *  2 - `_.bindKey`\n     *  4 - `_.curry`\n     *  8 - `_.curry` (bound)\n     *  16 - `_.partial`\n     *  32 - `_.partialRight`\n     * @param {Array} [partialArgs] An array of arguments to prepend to those\n     *  provided to the new function.\n     * @param {Array} [partialRightArgs] An array of arguments to append to those\n     *  provided to the new function.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new function.\n     */\n    function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {\n      var isBind = bitmask & 1,\n        isBindKey = bitmask & 2,\n        isCurry = bitmask & 4,\n        isCurryBound = bitmask & 8,\n        isPartial = bitmask & 16,\n        isPartialRight = bitmask & 32;\n      if (!isBindKey && !isFunction(func)) {\n        throw new TypeError();\n      }\n      if (isPartial && !partialArgs.length) {\n        bitmask &= ~16;\n        isPartial = partialArgs = false;\n      }\n      if (isPartialRight && !partialRightArgs.length) {\n        bitmask &= ~32;\n        isPartialRight = partialRightArgs = false;\n      }\n      var bindData = func && func.__bindData__;\n      if (bindData && bindData !== true) {\n        // clone `bindData`\n        bindData = slice(bindData);\n        if (bindData[2]) {\n          bindData[2] = slice(bindData[2]);\n        }\n        if (bindData[3]) {\n          bindData[3] = slice(bindData[3]);\n        }\n        // set `thisBinding` is not previously bound\n        if (isBind && !(bindData[1] & 1)) {\n          bindData[4] = thisArg;\n        }\n        // set if previously bound but not currently (subsequent curried functions)\n        if (!isBind && bindData[1] & 1) {\n          bitmask |= 8;\n        }\n        // set curried arity if not yet set\n        if (isCurry && !(bindData[1] & 4)) {\n          bindData[5] = arity;\n        }\n        // append partial left arguments\n        if (isPartial) {\n          push.apply(bindData[2] || (bindData[2] = []), partialArgs);\n        }\n        // append partial right arguments\n        if (isPartialRight) {\n          unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);\n        }\n        // merge flags\n        bindData[1] |= bitmask;\n        return createWrapper.apply(null, bindData);\n      }\n      // fast path for `_.bind`\n      var creater = bitmask == 1 || bitmask === 17 ? baseBind : baseCreateWrapper;\n      return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);\n    }\n\n    /**\n     * Used by `escape` to convert characters to HTML entities.\n     *\n     * @private\n     * @param {string} match The matched character to escape.\n     * @returns {string} Returns the escaped character.\n     */\n    function escapeHtmlChar(match) {\n      return htmlEscapes[match];\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized, this method returns the custom method, otherwise it returns\n     * the `baseIndexOf` function.\n     *\n     * @private\n     * @returns {Function} Returns the \"indexOf\" function.\n     */\n    function getIndexOf() {\n      var result = (result = lodash.indexOf) === indexOf ? baseIndexOf : result;\n      return result;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.\n     */\n    function isNative(value) {\n      return typeof value == 'function' && reNative.test(value);\n    }\n\n    /**\n     * Sets `this` binding data on a given function.\n     *\n     * @private\n     * @param {Function} func The function to set data on.\n     * @param {Array} value The data array to set.\n     */\n    var setBindData = !defineProperty ? noop : function (func, value) {\n      descriptor.value = value;\n      defineProperty(func, '__bindData__', descriptor);\n      descriptor.value = null;\n    };\n\n    /**\n     * A fallback implementation of `isPlainObject` which checks if a given value\n     * is an object created by the `Object` constructor, assuming objects created\n     * by the `Object` constructor have no inherited enumerable properties and that\n     * there are no `Object.prototype` extensions.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     */\n    function shimIsPlainObject(value) {\n      var ctor, result;\n\n      // avoid non Object objects, `arguments` objects, and DOM elements\n      if (!(value && toString.call(value) == objectClass) || (ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor))) {\n        return false;\n      }\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      forIn(value, function (value, key) {\n        result = key;\n      });\n      return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Used by `unescape` to convert HTML entities to characters.\n     *\n     * @private\n     * @param {string} match The matched character to unescape.\n     * @returns {string} Returns the unescaped character.\n     */\n    function unescapeHtmlChar(match) {\n      return htmlUnescapes[match];\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `value` is an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.\n     * @example\n     *\n     * (function() { return _.isArguments(arguments); })(1, 2, 3);\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return value && typeof value == 'object' && typeof value.length == 'number' && toString.call(value) == argsClass || false;\n    }\n\n    /**\n     * Checks if `value` is an array.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an array, else `false`.\n     * @example\n     *\n     * (function() { return _.isArray(arguments); })();\n     * // => false\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     */\n    var isArray = nativeIsArray || function (value) {\n      return value && typeof value == 'object' && typeof value.length == 'number' && toString.call(value) == arrayClass || false;\n    };\n\n    /**\n     * A fallback implementation of `Object.keys` which produces an array of the\n     * given object's own enumerable property names.\n     *\n     * @private\n     * @type Function\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names.\n     */\n    var shimKeys = function (object) {\n      var index,\n        iterable = object,\n        result = [];\n      if (!iterable) return result;\n      if (!objectTypes[typeof object]) return result;\n      for (index in iterable) {\n        if (hasOwnProperty.call(iterable, index)) {\n          result.push(index);\n        }\n      }\n      return result;\n    };\n\n    /**\n     * Creates an array composed of the own enumerable property names of an object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names.\n     * @example\n     *\n     * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)\n     */\n    var keys = !nativeKeys ? shimKeys : function (object) {\n      if (!isObject(object)) {\n        return [];\n      }\n      return nativeKeys(object);\n    };\n\n    /**\n     * Used to convert characters to HTML entities:\n     *\n     * Though the `>` character is escaped for symmetry, characters like `>` and `/`\n     * don't require escaping in HTML and have no special meaning unless they're part\n     * of a tag or an unquoted attribute value.\n     * http://mathiasbynens.be/notes/ambiguous-ampersands (under \"semi-related fun fact\")\n     */\n    var htmlEscapes = {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#39;'\n    };\n\n    /** Used to convert HTML entities to characters */\n    var htmlUnescapes = invert(htmlEscapes);\n\n    /** Used to match HTML entities and HTML characters */\n    var reEscapedHtml = RegExp('(' + keys(htmlUnescapes).join('|') + ')', 'g'),\n      reUnescapedHtml = RegExp('[' + keys(htmlEscapes).join('') + ']', 'g');\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources will overwrite property assignments of previous\n     * sources. If a callback is provided it will be executed to produce the\n     * assigned values. The callback is bound to `thisArg` and invoked with two\n     * arguments; (objectValue, sourceValue).\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @alias extend\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param {Function} [callback] The function to customize assigning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });\n     * // => { 'name': 'fred', 'employer': 'slate' }\n     *\n     * var defaults = _.partialRight(_.assign, function(a, b) {\n     *   return typeof a == 'undefined' ? b : a;\n     * });\n     *\n     * var object = { 'name': 'barney' };\n     * defaults(object, { 'name': 'fred', 'employer': 'slate' });\n     * // => { 'name': 'barney', 'employer': 'slate' }\n     */\n    var assign = function (object, source, guard) {\n      var index,\n        iterable = object,\n        result = iterable;\n      if (!iterable) return result;\n      var args = arguments,\n        argsIndex = 0,\n        argsLength = typeof guard == 'number' ? 2 : args.length;\n      if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\n        var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);\n      } else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\n        callback = args[--argsLength];\n      }\n      while (++argsIndex < argsLength) {\n        iterable = args[argsIndex];\n        if (iterable && objectTypes[typeof iterable]) {\n          var ownIndex = -1,\n            ownProps = objectTypes[typeof iterable] && keys(iterable),\n            length = ownProps ? ownProps.length : 0;\n          while (++ownIndex < length) {\n            index = ownProps[ownIndex];\n            result[index] = callback ? callback(result[index], iterable[index]) : iterable[index];\n          }\n        }\n      }\n      return result;\n    };\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects will also\n     * be cloned, otherwise they will be assigned by reference. If a callback\n     * is provided it will be executed to produce the cloned values. If the\n     * callback returns `undefined` cloning will be handled by the method instead.\n     * The callback is bound to `thisArg` and invoked with one argument; (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep=false] Specify a deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * var shallow = _.clone(characters);\n     * shallow[0] === characters[0];\n     * // => true\n     *\n     * var deep = _.clone(characters, true);\n     * deep[0] === characters[0];\n     * // => false\n     *\n     * _.mixin({\n     *   'clone': _.partialRight(_.clone, function(value) {\n     *     return _.isElement(value) ? value.cloneNode(false) : undefined;\n     *   })\n     * });\n     *\n     * var clone = _.clone(document.body);\n     * clone.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, callback, thisArg) {\n      // allows working with \"Collections\" methods without using their `index`\n      // and `collection` arguments for `isDeep` and `callback`\n      if (typeof isDeep != 'boolean' && isDeep != null) {\n        thisArg = callback;\n        callback = isDeep;\n        isDeep = false;\n      }\n      return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n    }\n\n    /**\n     * Creates a deep clone of `value`. If a callback is provided it will be\n     * executed to produce the cloned values. If the callback returns `undefined`\n     * cloning will be handled by the method instead. The callback is bound to\n     * `thisArg` and invoked with one argument; (value).\n     *\n     * Note: This method is loosely based on the structured clone algorithm. Functions\n     * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and\n     * objects created by constructors other than `Object` are cloned to plain `Object` objects.\n     * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * var deep = _.cloneDeep(characters);\n     * deep[0] === characters[0];\n     * // => false\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'node': element\n     * };\n     *\n     * var clone = _.cloneDeep(view, function(value) {\n     *   return _.isElement(value) ? value.cloneNode(true) : undefined;\n     * });\n     *\n     * clone.node == view.node;\n     * // => false\n     */\n    function cloneDeep(value, callback, thisArg) {\n      return baseClone(value, true, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n    }\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, { 'constructor': Circle });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? assign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional defaults of the same property will be ignored.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param- {Object} [guard] Allows working with `_.reduce` without using its\n     *  `key` and `object` arguments as sources.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * var object = { 'name': 'barney' };\n     * _.defaults(object, { 'name': 'fred', 'employer': 'slate' });\n     * // => { 'name': 'barney', 'employer': 'slate' }\n     */\n    var defaults = function (object, source, guard) {\n      var index,\n        iterable = object,\n        result = iterable;\n      if (!iterable) return result;\n      var args = arguments,\n        argsIndex = 0,\n        argsLength = typeof guard == 'number' ? 2 : args.length;\n      while (++argsIndex < argsLength) {\n        iterable = args[argsIndex];\n        if (iterable && objectTypes[typeof iterable]) {\n          var ownIndex = -1,\n            ownProps = objectTypes[typeof iterable] && keys(iterable),\n            length = ownProps ? ownProps.length : 0;\n          while (++ownIndex < length) {\n            index = ownProps[ownIndex];\n            if (typeof result[index] == 'undefined') result[index] = iterable[index];\n          }\n        }\n      }\n      return result;\n    };\n\n    /**\n     * This method is like `_.findIndex` except that it returns the key of the\n     * first element that passes the callback check, instead of the element itself.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [callback=identity] The function called per\n     *  iteration. If a property name or object is provided it will be used to\n     *  create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {string|undefined} Returns the key of the found element, else `undefined`.\n     * @example\n     *\n     * var characters = {\n     *   'barney': {  'age': 36, 'blocked': false },\n     *   'fred': {    'age': 40, 'blocked': true },\n     *   'pebbles': { 'age': 1,  'blocked': false }\n     * };\n     *\n     * _.findKey(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (property order is not guaranteed across environments)\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findKey(characters, { 'age': 1 });\n     * // => 'pebbles'\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findKey(characters, 'blocked');\n     * // => 'fred'\n     */\n    function findKey(object, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forOwn(object, function (value, key, object) {\n        if (callback(value, key, object)) {\n          result = key;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [callback=identity] The function called per\n     *  iteration. If a property name or object is provided it will be used to\n     *  create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {string|undefined} Returns the key of the found element, else `undefined`.\n     * @example\n     *\n     * var characters = {\n     *   'barney': {  'age': 36, 'blocked': true },\n     *   'fred': {    'age': 40, 'blocked': false },\n     *   'pebbles': { 'age': 1,  'blocked': true }\n     * };\n     *\n     * _.findLastKey(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles`, assuming `_.findKey` returns `barney`\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findLastKey(characters, { 'age': 40 });\n     * // => 'fred'\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findLastKey(characters, 'blocked');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forOwnRight(object, function (value, key, object) {\n        if (callback(value, key, object)) {\n          result = key;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object,\n     * executing the callback for each property. The callback is bound to `thisArg`\n     * and invoked with three arguments; (value, key, object). Callbacks may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * Shape.prototype.move = function(x, y) {\n     *   this.x += x;\n     *   this.y += y;\n     * };\n     *\n     * _.forIn(new Shape, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)\n     */\n    var forIn = function (collection, callback, thisArg) {\n      var index,\n        iterable = collection,\n        result = iterable;\n      if (!iterable) return result;\n      if (!objectTypes[typeof iterable]) return result;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n      for (index in iterable) {\n        if (callback(iterable[index], index, collection) === false) return result;\n      }\n      return result;\n    };\n\n    /**\n     * This method is like `_.forIn` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * Shape.prototype.move = function(x, y) {\n     *   this.x += x;\n     *   this.y += y;\n     * };\n     *\n     * _.forInRight(new Shape, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'move', 'y', and 'x' assuming `_.forIn ` logs 'x', 'y', and 'move'\n     */\n    function forInRight(object, callback, thisArg) {\n      var pairs = [];\n      forIn(object, function (value, key) {\n        pairs.push(key, value);\n      });\n      var length = pairs.length;\n      callback = baseCreateCallback(callback, thisArg, 3);\n      while (length--) {\n        if (callback(pairs[length--], pairs[length], object) === false) {\n          break;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Iterates over own enumerable properties of an object, executing the callback\n     * for each property. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, key, object). Callbacks may exit iteration early by\n     * explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n     *   console.log(key);\n     * });\n     * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)\n     */\n    var forOwn = function (collection, callback, thisArg) {\n      var index,\n        iterable = collection,\n        result = iterable;\n      if (!iterable) return result;\n      if (!objectTypes[typeof iterable]) return result;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n      var ownIndex = -1,\n        ownProps = objectTypes[typeof iterable] && keys(iterable),\n        length = ownProps ? ownProps.length : 0;\n      while (++ownIndex < length) {\n        index = ownProps[ownIndex];\n        if (callback(iterable[index], index, collection) === false) return result;\n      }\n      return result;\n    };\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.forOwnRight({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'length', '1', and '0' assuming `_.forOwn` logs '0', '1', and 'length'\n     */\n    function forOwnRight(object, callback, thisArg) {\n      var props = keys(object),\n        length = props.length;\n      callback = baseCreateCallback(callback, thisArg, 3);\n      while (length--) {\n        var key = props[length];\n        if (callback(object[key], key, object) === false) {\n          break;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Creates a sorted array of property names of all enumerable properties,\n     * own and inherited, of `object` that have function values.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names that have function values.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]\n     */\n    function functions(object) {\n      var result = [];\n      forIn(object, function (value, key) {\n        if (isFunction(value)) {\n          result.push(key);\n        }\n      });\n      return result.sort();\n    }\n\n    /**\n     * Checks if the specified property name exists as a direct property of `object`,\n     * instead of an inherited property.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @param {string} key The name of the property to check.\n     * @returns {boolean} Returns `true` if key is a direct property, else `false`.\n     * @example\n     *\n     * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');\n     * // => true\n     */\n    function has(object, key) {\n      return object ? hasOwnProperty.call(object, key) : false;\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of the given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the created inverted object.\n     * @example\n     *\n     * _.invert({ 'first': 'fred', 'second': 'barney' });\n     * // => { 'fred': 'first', 'barney': 'second' }\n     */\n    function invert(object) {\n      var index = -1,\n        props = keys(object),\n        length = props.length,\n        result = {};\n      while (++index < length) {\n        var key = props[index];\n        result[object[key]] = key;\n      }\n      return result;\n    }\n\n    /**\n     * Checks if `value` is a boolean value.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a boolean value, else `false`.\n     * @example\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || value && typeof value == 'object' && toString.call(value) == boolClass || false;\n    }\n\n    /**\n     * Checks if `value` is a date.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a date, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     */\n    function isDate(value) {\n      return value && typeof value == 'object' && toString.call(value) == dateClass || false;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     */\n    function isElement(value) {\n      return value && value.nodeType === 1 || false;\n    }\n\n    /**\n     * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a\n     * length of `0` and objects with no own enumerable properties are considered\n     * \"empty\".\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if the `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({});\n     * // => true\n     *\n     * _.isEmpty('');\n     * // => true\n     */\n    function isEmpty(value) {\n      var result = true;\n      if (!value) {\n        return result;\n      }\n      var className = toString.call(value),\n        length = value.length;\n      if (className == arrayClass || className == stringClass || className == argsClass || className == objectClass && typeof length == 'number' && isFunction(value.splice)) {\n        return !length;\n      }\n      forOwn(value, function () {\n        return result = false;\n      });\n      return result;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent to each other. If a callback is provided it will be executed\n     * to compare values. If the callback returns `undefined` comparisons will\n     * be handled by the method instead. The callback is bound to `thisArg` and\n     * invoked with two arguments; (a, b).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} a The value to compare.\n     * @param {*} b The other value to compare.\n     * @param {Function} [callback] The function to customize comparing values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * var copy = { 'name': 'fred' };\n     *\n     * object == copy;\n     * // => false\n     *\n     * _.isEqual(object, copy);\n     * // => true\n     *\n     * var words = ['hello', 'goodbye'];\n     * var otherWords = ['hi', 'goodbye'];\n     *\n     * _.isEqual(words, otherWords, function(a, b) {\n     *   var reGreet = /^(?:hello|hi)$/i,\n     *       aGreet = _.isString(a) && reGreet.test(a),\n     *       bGreet = _.isString(b) && reGreet.test(b);\n     *\n     *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;\n     * });\n     * // => true\n     */\n    function isEqual(a, b, callback, thisArg) {\n      return baseIsEqual(a, b, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 2));\n    }\n\n    /**\n     * Checks if `value` is, or can be coerced to, a finite number.\n     *\n     * Note: This is not the same as native `isFinite` which will return true for\n     * booleans and empty strings. See http://es5.github.io/#x15.1.2.5.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is finite, else `false`.\n     * @example\n     *\n     * _.isFinite(-101);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => true\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite('');\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));\n    }\n\n    /**\n     * Checks if `value` is a function.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     */\n    function isFunction(value) {\n      return typeof value == 'function';\n    }\n\n    /**\n     * Checks if `value` is the language type of Object.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // check if the value is the ECMAScript language type of Object\n      // http://es5.github.io/#x8\n      // and avoid a V8 bug\n      // http://code.google.com/p/v8/issues/detail?id=2291\n      return !!(value && objectTypes[typeof value]);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * Note: This is not the same as native `isNaN` which will return `true` for\n     * `undefined` and other non-numeric values. See http://es5.github.io/#x15.1.2.4.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // `NaN` as a primitive is the only value that is not equal to itself\n      // (perform the [[Class]] check first to avoid errors with some host objects in IE)\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(undefined);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is a number.\n     *\n     * Note: `NaN` is considered a number. See http://es5.github.io/#x8.5.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4 * 5);\n     * // => true\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || value && typeof value == 'object' && toString.call(value) == numberClass || false;\n    }\n\n    /**\n     * Checks if `value` is an object created by the `Object` constructor.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * _.isPlainObject(new Shape);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     */\n    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function (value) {\n      if (!(value && toString.call(value) == objectClass)) {\n        return false;\n      }\n      var valueOf = value.valueOf,\n        objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n      return objProto ? value == objProto || getPrototypeOf(value) == objProto : shimIsPlainObject(value);\n    };\n\n    /**\n     * Checks if `value` is a regular expression.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a regular expression, else `false`.\n     * @example\n     *\n     * _.isRegExp(/fred/);\n     * // => true\n     */\n    function isRegExp(value) {\n      return value && typeof value == 'object' && toString.call(value) == regexpClass || false;\n    }\n\n    /**\n     * Checks if `value` is a string.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('fred');\n     * // => true\n     */\n    function isString(value) {\n      return typeof value == 'string' || value && typeof value == 'object' && toString.call(value) == stringClass || false;\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     */\n    function isUndefined(value) {\n      return typeof value == 'undefined';\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through the callback.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new object with values of the results of each `callback` execution.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2, 'c': 3} , function(num) { return num * 3; });\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     *\n     * var characters = {\n     *   'fred': { 'name': 'fred', 'age': 40 },\n     *   'pebbles': { 'name': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.mapValues(characters, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 }\n     */\n    function mapValues(object, callback, thisArg) {\n      var result = {};\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forOwn(object, function (value, key, object) {\n        result[key] = callback(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * will overwrite property assignments of previous sources. If a callback is\n     * provided it will be executed to produce the merged values of the destination\n     * and source properties. If the callback returns `undefined` merging will\n     * be handled by the method instead. The callback is bound to `thisArg` and\n     * invoked with two arguments; (objectValue, sourceValue).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param {Function} [callback] The function to customize merging properties.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * var names = {\n     *   'characters': [\n     *     { 'name': 'barney' },\n     *     { 'name': 'fred' }\n     *   ]\n     * };\n     *\n     * var ages = {\n     *   'characters': [\n     *     { 'age': 36 },\n     *     { 'age': 40 }\n     *   ]\n     * };\n     *\n     * _.merge(names, ages);\n     * // => { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }\n     *\n     * var food = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var otherFood = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(food, otherFood, function(a, b) {\n     *   return _.isArray(a) ? a.concat(b) : undefined;\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }\n     */\n    function merge(object) {\n      var args = arguments,\n        length = 2;\n      if (!isObject(object)) {\n        return object;\n      }\n      // allows working with `_.reduce` and `_.reduceRight` without using\n      // their `index` and `collection` arguments\n      if (typeof args[2] != 'number') {\n        length = args.length;\n      }\n      if (length > 3 && typeof args[length - 2] == 'function') {\n        var callback = baseCreateCallback(args[--length - 1], args[length--], 2);\n      } else if (length > 2 && typeof args[length - 1] == 'function') {\n        callback = args[--length];\n      }\n      var sources = slice(arguments, 1, length),\n        index = -1,\n        stackA = getArray(),\n        stackB = getArray();\n      while (++index < length) {\n        baseMerge(object, sources[index], callback, stackA, stackB);\n      }\n      releaseArray(stackA);\n      releaseArray(stackB);\n      return object;\n    }\n\n    /**\n     * Creates a shallow clone of `object` excluding the specified properties.\n     * Property names may be specified as individual arguments or as arrays of\n     * property names. If a callback is provided it will be executed for each\n     * property of `object` omitting the properties the callback returns truey\n     * for. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The source object.\n     * @param {Function|...string|string[]} [callback] The properties to omit or the\n     *  function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns an object without the omitted properties.\n     * @example\n     *\n     * _.omit({ 'name': 'fred', 'age': 40 }, 'age');\n     * // => { 'name': 'fred' }\n     *\n     * _.omit({ 'name': 'fred', 'age': 40 }, function(value) {\n     *   return typeof value == 'number';\n     * });\n     * // => { 'name': 'fred' }\n     */\n    function omit(object, callback, thisArg) {\n      var result = {};\n      if (typeof callback != 'function') {\n        var props = [];\n        forIn(object, function (value, key) {\n          props.push(key);\n        });\n        props = baseDifference(props, baseFlatten(arguments, true, false, 1));\n        var index = -1,\n          length = props.length;\n        while (++index < length) {\n          var key = props[index];\n          result[key] = object[key];\n        }\n      } else {\n        callback = lodash.createCallback(callback, thisArg, 3);\n        forIn(object, function (value, key, object) {\n          if (!callback(value, key, object)) {\n            result[key] = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Creates a two dimensional array of an object's key-value pairs,\n     * i.e. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (property order is not guaranteed across environments)\n     */\n    function pairs(object) {\n      var index = -1,\n        props = keys(object),\n        length = props.length,\n        result = Array(length);\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a shallow clone of `object` composed of the specified properties.\n     * Property names may be specified as individual arguments or as arrays of\n     * property names. If a callback is provided it will be executed for each\n     * property of `object` picking the properties the callback returns truey\n     * for. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The source object.\n     * @param {Function|...string|string[]} [callback] The function called per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns an object composed of the picked properties.\n     * @example\n     *\n     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, 'name');\n     * // => { 'name': 'fred' }\n     *\n     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, function(value, key) {\n     *   return key.charAt(0) != '_';\n     * });\n     * // => { 'name': 'fred' }\n     */\n    function pick(object, callback, thisArg) {\n      var result = {};\n      if (typeof callback != 'function') {\n        var index = -1,\n          props = baseFlatten(arguments, true, false, 1),\n          length = isObject(object) ? props.length : 0;\n        while (++index < length) {\n          var key = props[index];\n          if (key in object) {\n            result[key] = object[key];\n          }\n        }\n      } else {\n        callback = lodash.createCallback(callback, thisArg, 3);\n        forIn(object, function (value, key, object) {\n          if (callback(value, key, object)) {\n            result[key] = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * An alternative to `_.reduce` this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable properties through a callback, with each callback execution\n     * potentially mutating the `accumulator` object. The callback is bound to\n     * `thisArg` and invoked with four arguments; (accumulator, value, key, object).\n     * Callbacks may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var squares = _.transform([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], function(result, num) {\n     *   num *= num;\n     *   if (num % 2) {\n     *     return result.push(num) < 3;\n     *   }\n     * });\n     * // => [1, 9, 25]\n     *\n     * var mapped = _.transform({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n     *   result[key] = num * 3;\n     * });\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     */\n    function transform(object, callback, accumulator, thisArg) {\n      var isArr = isArray(object);\n      if (accumulator == null) {\n        if (isArr) {\n          accumulator = [];\n        } else {\n          var ctor = object && object.constructor,\n            proto = ctor && ctor.prototype;\n          accumulator = baseCreate(proto);\n        }\n      }\n      if (callback) {\n        callback = lodash.createCallback(callback, thisArg, 4);\n        (isArr ? forEach : forOwn)(object, function (value, index, object) {\n          return callback(accumulator, value, index, object);\n        });\n      }\n      return accumulator;\n    }\n\n    /**\n     * Creates an array composed of the own enumerable property values of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property values.\n     * @example\n     *\n     * _.values({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => [1, 2, 3] (property order is not guaranteed across environments)\n     */\n    function values(object) {\n      var index = -1,\n        props = keys(object),\n        length = props.length,\n        result = Array(length);\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements from the specified indexes, or keys, of the\n     * `collection`. Indexes may be specified as individual arguments or as arrays\n     * of indexes.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [index] The indexes of `collection`\n     *   to retrieve, specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns a new array of elements corresponding to the\n     *  provided indexes.\n     * @example\n     *\n     * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);\n     * // => ['a', 'c', 'e']\n     *\n     * _.at(['fred', 'barney', 'pebbles'], 0, 2);\n     * // => ['fred', 'pebbles']\n     */\n    function at(collection) {\n      var args = arguments,\n        index = -1,\n        props = baseFlatten(args, true, false, 1),\n        length = args[2] && args[2][args[1]] === collection ? 1 : props.length,\n        result = Array(length);\n      while (++index < length) {\n        result[index] = collection[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * Checks if a given value is present in a collection using strict equality\n     * for comparisons, i.e. `===`. If `fromIndex` is negative, it is used as the\n     * offset from the end of the collection.\n     *\n     * @static\n     * @memberOf _\n     * @alias include\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {*} target The value to check for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {boolean} Returns `true` if the `target` element is found, else `false`.\n     * @example\n     *\n     * _.contains([1, 2, 3], 1);\n     * // => true\n     *\n     * _.contains([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.contains({ 'name': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.contains('pebbles', 'eb');\n     * // => true\n     */\n    function contains(collection, target, fromIndex) {\n      var index = -1,\n        indexOf = getIndexOf(),\n        length = collection ? collection.length : 0,\n        result = false;\n      fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;\n      if (isArray(collection)) {\n        result = indexOf(collection, target, fromIndex) > -1;\n      } else if (typeof length == 'number') {\n        result = (isString(collection) ? collection.indexOf(target, fromIndex) : indexOf(collection, target, fromIndex)) > -1;\n      } else {\n        forOwn(collection, function (value) {\n          if (++index >= fromIndex) {\n            return !(result = value === target);\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through the callback. The corresponding value\n     * of each key is the number of times the key was returned by the callback.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function (result, value, key) {\n      hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1;\n    });\n\n    /**\n     * Checks if the given callback returns truey value for **all** elements of\n     * a collection. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if all elements passed the callback check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes']);\n     * // => false\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.every(characters, 'age');\n     * // => true\n     *\n     * // using \"_.where\" callback shorthand\n     * _.every(characters, { 'age': 36 });\n     * // => false\n     */\n    function every(collection, callback, thisArg) {\n      var result = true;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      var index = -1,\n        length = collection ? collection.length : 0;\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if (!(result = !!callback(collection[index], index, collection))) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, function (value, index, collection) {\n          return result = !!callback(value, index, collection);\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, returning an array of all elements\n     * the callback returns truey for. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of elements that passed the callback check.\n     * @example\n     *\n     * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n     * // => [2, 4, 6]\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.filter(characters, 'blocked');\n     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.filter(characters, { 'age': 36 });\n     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]\n     */\n    function filter(collection, callback, thisArg) {\n      var result = [];\n      callback = lodash.createCallback(callback, thisArg, 3);\n      var index = -1,\n        length = collection ? collection.length : 0;\n      if (typeof length == 'number') {\n        while (++index < length) {\n          var value = collection[index];\n          if (callback(value, index, collection)) {\n            result.push(value);\n          }\n        }\n      } else {\n        forOwn(collection, function (value, index, collection) {\n          if (callback(value, index, collection)) {\n            result.push(value);\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, returning the first element that\n     * the callback returns truey for. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect, findWhere\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the found element, else `undefined`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': false },\n     *   { 'name': 'fred',    'age': 40, 'blocked': true },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }\n     * ];\n     *\n     * _.find(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => { 'name': 'barney', 'age': 36, 'blocked': false }\n     *\n     * // using \"_.where\" callback shorthand\n     * _.find(characters, { 'age': 1 });\n     * // =>  { 'name': 'pebbles', 'age': 1, 'blocked': false }\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.find(characters, 'blocked');\n     * // => { 'name': 'fred', 'age': 40, 'blocked': true }\n     */\n    function find(collection, callback, thisArg) {\n      callback = lodash.createCallback(callback, thisArg, 3);\n      var index = -1,\n        length = collection ? collection.length : 0;\n      if (typeof length == 'number') {\n        while (++index < length) {\n          var value = collection[index];\n          if (callback(value, index, collection)) {\n            return value;\n          }\n        }\n      } else {\n        var result;\n        forOwn(collection, function (value, index, collection) {\n          if (callback(value, index, collection)) {\n            result = value;\n            return false;\n          }\n        });\n        return result;\n      }\n    }\n\n    /**\n     * This method is like `_.find` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the found element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(num) {\n     *   return num % 2 == 1;\n     * });\n     * // => 3\n     */\n    function findLast(collection, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forEachRight(collection, function (value, index, collection) {\n        if (callback(value, index, collection)) {\n          result = value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, executing the callback for each\n     * element. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection). Callbacks may exit iteration early by\n     * explicitly returning `false`.\n     *\n     * Note: As with other \"Collections\" methods, objects with a `length` property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');\n     * // => logs each number and returns '1,2,3'\n     *\n     * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });\n     * // => logs each number and returns the object (property order is not guaranteed across environments)\n     */\n    function forEach(collection, callback, thisArg) {\n      var index = -1,\n        length = collection ? collection.length : 0;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if (callback(collection[index], index, collection) === false) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, callback);\n      }\n      return collection;\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2, 3]).forEachRight(function(num) { console.log(num); }).join(',');\n     * // => logs each number from right to left and returns '3,2,1'\n     */\n    function forEachRight(collection, callback, thisArg) {\n      var length = collection ? collection.length : 0;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        while (length--) {\n          if (callback(collection[length], length, collection) === false) {\n            break;\n          }\n        }\n      } else {\n        var props = keys(collection);\n        length = props.length;\n        forOwn(collection, function (value, key, collection) {\n          key = props ? props[--length] : --length;\n          return callback(collection[key], key, collection);\n        });\n      }\n      return collection;\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of a collection through the callback. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function (result, value, key) {\n      (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of the collection through the given callback. The corresponding\n     * value of each key is the last element responsible for generating the key.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keys = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keys, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keys, function(key) { return String.fromCharCode(key.code); });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(characters, function(key) { this.fromCharCode(key.code); }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function (result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method named by `methodName` on each element in the `collection`\n     * returning an array of the results of each invoked method. Additional arguments\n     * will be provided to each invoked method. If `methodName` is a function it\n     * will be invoked for, and `this` bound to, each element in the `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|string} methodName The name of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [arg] Arguments to invoke the method with.\n     * @returns {Array} Returns a new array of the results of each invoked method.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    function invoke(collection, methodName) {\n      var args = slice(arguments, 2),\n        index = -1,\n        isFunc = typeof methodName == 'function',\n        length = collection ? collection.length : 0,\n        result = Array(typeof length == 'number' ? length : 0);\n      forEach(collection, function (value) {\n        result[++index] = (isFunc ? methodName : value[methodName]).apply(value, args);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an array of values by running each element in the collection\n     * through the callback. The callback is bound to `thisArg` and invoked with\n     * three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of the results of each `callback` execution.\n     * @example\n     *\n     * _.map([1, 2, 3], function(num) { return num * 3; });\n     * // => [3, 6, 9]\n     *\n     * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });\n     * // => [3, 6, 9] (property order is not guaranteed across environments)\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.map(characters, 'name');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, callback, thisArg) {\n      var index = -1,\n        length = collection ? collection.length : 0;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        var result = Array(length);\n        while (++index < length) {\n          result[index] = callback(collection[index], index, collection);\n        }\n      } else {\n        result = [];\n        forOwn(collection, function (value, key, collection) {\n          result[++index] = callback(value, key, collection);\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the maximum value of a collection. If the collection is empty or\n     * falsey `-Infinity` is returned. If a callback is provided it will be executed\n     * for each value in the collection to generate the criterion by which the value\n     * is ranked. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(characters, function(chr) { return chr.age; });\n     * // => { 'name': 'fred', 'age': 40 };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.max(characters, 'age');\n     * // => { 'name': 'fred', 'age': 40 };\n     */\n    function max(collection, callback, thisArg) {\n      var computed = -Infinity,\n        result = computed;\n\n      // allows working with functions like `_.map` without using\n      // their `index` argument as a callback\n      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {\n        callback = null;\n      }\n      if (callback == null && isArray(collection)) {\n        var index = -1,\n          length = collection.length;\n        while (++index < length) {\n          var value = collection[index];\n          if (value > result) {\n            result = value;\n          }\n        }\n      } else {\n        callback = callback == null && isString(collection) ? charAtCallback : lodash.createCallback(callback, thisArg, 3);\n        forEach(collection, function (value, index, collection) {\n          var current = callback(value, index, collection);\n          if (current > computed) {\n            computed = current;\n            result = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the minimum value of a collection. If the collection is empty or\n     * falsey `Infinity` is returned. If a callback is provided it will be executed\n     * for each value in the collection to generate the criterion by which the value\n     * is ranked. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(characters, function(chr) { return chr.age; });\n     * // => { 'name': 'barney', 'age': 36 };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.min(characters, 'age');\n     * // => { 'name': 'barney', 'age': 36 };\n     */\n    function min(collection, callback, thisArg) {\n      var computed = Infinity,\n        result = computed;\n\n      // allows working with functions like `_.map` without using\n      // their `index` argument as a callback\n      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {\n        callback = null;\n      }\n      if (callback == null && isArray(collection)) {\n        var index = -1,\n          length = collection.length;\n        while (++index < length) {\n          var value = collection[index];\n          if (value < result) {\n            result = value;\n          }\n        }\n      } else {\n        callback = callback == null && isString(collection) ? charAtCallback : lodash.createCallback(callback, thisArg, 3);\n        forEach(collection, function (value, index, collection) {\n          var current = callback(value, index, collection);\n          if (current < computed) {\n            computed = current;\n            result = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the value of a specified property from all elements in the collection.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {string} property The name of the property to pluck.\n     * @returns {Array} Returns a new array of property values.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(characters, 'name');\n     * // => ['barney', 'fred']\n     */\n    var pluck = map;\n\n    /**\n     * Reduces a collection to a value which is the accumulated result of running\n     * each element in the collection through the callback, where each successive\n     * callback execution consumes the return value of the previous execution. If\n     * `accumulator` is not provided the first element of the collection will be\n     * used as the initial `accumulator` value. The callback is bound to `thisArg`\n     * and invoked with four arguments; (accumulator, value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] Initial value of the accumulator.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var sum = _.reduce([1, 2, 3], function(sum, num) {\n     *   return sum + num;\n     * });\n     * // => 6\n     *\n     * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n     *   result[key] = num * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     */\n    function reduce(collection, callback, accumulator, thisArg) {\n      if (!collection) return accumulator;\n      var noaccum = arguments.length < 3;\n      callback = lodash.createCallback(callback, thisArg, 4);\n      var index = -1,\n        length = collection.length;\n      if (typeof length == 'number') {\n        if (noaccum) {\n          accumulator = collection[++index];\n        }\n        while (++index < length) {\n          accumulator = callback(accumulator, collection[index], index, collection);\n        }\n      } else {\n        forOwn(collection, function (value, index, collection) {\n          accumulator = noaccum ? (noaccum = false, value) : callback(accumulator, value, index, collection);\n        });\n      }\n      return accumulator;\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] Initial value of the accumulator.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var list = [[0, 1], [2, 3], [4, 5]];\n     * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, callback, accumulator, thisArg) {\n      var noaccum = arguments.length < 3;\n      callback = lodash.createCallback(callback, thisArg, 4);\n      forEachRight(collection, function (value, index, collection) {\n        accumulator = noaccum ? (noaccum = false, value) : callback(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The opposite of `_.filter` this method returns the elements of a\n     * collection that the callback does **not** return truey for.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of elements that failed the callback check.\n     * @example\n     *\n     * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n     * // => [1, 3, 5]\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.reject(characters, 'blocked');\n     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.reject(characters, { 'age': 36 });\n     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]\n     */\n    function reject(collection, callback, thisArg) {\n      callback = lodash.createCallback(callback, thisArg, 3);\n      return filter(collection, function (value, index, collection) {\n        return !callback(value, index, collection);\n      });\n    }\n\n    /**\n     * Retrieves a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Allows working with functions like `_.map`\n     *  without using their `index` arguments as `n`.\n     * @returns {Array} Returns the random sample(s) of `collection`.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (collection && typeof collection.length != 'number') {\n        collection = values(collection);\n      }\n      if (n == null || guard) {\n        return collection ? collection[baseRandom(0, collection.length - 1)] : undefined;\n      }\n      var result = shuffle(collection);\n      result.length = nativeMin(nativeMax(0, n), result.length);\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the Fisher-Yates\n     * shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns a new shuffled collection.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4, 5, 6]);\n     * // => [4, 1, 6, 3, 5, 2]\n     */\n    function shuffle(collection) {\n      var index = -1,\n        length = collection ? collection.length : 0,\n        result = Array(typeof length == 'number' ? length : 0);\n      forEach(collection, function (value) {\n        var rand = baseRandom(0, ++index);\n        result[index] = result[rand];\n        result[rand] = value;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the size of the `collection` by returning `collection.length` for arrays\n     * and array-like objects or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns `collection.length` or number of own enumerable properties.\n     * @example\n     *\n     * _.size([1, 2]);\n     * // => 2\n     *\n     * _.size({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => 3\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? collection.length : 0;\n      return typeof length == 'number' ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if the callback returns a truey value for **any** element of a\n     * collection. The function returns as soon as it finds a passing value and\n     * does not iterate over the entire collection. The callback is bound to\n     * `thisArg` and invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if any element passed the callback check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.some(characters, 'blocked');\n     * // => true\n     *\n     * // using \"_.where\" callback shorthand\n     * _.some(characters, { 'age': 1 });\n     * // => false\n     */\n    function some(collection, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      var index = -1,\n        length = collection ? collection.length : 0;\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if (result = callback(collection[index], index, collection)) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, function (value, index, collection) {\n          return !(result = callback(value, index, collection));\n        });\n      }\n      return !!result;\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through the callback. This method\n     * performs a stable sort, that is, it will preserve the original sort order\n     * of equal elements. The callback is bound to `thisArg` and invoked with\n     * three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an array of property names is provided for `callback` the collection\n     * will be sorted by each property value.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of sorted elements.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);\n     * // => [3, 1, 2]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36 },\n     *   { 'name': 'fred',    'age': 40 },\n     *   { 'name': 'barney',  'age': 26 },\n     *   { 'name': 'fred',    'age': 30 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.map(_.sortBy(characters, 'age'), _.values);\n     * // => [['barney', 26], ['fred', 30], ['barney', 36], ['fred', 40]]\n     *\n     * // sorting by multiple properties\n     * _.map(_.sortBy(characters, ['name', 'age']), _.values);\n     * // = > [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]\n     */\n    function sortBy(collection, callback, thisArg) {\n      var index = -1,\n        isArr = isArray(callback),\n        length = collection ? collection.length : 0,\n        result = Array(typeof length == 'number' ? length : 0);\n      if (!isArr) {\n        callback = lodash.createCallback(callback, thisArg, 3);\n      }\n      forEach(collection, function (value, key, collection) {\n        var object = result[++index] = getObject();\n        if (isArr) {\n          object.criteria = map(callback, function (key) {\n            return value[key];\n          });\n        } else {\n          (object.criteria = getArray())[0] = callback(value, key, collection);\n        }\n        object.index = index;\n        object.value = value;\n      });\n      length = result.length;\n      result.sort(compareAscending);\n      while (length--) {\n        var object = result[length];\n        result[length] = object.value;\n        if (!isArr) {\n          releaseArray(object.criteria);\n        }\n        releaseObject(object);\n      }\n      return result;\n    }\n\n    /**\n     * Converts the `collection` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to convert.\n     * @returns {Array} Returns the new converted array.\n     * @example\n     *\n     * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);\n     * // => [2, 3, 4]\n     */\n    function toArray(collection) {\n      if (collection && typeof collection.length == 'number') {\n        return slice(collection);\n      }\n      return values(collection);\n    }\n\n    /**\n     * Performs a deep comparison of each element in a `collection` to the given\n     * `properties` object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Object} props The object of property values to filter by.\n     * @returns {Array} Returns a new array of elements that have the given properties.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'pets': ['hoppy'] },\n     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.where(characters, { 'age': 36 });\n     * // => [{ 'name': 'barney', 'age': 36, 'pets': ['hoppy'] }]\n     *\n     * _.where(characters, { 'pets': ['dino'] });\n     * // => [{ 'name': 'fred', 'age': 40, 'pets': ['baby puss', 'dino'] }]\n     */\n    var where = filter;\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are all falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n        length = array ? array.length : 0,\n        result = [];\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array excluding all values of the provided arrays using strict\n     * equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to process.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);\n     * // => [1, 3, 4]\n     */\n    function difference(array) {\n      return baseDifference(array, baseFlatten(arguments, true, true, 1));\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element that passes the callback check, instead of the element itself.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': false },\n     *   { 'name': 'fred',    'age': 40, 'blocked': true },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }\n     * ];\n     *\n     * _.findIndex(characters, function(chr) {\n     *   return chr.age < 20;\n     * });\n     * // => 2\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findIndex(characters, { 'age': 36 });\n     * // => 0\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findIndex(characters, 'blocked');\n     * // => 1\n     */\n    function findIndex(array, callback, thisArg) {\n      var index = -1,\n        length = array ? array.length : 0;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (++index < length) {\n        if (callback(array[index], index, array)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': true },\n     *   { 'name': 'fred',    'age': 40, 'blocked': false },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': true }\n     * ];\n     *\n     * _.findLastIndex(characters, function(chr) {\n     *   return chr.age > 30;\n     * });\n     * // => 1\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findLastIndex(characters, { 'age': 36 });\n     * // => 0\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findLastIndex(characters, 'blocked');\n     * // => 2\n     */\n    function findLastIndex(array, callback, thisArg) {\n      var length = array ? array.length : 0;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (length--) {\n        if (callback(array[length], length, array)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Gets the first element or first `n` elements of an array. If a callback\n     * is provided elements at the beginning of the array are returned as long\n     * as the callback returns truey. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head, take\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback] The function called\n     *  per element or the number of elements to return. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the first element(s) of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.first([1, 2, 3], function(num) {\n     *   return num < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.first(characters, 'blocked');\n     * // => [{ 'name': 'barney', 'blocked': true, 'employer': 'slate' }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.pluck(_.first(characters, { 'employer': 'slate' }), 'name');\n     * // => ['barney', 'fred']\n     */\n    function first(array, callback, thisArg) {\n      var n = 0,\n        length = array ? array.length : 0;\n      if (typeof callback != 'number' && callback != null) {\n        var index = -1;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (++index < length && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback;\n        if (n == null || thisArg) {\n          return array ? array[0] : undefined;\n        }\n      }\n      return slice(array, 0, nativeMin(nativeMax(0, n), length));\n    }\n\n    /**\n     * Flattens a nested array (the nesting can be to any depth). If `isShallow`\n     * is truey, the array will only be flattened a single level. If a callback\n     * is provided each element of the array is passed through the callback before\n     * flattening. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2], [3, [[4]]]]);\n     * // => [1, 2, 3, 4];\n     *\n     * _.flatten([1, [2], [3, [[4]]]], true);\n     * // => [1, 2, 3, [[4]]];\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 30, 'pets': ['hoppy'] },\n     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.flatten(characters, 'pets');\n     * // => ['hoppy', 'baby puss', 'dino']\n     */\n    function flatten(array, isShallow, callback, thisArg) {\n      // juggle arguments\n      if (typeof isShallow != 'boolean' && isShallow != null) {\n        thisArg = callback;\n        callback = typeof isShallow != 'function' && thisArg && thisArg[isShallow] === array ? null : isShallow;\n        isShallow = false;\n      }\n      if (callback != null) {\n        array = map(array, callback, thisArg);\n      }\n      return baseFlatten(array, isShallow);\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found using\n     * strict equality for comparisons, i.e. `===`. If the array is already sorted\n     * providing `true` for `fromIndex` will run a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value or `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 3, 1, 2, 3], 2);\n     * // => 1\n     *\n     * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);\n     * // => 4\n     *\n     * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      if (typeof fromIndex == 'number') {\n        var length = array ? array.length : 0;\n        fromIndex = fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0;\n      } else if (fromIndex) {\n        var index = sortedIndex(array, value);\n        return array[index] === value ? index : -1;\n      }\n      return baseIndexOf(array, value, fromIndex);\n    }\n\n    /**\n     * Gets all but the last element or last `n` elements of an array. If a\n     * callback is provided elements at the end of the array are excluded from\n     * the result as long as the callback returns truey. The callback is bound\n     * to `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback=1] The function called\n     *  per element or the number of elements to exclude. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.initial([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.initial([1, 2, 3], function(num) {\n     *   return num > 1;\n     * });\n     * // => [1]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.initial(characters, 'blocked');\n     * // => [{ 'name': 'barney',  'blocked': false, 'employer': 'slate' }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.pluck(_.initial(characters, { 'employer': 'na' }), 'name');\n     * // => ['barney', 'fred']\n     */\n    function initial(array, callback, thisArg) {\n      var n = 0,\n        length = array ? array.length : 0;\n      if (typeof callback != 'number' && callback != null) {\n        var index = length;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (index-- && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback == null || thisArg ? 1 : callback || n;\n      }\n      return slice(array, 0, nativeMin(nativeMax(0, length - n), length));\n    }\n\n    /**\n     * Creates an array of unique values present in all provided arrays using\n     * strict equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of shared values.\n     * @example\n     *\n     * _.intersection([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n     * // => [1, 2]\n     */\n    function intersection() {\n      var args = [],\n        argsIndex = -1,\n        argsLength = arguments.length,\n        caches = getArray(),\n        indexOf = getIndexOf(),\n        trustIndexOf = indexOf === baseIndexOf,\n        seen = getArray();\n      while (++argsIndex < argsLength) {\n        var value = arguments[argsIndex];\n        if (isArray(value) || isArguments(value)) {\n          args.push(value);\n          caches.push(trustIndexOf && value.length >= largeArraySize && createCache(argsIndex ? args[argsIndex] : seen));\n        }\n      }\n      var array = args[0],\n        index = -1,\n        length = array ? array.length : 0,\n        result = [];\n      outer: while (++index < length) {\n        var cache = caches[0];\n        value = array[index];\n        if ((cache ? cacheIndexOf(cache, value) : indexOf(seen, value)) < 0) {\n          argsIndex = argsLength;\n          (cache || seen).push(value);\n          while (--argsIndex) {\n            cache = caches[argsIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n      }\n      while (argsLength--) {\n        cache = caches[argsLength];\n        if (cache) {\n          releaseObject(cache);\n        }\n      }\n      releaseArray(caches);\n      releaseArray(seen);\n      return result;\n    }\n\n    /**\n     * Gets the last element or last `n` elements of an array. If a callback is\n     * provided elements at the end of the array are returned as long as the\n     * callback returns truey. The callback is bound to `thisArg` and invoked\n     * with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback] The function called\n     *  per element or the number of elements to return. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the last element(s) of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     *\n     * _.last([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.last([1, 2, 3], function(num) {\n     *   return num > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.pluck(_.last(characters, 'blocked'), 'name');\n     * // => ['fred', 'pebbles']\n     *\n     * // using \"_.where\" callback shorthand\n     * _.last(characters, { 'employer': 'na' });\n     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]\n     */\n    function last(array, callback, thisArg) {\n      var n = 0,\n        length = array ? array.length : 0;\n      if (typeof callback != 'number' && callback != null) {\n        var index = length;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (index-- && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback;\n        if (n == null || thisArg) {\n          return array ? array[length - 1] : undefined;\n        }\n      }\n      return slice(array, nativeMax(0, length - n));\n    }\n\n    /**\n     * Gets the index at which the last occurrence of `value` is found using strict\n     * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used\n     * as the offset from the end of the collection.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value or `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);\n     * // => 4\n     *\n     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var index = array ? array.length : 0;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from the given array using strict equality for\n     * comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to modify.\n     * @param {...*} [value] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull(array) {\n      var args = arguments,\n        argsIndex = 0,\n        argsLength = args.length,\n        length = array ? array.length : 0;\n      while (++argsIndex < argsLength) {\n        var index = -1,\n          value = args[argsIndex];\n        while (++index < length) {\n          if (array[index] === value) {\n            splice.call(array, index--, 1);\n            length--;\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to but not including `end`. If `start` is less than `stop` a\n     * zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns a new range array.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      start = +start || 0;\n      step = typeof step == 'number' ? step : +step || 1;\n      if (end == null) {\n        end = start;\n        start = 0;\n      }\n      // use `Array(length)` so engines like Chakra and V8 avoid slower modes\n      // http://youtu.be/XAqIpGU8ZZk#t=17m25s\n      var index = -1,\n        length = nativeMax(0, ceil((end - start) / (step || 1))),\n        result = Array(length);\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Removes all elements from an array that the callback returns truey for\n     * and returns an array of removed elements. The callback is bound to `thisArg`\n     * and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4, 5, 6];\n     * var evens = _.remove(array, function(num) { return num % 2 == 0; });\n     *\n     * console.log(array);\n     * // => [1, 3, 5]\n     *\n     * console.log(evens);\n     * // => [2, 4, 6]\n     */\n    function remove(array, callback, thisArg) {\n      var index = -1,\n        length = array ? array.length : 0,\n        result = [];\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (callback(value, index, array)) {\n          result.push(value);\n          splice.call(array, index--, 1);\n          length--;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.initial` this method gets all but the first element or\n     * first `n` elements of an array. If a callback function is provided elements\n     * at the beginning of the array are excluded from the result as long as the\n     * callback returns truey. The callback is bound to `thisArg` and invoked\n     * with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias drop, tail\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback=1] The function called\n     *  per element or the number of elements to exclude. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.rest([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.rest([1, 2, 3], function(num) {\n     *   return num < 3;\n     * });\n     * // => [3]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': false,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true, 'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.pluck(_.rest(characters, 'blocked'), 'name');\n     * // => ['fred', 'pebbles']\n     *\n     * // using \"_.where\" callback shorthand\n     * _.rest(characters, { 'employer': 'slate' });\n     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]\n     */\n    function rest(array, callback, thisArg) {\n      if (typeof callback != 'number' && callback != null) {\n        var n = 0,\n          index = -1,\n          length = array ? array.length : 0;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (++index < length && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback == null || thisArg ? 1 : nativeMax(0, callback);\n      }\n      return slice(array, n);\n    }\n\n    /**\n     * Uses a binary search to determine the smallest index at which a value\n     * should be inserted into a given sorted array in order to maintain the sort\n     * order of the array. If a callback is provided it will be executed for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * callback is bound to `thisArg` and invoked with one argument; (value).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([20, 30, 50], 40);\n     * // => 2\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 2\n     *\n     * var dict = {\n     *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }\n     * };\n     *\n     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n     *   return dict.wordToNumber[word];\n     * });\n     * // => 2\n     *\n     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n     *   return this.wordToNumber[word];\n     * }, dict);\n     * // => 2\n     */\n    function sortedIndex(array, value, callback, thisArg) {\n      var low = 0,\n        high = array ? array.length : low;\n\n      // explicitly reference `identity` for better inlining in Firefox\n      callback = callback ? lodash.createCallback(callback, thisArg, 1) : identity;\n      value = callback(value);\n      while (low < high) {\n        var mid = low + high >>> 1;\n        callback(array[mid]) < value ? low = mid + 1 : high = mid;\n      }\n      return low;\n    }\n\n    /**\n     * Creates an array of unique values, in order, of the provided arrays using\n     * strict equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of combined values.\n     * @example\n     *\n     * _.union([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n     * // => [1, 2, 3, 5, 4]\n     */\n    function union() {\n      return baseUniq(baseFlatten(arguments, true, true));\n    }\n\n    /**\n     * Creates a duplicate-value-free version of an array using strict equality\n     * for comparisons, i.e. `===`. If the array is sorted, providing\n     * `true` for `isSorted` will use a faster algorithm. If a callback is provided\n     * each element of `array` is passed through the callback before uniqueness\n     * is computed. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Arrays\n     * @param {Array} array The array to process.\n     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([1, 2, 1, 3, 1]);\n     * // => [1, 2, 3]\n     *\n     * _.uniq([1, 1, 2, 2, 3], true);\n     * // => [1, 2, 3]\n     *\n     * _.uniq(['A', 'b', 'C', 'a', 'B', 'c'], function(letter) { return letter.toLowerCase(); });\n     * // => ['A', 'b', 'C']\n     *\n     * _.uniq([1, 2.5, 3, 1.5, 2, 3.5], function(num) { return this.floor(num); }, Math);\n     * // => [1, 2.5, 3]\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, callback, thisArg) {\n      // juggle arguments\n      if (typeof isSorted != 'boolean' && isSorted != null) {\n        thisArg = callback;\n        callback = typeof isSorted != 'function' && thisArg && thisArg[isSorted] === array ? null : isSorted;\n        isSorted = false;\n      }\n      if (callback != null) {\n        callback = lodash.createCallback(callback, thisArg, 3);\n      }\n      return baseUniq(array, isSorted, callback);\n    }\n\n    /**\n     * Creates an array excluding all provided values using strict equality for\n     * comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to filter.\n     * @param {...*} [value] The values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);\n     * // => [2, 3, 4]\n     */\n    function without(array) {\n      return baseDifference(array, slice(arguments, 1));\n    }\n\n    /**\n     * Creates an array that is the symmetric difference of the provided arrays.\n     * See http://en.wikipedia.org/wiki/Symmetric_difference.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of values.\n     * @example\n     *\n     * _.xor([1, 2, 3], [5, 2, 1, 4]);\n     * // => [3, 5, 4]\n     *\n     * _.xor([1, 2, 5], [2, 3, 5], [3, 4, 5]);\n     * // => [1, 4, 5]\n     */\n    function xor() {\n      var index = -1,\n        length = arguments.length;\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArray(array) || isArguments(array)) {\n          var result = result ? baseUniq(baseDifference(result, array).concat(baseDifference(array, result))) : array;\n        }\n      }\n      return result || [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second\n     * elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @alias unzip\n     * @category Arrays\n     * @param {...Array} [array] Arrays to process.\n     * @returns {Array} Returns a new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    function zip() {\n      var array = arguments.length > 1 ? arguments : arguments[0],\n        index = -1,\n        length = array ? max(pluck(array, 'length')) : 0,\n        result = Array(length < 0 ? 0 : length);\n      while (++index < length) {\n        result[index] = pluck(array, index);\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed from arrays of `keys` and `values`. Provide\n     * either a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`\n     * or two arrays, one of `keys` and one of corresponding `values`.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Arrays\n     * @param {Array} keys The array of keys.\n     * @param {Array} [values=[]] The array of values.\n     * @returns {Object} Returns an object composed of the given keys and\n     *  corresponding values.\n     * @example\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(keys, values) {\n      var index = -1,\n        length = keys ? keys.length : 0,\n        result = {};\n      if (!values && length && !isArray(keys[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = keys[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a function that executes `func`, with  the `this` binding and\n     * arguments of the created function, only after being called `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {number} n The number of times the function must be called before\n     *  `func` is executed.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('Done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'Done saving!', after all saves have completed\n     */\n    function after(n, func) {\n      if (!isFunction(func)) {\n        throw new TypeError();\n      }\n      return function () {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that, when called, invokes `func` with the `this`\n     * binding of `thisArg` and prepends any additional `bind` arguments to those\n     * provided to the bound function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var func = function(greeting) {\n     *   return greeting + ' ' + this.name;\n     * };\n     *\n     * func = _.bind(func, { 'name': 'fred' }, 'hi');\n     * func();\n     * // => 'hi fred'\n     */\n    function bind(func, thisArg) {\n      return arguments.length > 2 ? createWrapper(func, 17, slice(arguments, 2), null, thisArg) : createWrapper(func, 1, null, null, thisArg);\n    }\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all the function properties\n     * of `object` will be bound.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...string} [methodName] The object method names to\n     *  bind, specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() { console.log('clicked ' + this.label); }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs', when the button is clicked\n     */\n    function bindAll(object) {\n      var funcs = arguments.length > 1 ? baseFlatten(arguments, true, false, 1) : functions(object),\n        index = -1,\n        length = funcs.length;\n      while (++index < length) {\n        var key = funcs[index];\n        object[key] = createWrapper(object[key], 1, null, null, object);\n      }\n      return object;\n    }\n\n    /**\n     * Creates a function that, when called, invokes the method at `object[key]`\n     * and prepends any additional `bindKey` arguments to those provided to the bound\n     * function. This method differs from `_.bind` by allowing bound functions to\n     * reference methods that will be redefined or don't yet exist.\n     * See http://michaux.ca/articles/lazy-function-definition-pattern.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'name': 'fred',\n     *   'greet': function(greeting) {\n     *     return greeting + ' ' + this.name;\n     *   }\n     * };\n     *\n     * var func = _.bindKey(object, 'greet', 'hi');\n     * func();\n     * // => 'hi fred'\n     *\n     * object.greet = function(greeting) {\n     *   return greeting + 'ya ' + this.name + '!';\n     * };\n     *\n     * func();\n     * // => 'hiya fred!'\n     */\n    function bindKey(object, key) {\n      return arguments.length > 2 ? createWrapper(key, 19, slice(arguments, 2), null, object) : createWrapper(key, 3, null, null, object);\n    }\n\n    /**\n     * Creates a function that is the composition of the provided functions,\n     * where each function consumes the return value of the function that follows.\n     * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.\n     * Each function is executed with the `this` binding of the composed function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {...Function} [func] Functions to compose.\n     * @returns {Function} Returns the new composed function.\n     * @example\n     *\n     * var realNameMap = {\n     *   'pebbles': 'penelope'\n     * };\n     *\n     * var format = function(name) {\n     *   name = realNameMap[name.toLowerCase()] || name;\n     *   return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\n     * };\n     *\n     * var greet = function(formatted) {\n     *   return 'Hiya ' + formatted + '!';\n     * };\n     *\n     * var welcome = _.compose(greet, format);\n     * welcome('pebbles');\n     * // => 'Hiya Penelope!'\n     */\n    function compose() {\n      var funcs = arguments,\n        length = funcs.length;\n      while (length--) {\n        if (!isFunction(funcs[length])) {\n          throw new TypeError();\n        }\n      }\n      return function () {\n        var args = arguments,\n          length = funcs.length;\n        while (length--) {\n          args = [funcs[length].apply(this, args)];\n        }\n        return args[0];\n      };\n    }\n\n    /**\n     * Creates a function which accepts one or more arguments of `func` that when\n     * invoked either executes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` can be specified\n     * if `func.length` is not sufficient.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var curried = _.curry(function(a, b, c) {\n     *   console.log(a + b + c);\n     * });\n     *\n     * curried(1)(2)(3);\n     * // => 6\n     *\n     * curried(1, 2)(3);\n     * // => 6\n     *\n     * curried(1, 2, 3);\n     * // => 6\n     */\n    function curry(func, arity) {\n      arity = typeof arity == 'number' ? arity : +arity || func.length;\n      return createWrapper(func, 4, null, null, null, arity);\n    }\n\n    /**\n     * Creates a function that will delay the execution of `func` until after\n     * `wait` milliseconds have elapsed since the last time it was invoked.\n     * Provide an options object to indicate that `func` should be invoked on\n     * the leading and/or trailing edge of the `wait` timeout. Subsequent calls\n     * to the debounced function will return the result of the last `func` call.\n     *\n     * Note: If `leading` and `trailing` options are `true` `func` will be called\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to debounce.\n     * @param {number} wait The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify execution on the leading edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be delayed before it's called.\n     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * var lazyLayout = _.debounce(calculateLayout, 150);\n     * jQuery(window).on('resize', lazyLayout);\n     *\n     * // execute `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * });\n     *\n     * // ensure `batchLog` is executed once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * source.addEventListener('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }, false);\n     */\n    function debounce(func, wait, options) {\n      var args,\n        maxTimeoutId,\n        result,\n        stamp,\n        thisArg,\n        timeoutId,\n        trailingCall,\n        lastCalled = 0,\n        maxWait = false,\n        trailing = true;\n      if (!isFunction(func)) {\n        throw new TypeError();\n      }\n      wait = nativeMax(0, wait) || 0;\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = options.leading;\n        maxWait = 'maxWait' in options && (nativeMax(wait, options.maxWait) || 0);\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n      var delayed = function () {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0) {\n          if (maxTimeoutId) {\n            clearTimeout(maxTimeoutId);\n          }\n          var isCalled = trailingCall;\n          maxTimeoutId = timeoutId = trailingCall = undefined;\n          if (isCalled) {\n            lastCalled = now();\n            result = func.apply(thisArg, args);\n            if (!timeoutId && !maxTimeoutId) {\n              args = thisArg = null;\n            }\n          }\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      };\n      var maxDelayed = function () {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (trailing || maxWait !== wait) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = null;\n          }\n        }\n      };\n      return function () {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n            isCalled = remaining <= 0;\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          } else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        } else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = null;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Defers executing the `func` function until the current call stack has cleared.\n     * Additional arguments will be provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to defer.\n     * @param {...*} [arg] Arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) { console.log(text); }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    function defer(func) {\n      if (!isFunction(func)) {\n        throw new TypeError();\n      }\n      var args = slice(arguments, 1);\n      return setTimeout(function () {\n        func.apply(undefined, args);\n      }, 1);\n    }\n\n    /**\n     * Executes the `func` function after `wait` milliseconds. Additional arguments\n     * will be provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay execution.\n     * @param {...*} [arg] Arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) { console.log(text); }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    function delay(func, wait) {\n      if (!isFunction(func)) {\n        throw new TypeError();\n      }\n      var args = slice(arguments, 2);\n      return setTimeout(function () {\n        func.apply(undefined, args);\n      }, wait);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it will be used to determine the cache key for storing the result\n     * based on the arguments provided to the memoized function. By default, the\n     * first argument provided to the memoized function is used as the cache key.\n     * The `func` is executed with the `this` binding of the memoized function.\n     * The result cache is exposed as the `cache` property on the memoized function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] A function used to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var fibonacci = _.memoize(function(n) {\n     *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);\n     * });\n     *\n     * fibonacci(9)\n     * // => 34\n     *\n     * var data = {\n     *   'fred': { 'name': 'fred', 'age': 40 },\n     *   'pebbles': { 'name': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // modifying the result cache\n     * var get = _.memoize(function(name) { return data[name]; }, _.identity);\n     * get('pebbles');\n     * // => { 'name': 'pebbles', 'age': 1 }\n     *\n     * get.cache.pebbles.name = 'penelope';\n     * get('pebbles');\n     * // => { 'name': 'penelope', 'age': 1 }\n     */\n    function memoize(func, resolver) {\n      if (!isFunction(func)) {\n        throw new TypeError();\n      }\n      var memoized = function () {\n        var cache = memoized.cache,\n          key = resolver ? resolver.apply(this, arguments) : keyPrefix + arguments[0];\n        return hasOwnProperty.call(cache, key) ? cache[key] : cache[key] = func.apply(this, arguments);\n      };\n      memoized.cache = {};\n      return memoized;\n    }\n\n    /**\n     * Creates a function that is restricted to execute `func` once. Repeat calls to\n     * the function will return the value of the first call. The `func` is executed\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` executes `createApplication` once\n     */\n    function once(func) {\n      var ran, result;\n      if (!isFunction(func)) {\n        throw new TypeError();\n      }\n      return function () {\n        if (ran) {\n          return result;\n        }\n        ran = true;\n        result = func.apply(this, arguments);\n\n        // clear the `func` variable so the function may be garbage collected\n        func = null;\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that, when called, invokes `func` with any additional\n     * `partial` arguments prepended to those provided to the new function. This\n     * method is similar to `_.bind` except it does **not** alter the `this` binding.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) { return greeting + ' ' + name; };\n     * var hi = _.partial(greet, 'hi');\n     * hi('fred');\n     * // => 'hi fred'\n     */\n    function partial(func) {\n      return createWrapper(func, 16, slice(arguments, 1));\n    }\n\n    /**\n     * This method is like `_.partial` except that `partial` arguments are\n     * appended to those provided to the new function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var defaultsDeep = _.partialRight(_.merge, _.defaults);\n     *\n     * var options = {\n     *   'variable': 'data',\n     *   'imports': { 'jq': $ }\n     * };\n     *\n     * defaultsDeep(options, _.templateSettings);\n     *\n     * options.variable\n     * // => 'data'\n     *\n     * options.imports\n     * // => { '_': _, 'jq': $ }\n     */\n    function partialRight(func) {\n      return createWrapper(func, 32, null, slice(arguments, 1));\n    }\n\n    /**\n     * Creates a function that, when executed, will only call the `func` function\n     * at most once per every `wait` milliseconds. Provide an options object to\n     * indicate that `func` should be invoked on the leading and/or trailing edge\n     * of the `wait` timeout. Subsequent calls to the throttled function will\n     * return the result of the last `func` call.\n     *\n     * Note: If `leading` and `trailing` options are `true` `func` will be called\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to throttle.\n     * @param {number} wait The number of milliseconds to throttle executions to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify execution on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * var throttled = _.throttle(updatePosition, 100);\n     * jQuery(window).on('scroll', throttled);\n     *\n     * // execute `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n        trailing = true;\n      if (!isFunction(func)) {\n        throw new TypeError();\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? options.leading : leading;\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n      debounceOptions.leading = leading;\n      debounceOptions.maxWait = wait;\n      debounceOptions.trailing = trailing;\n      return debounce(func, wait, debounceOptions);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Additional arguments provided to the function are appended\n     * to those provided to the wrapper function. The wrapper is executed with\n     * the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('Fred, Wilma, & Pebbles');\n     * // => '<p>Fred, Wilma, &amp; Pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return createWrapper(wrapper, 16, [value]);\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * var getter = _.constant(object);\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function () {\n        return value;\n      };\n    }\n\n    /**\n     * Produces a callback bound to an optional `thisArg`. If `func` is a property\n     * name the created callback will return the property value for a given element.\n     * If `func` is an object the created callback will return `true` for elements\n     * that contain the equivalent object properties, otherwise it will return `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} [func=identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of the created callback.\n     * @param {number} [argCount] The number of arguments the callback accepts.\n     * @returns {Function} Returns a callback function.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.createCallback = _.wrap(_.createCallback, function(func, callback, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(callback);\n     *   return !match ? func(callback, thisArg) : function(object) {\n     *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(characters, 'age__gt38');\n     * // => [{ 'name': 'fred', 'age': 40 }]\n     */\n    function createCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (func == null || type == 'function') {\n        return baseCreateCallback(func, thisArg, argCount);\n      }\n      // handle \"_.pluck\" style callback shorthands\n      if (type != 'object') {\n        return property(func);\n      }\n      var props = keys(func),\n        key = props[0],\n        a = func[key];\n\n      // handle \"_.where\" style callback shorthands\n      if (props.length == 1 && a === a && !isObject(a)) {\n        // fast path the common case of providing an object with a single\n        // property containing a primitive value\n        return function (object) {\n          var b = object[key];\n          return a === b && (a !== 0 || 1 / a == 1 / b);\n        };\n      }\n      return function (object) {\n        var length = props.length,\n          result = false;\n        while (length--) {\n          if (!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))) {\n            break;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Converts the characters `&`, `<`, `>`, `\"`, and `'` in `string` to their\n     * corresponding HTML entities.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} string The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('Fred, Wilma, & Pebbles');\n     * // => 'Fred, Wilma, &amp; Pebbles'\n     */\n    function escape(string) {\n      return string == null ? '' : String(string).replace(reUnescapedHtml, escapeHtmlChar);\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Adds function properties of a source object to the destination object.\n     * If `object` is a function methods will be added to its prototype as well.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {Function|Object} [object=lodash] object The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added are chainable.\n     * @example\n     *\n     * function capitalize(string) {\n     *   return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n     * }\n     *\n     * _.mixin({ 'capitalize': capitalize });\n     * _.capitalize('fred');\n     * // => 'Fred'\n     *\n     * _('fred').capitalize().value();\n     * // => 'Fred'\n     *\n     * _.mixin({ 'capitalize': capitalize }, { 'chain': false });\n     * _('fred').capitalize();\n     * // => 'Fred'\n     */\n    function mixin(object, source, options) {\n      var chain = true,\n        methodNames = source && functions(source);\n      if (!source || !options && !methodNames.length) {\n        if (options == null) {\n          options = source;\n        }\n        ctor = lodashWrapper;\n        source = object;\n        object = lodash;\n        methodNames = functions(source);\n      }\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      var ctor = object,\n        isFunc = isFunction(ctor);\n      forEach(methodNames, function (methodName) {\n        var func = object[methodName] = source[methodName];\n        if (isFunc) {\n          ctor.prototype[methodName] = function () {\n            var chainAll = this.__chain__,\n              value = this.__wrapped__,\n              args = [value];\n            push.apply(args, arguments);\n            var result = func.apply(object, args);\n            if (chain || chainAll) {\n              if (value === result && isObject(result)) {\n                return this;\n              }\n              result = new ctor(result);\n              result.__chain__ = chainAll;\n            }\n            return result;\n          };\n        }\n      });\n    }\n\n    /**\n     * Reverts the '_' variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      context._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // no operation performed\n    }\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @example\n     *\n     * var stamp = _.now();\n     * _.defer(function() { console.log(_.now() - stamp); });\n     * // => logs the number of milliseconds it took for the deferred function to be called\n     */\n    var now = isNative(now = Date.now) && now || function () {\n      return new Date().getTime();\n    };\n\n    /**\n     * Converts the given value into an integer of the specified radix.\n     * If `radix` is `undefined` or `0` a `radix` of `10` is used unless the\n     * `value` is a hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * Note: This method avoids differences in native ES3 and ES5 `parseInt`\n     * implementations. See http://es5.github.io/#E.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} value The value to parse.\n     * @param {number} [radix] The radix used to interpret the value to parse.\n     * @returns {number} Returns the new integer value.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     */\n    var parseInt = nativeParseInt(whitespace + '08') == 8 ? nativeParseInt : function (value, radix) {\n      // Firefox < 21 and Opera < 15 follow the ES3 specified implementation of `parseInt`\n      return nativeParseInt(isString(value) ? value.replace(reLeadingSpacesAndZeros, '') : value, radix || 0);\n    };\n\n    /**\n     * Creates a \"_.pluck\" style function, which returns the `key` value of a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} key The name of the property to retrieve.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'fred',   'age': 40 },\n     *   { 'name': 'barney', 'age': 36 }\n     * ];\n     *\n     * var getName = _.property('name');\n     *\n     * _.map(characters, getName);\n     * // => ['barney', 'fred']\n     *\n     * _.sortBy(characters, getName);\n     * // => [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred',   'age': 40 }]\n     */\n    function property(key) {\n      return function (object) {\n        return object[key];\n      };\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number will be\n     * returned. If `floating` is truey or either `min` or `max` are floats a\n     * floating-point number will be returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating=false] Specify returning a floating-point number.\n     * @returns {number} Returns a random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      var noMin = min == null,\n        noMax = max == null;\n      if (floating == null) {\n        if (typeof min == 'boolean' && noMax) {\n          floating = min;\n          min = 1;\n        } else if (!noMax && typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /**\n     * Resolves the value of property `key` on `object`. If `key` is a function\n     * it will be invoked with the `this` binding of `object` and its result returned,\n     * else the property value is returned. If `object` is falsey then `undefined`\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {Object} object The object to inspect.\n     * @param {string} key The name of the property to resolve.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = {\n     *   'cheese': 'crumpets',\n     *   'stuff': function() {\n     *     return 'nonsense';\n     *   }\n     * };\n     *\n     * _.result(object, 'cheese');\n     * // => 'crumpets'\n     *\n     * _.result(object, 'stuff');\n     * // => 'nonsense'\n     */\n    function result(object, key) {\n      if (object) {\n        var value = object[key];\n        return isFunction(value) ? object[key]() : value;\n      }\n    }\n\n    /**\n     * A micro-templating method that handles arbitrary delimiters, preserves\n     * whitespace, and correctly escapes quotes within interpolated code.\n     *\n     * Note: In the development build, `_.template` utilizes sourceURLs for easier\n     * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n     *\n     * For more information on precompiling templates see:\n     * https://lodash.com/custom-builds\n     *\n     * For more information on Chrome extension sandboxes see:\n     * http://developer.chrome.com/stable/extensions/sandboxingEval.html\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} text The template text.\n     * @param {Object} data The data object used to populate the text.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as local variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [variable] The data object variable name.\n     * @returns {Function|string} Returns a compiled function when no `data` object\n     *  is given, else it returns the interpolated text.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= name %>');\n     * compiled({ 'name': 'fred' });\n     * // => 'hello fred'\n     *\n     * // using the \"escape\" delimiter to escape HTML in data property values\n     * _.template('<b><%- value %></b>', { 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to generate HTML\n     * var list = '<% _.forEach(people, function(name) { %><li><%- name %></li><% }); %>';\n     * _.template(list, { 'people': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the ES6 delimiter as an alternative to the default \"interpolate\" delimiter\n     * _.template('hello ${ name }', { 'name': 'pebbles' });\n     * // => 'hello pebbles'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * _.template('<% print(\"hello \" + name); %>!', { 'name': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using a custom template delimiters\n     * _.templateSettings = {\n     *   'interpolate': /{{([\\s\\S]+?)}}/g\n     * };\n     *\n     * _.template('hello {{ name }}!', { 'name': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using the `imports` option to import jQuery\n     * var list = '<% jq.each(people, function(name) { %><li><%- name %></li><% }); %>';\n     * _.template(list, { 'people': ['fred', 'barney'] }, { 'imports': { 'jq': jQuery } });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     *   var __t, __p = '', __e = _.escape;\n     *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';\n     *   return __p;\n     * }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(text, data, options) {\n      // based on John Resig's `tmpl` implementation\n      // http://ejohn.org/blog/javascript-micro-templating/\n      // and Laura Doktorova's doT.js\n      // https://github.com/olado/doT\n      var settings = lodash.templateSettings;\n      text = String(text || '');\n\n      // avoid missing dependencies when `iteratorTemplate` is not defined\n      options = defaults({}, options, settings);\n      var imports = defaults({}, options.imports, settings.imports),\n        importsKeys = keys(imports),\n        importsValues = values(imports);\n      var isEvaluating,\n        index = 0,\n        interpolate = options.interpolate || reNoMatch,\n        source = \"__p += '\";\n\n      // compile the regexp to match each delimiter\n      var reDelimiters = RegExp((options.escape || reNoMatch).source + '|' + interpolate.source + '|' + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' + (options.evaluate || reNoMatch).source + '|$', 'g');\n      text.replace(reDelimiters, function (match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // escape characters that cannot be included in string literals\n        source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // replace delimiters with snippets\n        if (escapeValue) {\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // the JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value\n        return match;\n      });\n      source += \"';\\n\";\n\n      // if `variable` is not specified, wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain\n      var variable = options.variable,\n        hasVariable = variable;\n      if (!hasVariable) {\n        variable = 'obj';\n        source = 'with (' + variable + ') {\\n' + source + '\\n}\\n';\n      }\n      // cleanup code by stripping empty strings\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source).replace(reEmptyStringMiddle, '$1').replace(reEmptyStringTrailing, '$1;');\n\n      // frame code as the function body\n      source = 'function(' + variable + ') {\\n' + (hasVariable ? '' : variable + ' || (' + variable + ' = {});\\n') + \"var __t, __p = '', __e = _.escape\" + (isEvaluating ? ', __j = Array.prototype.join;\\n' + \"function print() { __p += __j.call(arguments, '') }\\n\" : ';\\n') + source + 'return __p\\n}';\n\n      // Use a sourceURL for easier debugging.\n      // http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n      var sourceURL = '\\n/*\\n//# sourceURL=' + (options.sourceURL || '/lodash/template/source[' + templateCounter++ + ']') + '\\n*/';\n      try {\n        var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);\n      } catch (e) {\n        e.source = source;\n        throw e;\n      }\n      if (data) {\n        return result(data);\n      }\n      // provide the compiled function's source by its `toString` method, in\n      // supported environments, or the `source` property as a convenience for\n      // inlining compiled templates during the build process\n      result.source = source;\n      return result;\n    }\n\n    /**\n     * Executes the callback `n` times, returning an array of the results\n     * of each callback execution. The callback is bound to `thisArg` and invoked\n     * with one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {number} n The number of times to execute the callback.\n     * @param {Function} callback The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns an array of the results of each `callback` execution.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) { mage.castSpell(n); });\n     * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively\n     *\n     * _.times(3, function(n) { this.cast(n); }, mage);\n     * // => also calls `mage.castSpell(n)` three times\n     */\n    function times(n, callback, thisArg) {\n      n = (n = +n) > -1 ? n : 0;\n      var index = -1,\n        result = Array(n);\n      callback = baseCreateCallback(callback, thisArg, 1);\n      while (++index < n) {\n        result[index] = callback(index);\n      }\n      return result;\n    }\n\n    /**\n     * The inverse of `_.escape` this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their\n     * corresponding characters.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} string The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('Fred, Barney &amp; Pebbles');\n     * // => 'Fred, Barney & Pebbles'\n     */\n    function unescape(string) {\n      return string == null ? '' : String(string).replace(reEscapedHtml, unescapeHtmlChar);\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID will be appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return String(prefix == null ? '' : prefix) + id;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps the given value with explicit\n     * method chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chaining\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36 },\n     *   { 'name': 'fred',    'age': 40 },\n     *   { 'name': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(characters)\n     *     .sortBy('age')\n     *     .map(function(chr) { return chr.name + ' is ' + chr.age; })\n     *     .first()\n     *     .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      value = new lodashWrapper(value);\n      value.__chain__ = true;\n      return value;\n    }\n\n    /**\n     * Invokes `interceptor` with the `value` as the first argument and then\n     * returns `value`. The purpose of this method is to \"tap into\" a method\n     * chain in order to perform operations on intermediate results within\n     * the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chaining\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3, 4])\n     *  .tap(function(array) { array.pop(); })\n     *  .reverse()\n     *  .value();\n     * // => [3, 2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chaining\n     * @returns {*} Returns the wrapper object.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(characters).first();\n     * // => { 'name': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(characters).chain()\n     *   .first()\n     *   .pick('age')\n     *   .value();\n     * // => { 'age': 36 }\n     */\n    function wrapperChain() {\n      this.__chain__ = true;\n      return this;\n    }\n\n    /**\n     * Produces the `toString` result of the wrapped value.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chaining\n     * @returns {string} Returns the string result.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return String(this.__wrapped__);\n    }\n\n    /**\n     * Extracts the wrapped value.\n     *\n     * @name valueOf\n     * @memberOf _\n     * @alias value\n     * @category Chaining\n     * @returns {*} Returns the wrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).valueOf();\n     * // => [1, 2, 3]\n     */\n    function wrapperValueOf() {\n      return this.__wrapped__;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions that return wrapped values when chaining\n    lodash.after = after;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.chain = chain;\n    lodash.compact = compact;\n    lodash.compose = compose;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.createCallback = createCallback;\n    lodash.curry = curry;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.map = map;\n    lodash.mapValues = mapValues;\n    lodash.max = max;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.min = min;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.pull = pull;\n    lodash.range = range;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.shuffle = shuffle;\n    lodash.sortBy = sortBy;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.values = values;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n\n    // add aliases\n    lodash.collect = map;\n    lodash.drop = rest;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n    lodash.unzip = zip;\n\n    // add functions to `lodash.prototype`\n    mixin(lodash);\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions that return unwrapped values when chaining\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.contains = contains;\n    lodash.escape = escape;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.indexOf = indexOf;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isNaN = isNaN;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isUndefined = isUndefined;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.mixin = mixin;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.result = result;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.template = template;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n\n    // add aliases\n    lodash.all = every;\n    lodash.any = some;\n    lodash.detect = find;\n    lodash.findWhere = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.include = contains;\n    lodash.inject = reduce;\n    mixin(function () {\n      var source = {};\n      forOwn(lodash, function (func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }(), false);\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions capable of returning wrapped and unwrapped values when chaining\n    lodash.first = first;\n    lodash.last = last;\n    lodash.sample = sample;\n\n    // add aliases\n    lodash.take = first;\n    lodash.head = first;\n    forOwn(lodash, function (func, methodName) {\n      var callbackable = methodName !== 'sample';\n      if (!lodash.prototype[methodName]) {\n        lodash.prototype[methodName] = function (n, guard) {\n          var chainAll = this.__chain__,\n            result = func(this.__wrapped__, n, guard);\n          return !chainAll && (n == null || guard && !(callbackable && typeof n == 'function')) ? result : new lodashWrapper(result, chainAll);\n        };\n      }\n    });\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = '2.4.2';\n\n    // add \"Chaining\" functions to the wrapper\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.value = wrapperValueOf;\n    lodash.prototype.valueOf = wrapperValueOf;\n\n    // add `Array` functions that return unwrapped values\n    forEach(['join', 'pop', 'shift'], function (methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function () {\n        var chainAll = this.__chain__,\n          result = func.apply(this.__wrapped__, arguments);\n        return chainAll ? new lodashWrapper(result, chainAll) : result;\n      };\n    });\n\n    // add `Array` functions that return the existing wrapped value\n    forEach(['push', 'reverse', 'sort', 'unshift'], function (methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function () {\n        func.apply(this.__wrapped__, arguments);\n        return this;\n      };\n    });\n\n    // add `Array` functions that return new wrapped values\n    forEach(['concat', 'slice', 'splice'], function (methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function () {\n        return new lodashWrapper(func.apply(this.__wrapped__, arguments), this.__chain__);\n      };\n    });\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // expose Lo-Dash\n  var _ = runInContext();\n\n  // some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lo-Dash to the global object even when an AMD loader is present in\n    // case Lo-Dash is loaded with a RequireJS shim config.\n    // See http://requirejs.org/docs/api.html#config-shim\n    root._ = _;\n\n    // define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module\n    define(function () {\n      return _;\n    });\n  }\n  // check for `exports` after `define` in case a build optimizer adds an `exports` object\n  else if (freeExports && freeModule) {\n    // in Node.js or RingoJS\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // in Narwhal or Rhino -require\n    else {\n      freeExports._ = _;\n    }\n  } else {\n    // in a browser or Rhino\n    root._ = _;\n  }\n}).call(this);","map":{"version":3,"names":["undefined","arrayPool","objectPool","idCounter","keyPrefix","Date","largeArraySize","maxPoolSize","whitespace","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEsTemplate","reFlags","reFuncName","reInterpolate","reLeadingSpacesAndZeros","RegExp","reNoMatch","reThis","reUnescapedString","contextProps","templateCounter","argsClass","arrayClass","boolClass","dateClass","funcClass","numberClass","objectClass","regexpClass","stringClass","cloneableClasses","debounceOptions","descriptor","objectTypes","stringEscapes","root","window","freeExports","exports","nodeType","freeModule","module","moduleExports","freeGlobal","global","baseIndexOf","array","value","fromIndex","index","length","cacheIndexOf","cache","type","key","cachePush","typeCache","push","charAtCallback","charCodeAt","compareAscending","a","b","ac","criteria","bc","other","createCache","first","mid","last","getObject","result","escapeStringChar","match","getArray","pop","releaseArray","releaseObject","object","number","string","slice","start","end","Array","runInContext","context","_","defaults","Object","pick","Boolean","Function","Math","Number","String","TypeError","arrayRef","objectProto","prototype","oldDash","toString","reNative","replace","ceil","clearTimeout","floor","fnToString","getPrototypeOf","isNative","hasOwnProperty","setTimeout","splice","unshift","defineProperty","o","func","e","nativeCreate","create","nativeIsArray","isArray","nativeIsFinite","isFinite","nativeIsNaN","isNaN","nativeKeys","keys","nativeMax","max","nativeMin","min","nativeParseInt","parseInt","nativeRandom","random","ctorByClass","lodash","call","lodashWrapper","chainAll","__chain__","__wrapped__","support","funcDecomp","WinRTError","test","funcNames","name","templateSettings","baseBind","bindData","partialArgs","thisArg","bound","args","apply","arguments","thisBinding","baseCreate","isObject","setBindData","baseClone","isDeep","callback","stackA","stackB","isObj","className","ctor","source","exec","lastIndex","isArr","initedStack","assign","input","forEach","forOwn","objValue","properties","baseCreateCallback","argCount","identity","__bindData__","collection","accumulator","bind","baseCreateWrapper","bitmask","partialRightArgs","arity","isBind","isBindKey","isCurry","isCurryBound","baseDifference","values","indexOf","getIndexOf","isLarge","baseFlatten","isShallow","isStrict","isArguments","valIndex","valLength","resIndex","baseIsEqual","isWhere","otherType","otherClass","aWrapped","bWrapped","ctorA","constructor","ctorB","isFunction","size","forIn","baseMerge","found","isPlainObject","stackLength","baseRandom","baseUniq","isSorted","seen","computed","createAggregator","setter","createCallback","createWrapper","isPartial","isPartialRight","creater","escapeHtmlChar","htmlEscapes","noop","shimIsPlainObject","unescapeHtmlChar","htmlUnescapes","shimKeys","iterable","invert","reEscapedHtml","join","reUnescapedHtml","guard","argsIndex","argsLength","ownIndex","ownProps","clone","cloneDeep","findKey","findLastKey","forOwnRight","forInRight","pairs","props","functions","sort","has","isBoolean","isDate","isElement","isEmpty","isEqual","parseFloat","isNumber","isNull","valueOf","objProto","isRegExp","isString","isUndefined","mapValues","merge","sources","omit","transform","proto","at","contains","target","countBy","every","filter","find","findLast","forEachRight","groupBy","indexBy","invoke","methodName","isFunc","map","Infinity","current","pluck","reduce","noaccum","reduceRight","reject","sample","n","shuffle","rand","some","sortBy","toArray","where","compact","difference","findIndex","findLastIndex","flatten","sortedIndex","initial","intersection","caches","trustIndexOf","outer","lastIndexOf","pull","range","step","remove","rest","low","high","union","uniq","without","xor","concat","zip","zipObject","after","bindAll","funcs","bindKey","compose","curry","debounce","wait","options","maxTimeoutId","stamp","timeoutId","trailingCall","lastCalled","maxWait","trailing","leading","delayed","remaining","now","isCalled","maxDelayed","leadingCall","defer","delay","memoize","resolver","memoized","once","ran","partial","partialRight","throttle","wrap","wrapper","constant","property","escape","mixin","chain","methodNames","noConflict","getTime","radix","floating","noMin","noMax","template","text","data","settings","imports","importsKeys","importsValues","isEvaluating","interpolate","reDelimiters","evaluate","escapeValue","interpolateValue","esTemplateValue","evaluateValue","offset","variable","hasVariable","sourceURL","times","unescape","uniqueId","prefix","id","tap","interceptor","wrapperChain","wrapperToString","wrapperValueOf","collect","drop","each","eachRight","extend","methods","select","tail","unique","unzip","all","any","detect","findWhere","foldl","foldr","include","inject","take","head","callbackable","VERSION","define","amd"],"sources":["/home/tpss/public_html/Mernstack/authtask/frontend/node_modules/quilljs/node_modules/lodash/dist/lodash.js"],"sourcesContent":["/**\n * @license\n * Lo-Dash 2.4.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -o ./dist/lodash.js`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre ES5 environments */\n  var undefined;\n\n  /** Used to pool arrays and objects used internally */\n  var arrayPool = [],\n      objectPool = [];\n\n  /** Used to generate unique IDs */\n  var idCounter = 0;\n\n  /** Used to prefix keys to avoid issues with `__proto__` and properties on `Object.prototype` */\n  var keyPrefix = +new Date + '';\n\n  /** Used as the size when optimizations are enabled for large arrays */\n  var largeArraySize = 75;\n\n  /** Used as the max size of the `arrayPool` and `objectPool` */\n  var maxPoolSize = 40;\n\n  /** Used to detect and test whitespace */\n  var whitespace = (\n    // whitespace\n    ' \\t\\x0B\\f\\xA0\\ufeff' +\n\n    // line terminators\n    '\\n\\r\\u2028\\u2029' +\n\n    // unicode category \"Zs\" space separators\n    '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'\n  );\n\n  /** Used to match empty string literals in compiled template source */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /**\n   * Used to match ES6 template delimiters\n   * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-literals-string-literals\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match regexp flags from their coerced string values */\n  var reFlags = /\\w*$/;\n\n  /** Used to detected named functions */\n  var reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;\n\n  /** Used to match \"interpolate\" template delimiters */\n  var reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match leading whitespace and zeros to be removed */\n  var reLeadingSpacesAndZeros = RegExp('^[' + whitespace + ']*0+(?=.$)');\n\n  /** Used to ensure capturing order of template delimiters */\n  var reNoMatch = /($^)/;\n\n  /** Used to detect functions containing a `this` reference */\n  var reThis = /\\bthis\\b/;\n\n  /** Used to match unescaped characters in compiled string literals */\n  var reUnescapedString = /['\\n\\r\\t\\u2028\\u2029\\\\]/g;\n\n  /** Used to assign default `context` object properties */\n  var contextProps = [\n    'Array', 'Boolean', 'Date', 'Function', 'Math', 'Number', 'Object',\n    'RegExp', 'String', '_', 'attachEvent', 'clearTimeout', 'isFinite', 'isNaN',\n    'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify */\n  var templateCounter = 0;\n\n  /** `Object#toString` result shortcuts */\n  var argsClass = '[object Arguments]',\n      arrayClass = '[object Array]',\n      boolClass = '[object Boolean]',\n      dateClass = '[object Date]',\n      funcClass = '[object Function]',\n      numberClass = '[object Number]',\n      objectClass = '[object Object]',\n      regexpClass = '[object RegExp]',\n      stringClass = '[object String]';\n\n  /** Used to identify object classifications that `_.clone` supports */\n  var cloneableClasses = {};\n  cloneableClasses[funcClass] = false;\n  cloneableClasses[argsClass] = cloneableClasses[arrayClass] =\n  cloneableClasses[boolClass] = cloneableClasses[dateClass] =\n  cloneableClasses[numberClass] = cloneableClasses[objectClass] =\n  cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;\n\n  /** Used as an internal `_.debounce` options object */\n  var debounceOptions = {\n    'leading': false,\n    'maxWait': 0,\n    'trailing': false\n  };\n\n  /** Used as the property descriptor for `__bindData__` */\n  var descriptor = {\n    'configurable': false,\n    'enumerable': false,\n    'value': null,\n    'writable': false\n  };\n\n  /** Used to determine if values are of the language type Object */\n  var objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\t': 't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Used as a reference to the global object */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Detect free variable `exports` */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module` */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports` */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */\n  var freeGlobal = objectTypes[typeof global] && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches\n   * or `fromIndex` constraints.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value or `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    var index = (fromIndex || 0) - 1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * An implementation of `_.contains` for cache objects that mimics the return\n   * signature of `_.indexOf` by returning `0` if the value is found, else `-1`.\n   *\n   * @private\n   * @param {Object} cache The cache object to inspect.\n   * @param {*} value The value to search for.\n   * @returns {number} Returns `0` if `value` is found, else `-1`.\n   */\n  function cacheIndexOf(cache, value) {\n    var type = typeof value;\n    cache = cache.cache;\n\n    if (type == 'boolean' || value == null) {\n      return cache[value] ? 0 : -1;\n    }\n    if (type != 'number' && type != 'string') {\n      type = 'object';\n    }\n    var key = type == 'number' ? value : keyPrefix + value;\n    cache = (cache = cache[type]) && cache[key];\n\n    return type == 'object'\n      ? (cache && baseIndexOf(cache, value) > -1 ? 0 : -1)\n      : (cache ? 0 : -1);\n  }\n\n  /**\n   * Adds a given value to the corresponding cache object.\n   *\n   * @private\n   * @param {*} value The value to add to the cache.\n   */\n  function cachePush(value) {\n    var cache = this.cache,\n        type = typeof value;\n\n    if (type == 'boolean' || value == null) {\n      cache[value] = true;\n    } else {\n      if (type != 'number' && type != 'string') {\n        type = 'object';\n      }\n      var key = type == 'number' ? value : keyPrefix + value,\n          typeCache = cache[type] || (cache[type] = {});\n\n      if (type == 'object') {\n        (typeCache[key] || (typeCache[key] = [])).push(value);\n      } else {\n        typeCache[key] = true;\n      }\n    }\n  }\n\n  /**\n   * Used by `_.max` and `_.min` as the default callback when a given\n   * collection is a string value.\n   *\n   * @private\n   * @param {string} value The character to inspect.\n   * @returns {number} Returns the code unit of given character.\n   */\n  function charAtCallback(value) {\n    return value.charCodeAt(0);\n  }\n\n  /**\n   * Used by `sortBy` to compare transformed `collection` elements, stable sorting\n   * them in ascending order.\n   *\n   * @private\n   * @param {Object} a The object to compare to `b`.\n   * @param {Object} b The object to compare to `a`.\n   * @returns {number} Returns the sort order indicator of `1` or `-1`.\n   */\n  function compareAscending(a, b) {\n    var ac = a.criteria,\n        bc = b.criteria,\n        index = -1,\n        length = ac.length;\n\n    while (++index < length) {\n      var value = ac[index],\n          other = bc[index];\n\n      if (value !== other) {\n        if (value > other || typeof value == 'undefined') {\n          return 1;\n        }\n        if (value < other || typeof other == 'undefined') {\n          return -1;\n        }\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to return the same value for\n    // `a` and `b`. See https://github.com/jashkenas/underscore/pull/1247\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See http://code.google.com/p/v8/issues/detail?id=90\n    return a.index - b.index;\n  }\n\n  /**\n   * Creates a cache object to optimize linear searches of large arrays.\n   *\n   * @private\n   * @param {Array} [array=[]] The array to search.\n   * @returns {null|Object} Returns the cache object or `null` if caching should not be used.\n   */\n  function createCache(array) {\n    var index = -1,\n        length = array.length,\n        first = array[0],\n        mid = array[(length / 2) | 0],\n        last = array[length - 1];\n\n    if (first && typeof first == 'object' &&\n        mid && typeof mid == 'object' && last && typeof last == 'object') {\n      return false;\n    }\n    var cache = getObject();\n    cache['false'] = cache['null'] = cache['true'] = cache['undefined'] = false;\n\n    var result = getObject();\n    result.array = array;\n    result.cache = cache;\n    result.push = cachePush;\n\n    while (++index < length) {\n      result.push(array[index]);\n    }\n    return result;\n  }\n\n  /**\n   * Used by `template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {string} match The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(match) {\n    return '\\\\' + stringEscapes[match];\n  }\n\n  /**\n   * Gets an array from the array pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Array} The array from the pool.\n   */\n  function getArray() {\n    return arrayPool.pop() || [];\n  }\n\n  /**\n   * Gets an object from the object pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Object} The object from the pool.\n   */\n  function getObject() {\n    return objectPool.pop() || {\n      'array': null,\n      'cache': null,\n      'criteria': null,\n      'false': false,\n      'index': 0,\n      'null': false,\n      'number': null,\n      'object': null,\n      'push': null,\n      'string': null,\n      'true': false,\n      'undefined': false,\n      'value': null\n    };\n  }\n\n  /**\n   * Releases the given array back to the array pool.\n   *\n   * @private\n   * @param {Array} [array] The array to release.\n   */\n  function releaseArray(array) {\n    array.length = 0;\n    if (arrayPool.length < maxPoolSize) {\n      arrayPool.push(array);\n    }\n  }\n\n  /**\n   * Releases the given object back to the object pool.\n   *\n   * @private\n   * @param {Object} [object] The object to release.\n   */\n  function releaseObject(object) {\n    var cache = object.cache;\n    if (cache) {\n      releaseObject(cache);\n    }\n    object.array = object.cache = object.criteria = object.object = object.number = object.string = object.value = null;\n    if (objectPool.length < maxPoolSize) {\n      objectPool.push(object);\n    }\n  }\n\n  /**\n   * Slices the `collection` from the `start` index up to, but not including,\n   * the `end` index.\n   *\n   * Note: This function is used instead of `Array#slice` to support node lists\n   * in IE < 9 and to ensure dense arrays are returned.\n   *\n   * @private\n   * @param {Array|Object|string} collection The collection to slice.\n   * @param {number} start The start index.\n   * @param {number} end The end index.\n   * @returns {Array} Returns the new array.\n   */\n  function slice(array, start, end) {\n    start || (start = 0);\n    if (typeof end == 'undefined') {\n      end = array ? array.length : 0;\n    }\n    var index = -1,\n        length = end - start || 0,\n        result = Array(length < 0 ? 0 : length);\n\n    while (++index < length) {\n      result[index] = array[start + index];\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new `lodash` function using the given context object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns the `lodash` function.\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See http://es5.github.io/#x11.1.5.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references */\n    var Array = context.Array,\n        Boolean = context.Boolean,\n        Date = context.Date,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /**\n     * Used for `Array` method references.\n     *\n     * Normally `Array.prototype` would suffice, however, using an array literal\n     * avoids issues in Narwhal.\n     */\n    var arrayRef = [];\n\n    /** Used for native method references */\n    var objectProto = Object.prototype;\n\n    /** Used to restore the original `_` reference in `noConflict` */\n    var oldDash = context._;\n\n    /** Used to resolve the internal [[Class]] of values */\n    var toString = objectProto.toString;\n\n    /** Used to detect if a method is native */\n    var reNative = RegExp('^' +\n      String(toString)\n        .replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n        .replace(/toString| for [^\\]]+/g, '.*?') + '$'\n    );\n\n    /** Native method shortcuts */\n    var ceil = Math.ceil,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        fnToString = Function.prototype.toString,\n        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n        hasOwnProperty = objectProto.hasOwnProperty,\n        push = arrayRef.push,\n        setTimeout = context.setTimeout,\n        splice = arrayRef.splice,\n        unshift = arrayRef.unshift;\n\n    /** Used to set meta data on functions */\n    var defineProperty = (function() {\n      // IE 8 only accepts DOM elements\n      try {\n        var o = {},\n            func = isNative(func = Object.defineProperty) && func,\n            result = func(o, o, o) && func;\n      } catch(e) { }\n      return result;\n    }());\n\n    /* Native method shortcuts for methods with the same name as other `lodash` methods */\n    var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,\n        nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,\n        nativeIsFinite = context.isFinite,\n        nativeIsNaN = context.isNaN,\n        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used to lookup a built-in constructor by [[Class]] */\n    var ctorByClass = {};\n    ctorByClass[arrayClass] = Array;\n    ctorByClass[boolClass] = Boolean;\n    ctorByClass[dateClass] = Date;\n    ctorByClass[funcClass] = Function;\n    ctorByClass[objectClass] = Object;\n    ctorByClass[numberClass] = Number;\n    ctorByClass[regexpClass] = RegExp;\n    ctorByClass[stringClass] = String;\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps the given value to enable intuitive\n     * method chaining.\n     *\n     * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n     * and `unshift`\n     *\n     * Chaining is supported in custom builds as long as the `value` method is\n     * implicitly or explicitly included in the build.\n     *\n     * The chainable wrapper functions are:\n     * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,\n     * `compose`, `concat`, `countBy`, `create`, `createCallback`, `curry`,\n     * `debounce`, `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,\n     * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`,\n     * `range`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,\n     * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `transform`,\n     * `union`, `uniq`, `unshift`, `unzip`, `values`, `where`, `without`, `wrap`,\n     * and `zip`\n     *\n     * The non-chainable wrapper functions are:\n     * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,\n     * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,\n     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,\n     * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,\n     * `template`, `unescape`, `uniqueId`, and `value`\n     *\n     * The wrapper functions `first` and `last` return wrapped values when `n` is\n     * provided, otherwise they return unwrapped values.\n     *\n     * Explicit chaining can be enabled by using the `_.chain` method.\n     *\n     * @name _\n     * @constructor\n     * @category Chaining\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns a `lodash` instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(sum, num) {\n     *   return sum + num;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(num) {\n     *   return num * num;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      // don't wrap if already wrapped, even if wrapped by a different `lodash` constructor\n      return (value && typeof value == 'object' && !isArray(value) && hasOwnProperty.call(value, '__wrapped__'))\n       ? value\n       : new lodashWrapper(value);\n    }\n\n    /**\n     * A fast path for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @param {boolean} chainAll A flag to enable chaining for all methods\n     * @returns {Object} Returns a `lodash` instance.\n     */\n    function lodashWrapper(value, chainAll) {\n      this.__chain__ = !!chainAll;\n      this.__wrapped__ = value;\n    }\n    // ensure `new lodashWrapper` is an instance of `lodash`\n    lodashWrapper.prototype = lodash.prototype;\n\n    /**\n     * An object used to flag environments features.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * Detect if functions can be decompiled by `Function#toString`\n     * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcDecomp = !isNative(context.WinRTError) && reThis.test(runInContext);\n\n    /**\n     * Detect if `Function#name` is supported (all but IE).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcNames = typeof Function.name == 'string';\n\n    /**\n     * By default, the template delimiters used by Lo-Dash are similar to those in\n     * embedded Ruby (ERB). Change the following template settings to use alternative\n     * delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': /<%-([\\s\\S]+?)%>/g,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': /<%([\\s\\S]+?)%>/g,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * The base implementation of `_.bind` that creates the bound function and\n     * sets its meta data.\n     *\n     * @private\n     * @param {Array} bindData The bind data array.\n     * @returns {Function} Returns the new bound function.\n     */\n    function baseBind(bindData) {\n      var func = bindData[0],\n          partialArgs = bindData[2],\n          thisArg = bindData[4];\n\n      function bound() {\n        // `Function#bind` spec\n        // http://es5.github.io/#x15.3.4.5\n        if (partialArgs) {\n          // avoid `arguments` object deoptimizations by using `slice` instead\n          // of `Array.prototype.slice.call` and not assigning `arguments` to a\n          // variable as a ternary expression\n          var args = slice(partialArgs);\n          push.apply(args, arguments);\n        }\n        // mimic the constructor's `return` behavior\n        // http://es5.github.io/#x13.2.2\n        if (this instanceof bound) {\n          // ensure `new bound` is an instance of `func`\n          var thisBinding = baseCreate(func.prototype),\n              result = func.apply(thisBinding, args || arguments);\n          return isObject(result) ? result : thisBinding;\n        }\n        return func.apply(thisArg, args || arguments);\n      }\n      setBindData(bound, bindData);\n      return bound;\n    }\n\n    /**\n     * The base implementation of `_.clone` without argument juggling or support\n     * for `thisArg` binding.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep=false] Specify a deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, callback, stackA, stackB) {\n      if (callback) {\n        var result = callback(value);\n        if (typeof result != 'undefined') {\n          return result;\n        }\n      }\n      // inspect [[Class]]\n      var isObj = isObject(value);\n      if (isObj) {\n        var className = toString.call(value);\n        if (!cloneableClasses[className]) {\n          return value;\n        }\n        var ctor = ctorByClass[className];\n        switch (className) {\n          case boolClass:\n          case dateClass:\n            return new ctor(+value);\n\n          case numberClass:\n          case stringClass:\n            return new ctor(value);\n\n          case regexpClass:\n            result = ctor(value.source, reFlags.exec(value));\n            result.lastIndex = value.lastIndex;\n            return result;\n        }\n      } else {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isDeep) {\n        // check for circular references and return corresponding clone\n        var initedStack = !stackA;\n        stackA || (stackA = getArray());\n        stackB || (stackB = getArray());\n\n        var length = stackA.length;\n        while (length--) {\n          if (stackA[length] == value) {\n            return stackB[length];\n          }\n        }\n        result = isArr ? ctor(value.length) : {};\n      }\n      else {\n        result = isArr ? slice(value) : assign({}, value);\n      }\n      // add array properties assigned by `RegExp#exec`\n      if (isArr) {\n        if (hasOwnProperty.call(value, 'index')) {\n          result.index = value.index;\n        }\n        if (hasOwnProperty.call(value, 'input')) {\n          result.input = value.input;\n        }\n      }\n      // exit for shallow clone\n      if (!isDeep) {\n        return result;\n      }\n      // add the source value to the stack of traversed objects\n      // and associate it with its clone\n      stackA.push(value);\n      stackB.push(result);\n\n      // recursively populate clone (susceptible to call stack limits)\n      (isArr ? forEach : forOwn)(value, function(objValue, key) {\n        result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);\n      });\n\n      if (initedStack) {\n        releaseArray(stackA);\n        releaseArray(stackB);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    function baseCreate(prototype, properties) {\n      return isObject(prototype) ? nativeCreate(prototype) : {};\n    }\n    // fallback for browsers without `Object.create`\n    if (!nativeCreate) {\n      baseCreate = (function() {\n        function Object() {}\n        return function(prototype) {\n          if (isObject(prototype)) {\n            Object.prototype = prototype;\n            var result = new Object;\n            Object.prototype = null;\n          }\n          return result || context.Object();\n        };\n      }());\n    }\n\n    /**\n     * The base implementation of `_.createCallback` without support for creating\n     * \"_.pluck\" or \"_.where\" style callbacks.\n     *\n     * @private\n     * @param {*} [func=identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of the created callback.\n     * @param {number} [argCount] The number of arguments the callback accepts.\n     * @returns {Function} Returns a callback function.\n     */\n    function baseCreateCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      // exit early for no `thisArg` or already bound by `Function#bind`\n      if (typeof thisArg == 'undefined' || !('prototype' in func)) {\n        return func;\n      }\n      var bindData = func.__bindData__;\n      if (typeof bindData == 'undefined') {\n        if (support.funcNames) {\n          bindData = !func.name;\n        }\n        bindData = bindData || !support.funcDecomp;\n        if (!bindData) {\n          var source = fnToString.call(func);\n          if (!support.funcNames) {\n            bindData = !reFuncName.test(source);\n          }\n          if (!bindData) {\n            // checks if `func` references the `this` keyword and stores the result\n            bindData = reThis.test(source);\n            setBindData(func, bindData);\n          }\n        }\n      }\n      // exit early if there are no `this` references or `func` is bound\n      if (bindData === false || (bindData !== true && bindData[1] & 1)) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 2: return function(a, b) {\n          return func.call(thisArg, a, b);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n      }\n      return bind(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `createWrapper` that creates the wrapper and\n     * sets its meta data.\n     *\n     * @private\n     * @param {Array} bindData The bind data array.\n     * @returns {Function} Returns the new function.\n     */\n    function baseCreateWrapper(bindData) {\n      var func = bindData[0],\n          bitmask = bindData[1],\n          partialArgs = bindData[2],\n          partialRightArgs = bindData[3],\n          thisArg = bindData[4],\n          arity = bindData[5];\n\n      var isBind = bitmask & 1,\n          isBindKey = bitmask & 2,\n          isCurry = bitmask & 4,\n          isCurryBound = bitmask & 8,\n          key = func;\n\n      function bound() {\n        var thisBinding = isBind ? thisArg : this;\n        if (partialArgs) {\n          var args = slice(partialArgs);\n          push.apply(args, arguments);\n        }\n        if (partialRightArgs || isCurry) {\n          args || (args = slice(arguments));\n          if (partialRightArgs) {\n            push.apply(args, partialRightArgs);\n          }\n          if (isCurry && args.length < arity) {\n            bitmask |= 16 & ~32;\n            return baseCreateWrapper([func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity]);\n          }\n        }\n        args || (args = arguments);\n        if (isBindKey) {\n          func = thisBinding[key];\n        }\n        if (this instanceof bound) {\n          thisBinding = baseCreate(func.prototype);\n          var result = func.apply(thisBinding, args);\n          return isObject(result) ? result : thisBinding;\n        }\n        return func.apply(thisBinding, args);\n      }\n      setBindData(bound, bindData);\n      return bound;\n    }\n\n    /**\n     * The base implementation of `_.difference` that accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to process.\n     * @param {Array} [values] The array of values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array ? array.length : 0,\n          isLarge = length >= largeArraySize && indexOf === baseIndexOf,\n          result = [];\n\n      if (isLarge) {\n        var cache = createCache(values);\n        if (cache) {\n          indexOf = cacheIndexOf;\n          values = cache;\n        } else {\n          isLarge = false;\n        }\n      }\n      while (++index < length) {\n        var value = array[index];\n        if (indexOf(values, value) < 0) {\n          result.push(value);\n        }\n      }\n      if (isLarge) {\n        releaseObject(values);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` without support for callback\n     * shorthands or `thisArg` binding.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n     * @param {boolean} [isStrict=false] A flag to restrict flattening to arrays and `arguments` objects.\n     * @param {number} [fromIndex=0] The index to start from.\n     * @returns {Array} Returns a new flattened array.\n     */\n    function baseFlatten(array, isShallow, isStrict, fromIndex) {\n      var index = (fromIndex || 0) - 1,\n          length = array ? array.length : 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (value && typeof value == 'object' && typeof value.length == 'number'\n            && (isArray(value) || isArguments(value))) {\n          // recursively flatten arrays (susceptible to call stack limits)\n          if (!isShallow) {\n            value = baseFlatten(value, isShallow, isStrict);\n          }\n          var valIndex = -1,\n              valLength = value.length,\n              resIndex = result.length;\n\n          result.length += valLength;\n          while (++valIndex < valLength) {\n            result[resIndex++] = value[valIndex];\n          }\n        } else if (!isStrict) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isEqual`, without support for `thisArg` binding,\n     * that allows partial \"_.where\" style comparisons.\n     *\n     * @private\n     * @param {*} a The value to compare.\n     * @param {*} b The other value to compare.\n     * @param {Function} [callback] The function to customize comparing values.\n     * @param {Function} [isWhere=false] A flag to indicate performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `a` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `b` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(a, b, callback, isWhere, stackA, stackB) {\n      // used to indicate that when comparing objects, `a` has at least the properties of `b`\n      if (callback) {\n        var result = callback(a, b);\n        if (typeof result != 'undefined') {\n          return !!result;\n        }\n      }\n      // exit early for identical values\n      if (a === b) {\n        // treat `+0` vs. `-0` as not equal\n        return a !== 0 || (1 / a == 1 / b);\n      }\n      var type = typeof a,\n          otherType = typeof b;\n\n      // exit early for unlike primitive values\n      if (a === a &&\n          !(a && objectTypes[type]) &&\n          !(b && objectTypes[otherType])) {\n        return false;\n      }\n      // exit early for `null` and `undefined` avoiding ES3's Function#call behavior\n      // http://es5.github.io/#x15.3.4.4\n      if (a == null || b == null) {\n        return a === b;\n      }\n      // compare [[Class]] names\n      var className = toString.call(a),\n          otherClass = toString.call(b);\n\n      if (className == argsClass) {\n        className = objectClass;\n      }\n      if (otherClass == argsClass) {\n        otherClass = objectClass;\n      }\n      if (className != otherClass) {\n        return false;\n      }\n      switch (className) {\n        case boolClass:\n        case dateClass:\n          // coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal\n          return +a == +b;\n\n        case numberClass:\n          // treat `NaN` vs. `NaN` as equal\n          return (a != +a)\n            ? b != +b\n            // but treat `+0` vs. `-0` as not equal\n            : (a == 0 ? (1 / a == 1 / b) : a == +b);\n\n        case regexpClass:\n        case stringClass:\n          // coerce regexes to strings (http://es5.github.io/#x15.10.6.4)\n          // treat string primitives and their corresponding object instances as equal\n          return a == String(b);\n      }\n      var isArr = className == arrayClass;\n      if (!isArr) {\n        // unwrap any `lodash` wrapped values\n        var aWrapped = hasOwnProperty.call(a, '__wrapped__'),\n            bWrapped = hasOwnProperty.call(b, '__wrapped__');\n\n        if (aWrapped || bWrapped) {\n          return baseIsEqual(aWrapped ? a.__wrapped__ : a, bWrapped ? b.__wrapped__ : b, callback, isWhere, stackA, stackB);\n        }\n        // exit for functions and DOM nodes\n        if (className != objectClass) {\n          return false;\n        }\n        // in older versions of Opera, `arguments` objects have `Array` constructors\n        var ctorA = a.constructor,\n            ctorB = b.constructor;\n\n        // non `Object` object instances with different constructors are not equal\n        if (ctorA != ctorB &&\n              !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) &&\n              ('constructor' in a && 'constructor' in b)\n            ) {\n          return false;\n        }\n      }\n      // assume cyclic structures are equal\n      // the algorithm for detecting cyclic structures is adapted from ES 5.1\n      // section 15.12.3, abstract operation `JO` (http://es5.github.io/#x15.12.3)\n      var initedStack = !stackA;\n      stackA || (stackA = getArray());\n      stackB || (stackB = getArray());\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == a) {\n          return stackB[length] == b;\n        }\n      }\n      var size = 0;\n      result = true;\n\n      // add `a` and `b` to the stack of traversed objects\n      stackA.push(a);\n      stackB.push(b);\n\n      // recursively compare objects and arrays (susceptible to call stack limits)\n      if (isArr) {\n        // compare lengths to determine if a deep comparison is necessary\n        length = a.length;\n        size = b.length;\n        result = size == length;\n\n        if (result || isWhere) {\n          // deep compare the contents, ignoring non-numeric properties\n          while (size--) {\n            var index = length,\n                value = b[size];\n\n            if (isWhere) {\n              while (index--) {\n                if ((result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB))) {\n                  break;\n                }\n              }\n            } else if (!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))) {\n              break;\n            }\n          }\n        }\n      }\n      else {\n        // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`\n        // which, in this case, is more costly\n        forIn(b, function(value, key, b) {\n          if (hasOwnProperty.call(b, key)) {\n            // count the number of properties.\n            size++;\n            // deep compare each property value.\n            return (result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB));\n          }\n        });\n\n        if (result && !isWhere) {\n          // ensure both objects have the same number of properties\n          forIn(a, function(value, key, a) {\n            if (hasOwnProperty.call(a, key)) {\n              // `size` will be `-1` if `a` has more properties than `b`\n              return (result = --size > -1);\n            }\n          });\n        }\n      }\n      stackA.pop();\n      stackB.pop();\n\n      if (initedStack) {\n        releaseArray(stackA);\n        releaseArray(stackB);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.merge` without argument juggling or support\n     * for `thisArg` binding.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [callback] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     */\n    function baseMerge(object, source, callback, stackA, stackB) {\n      (isArray(source) ? forEach : forOwn)(source, function(source, key) {\n        var found,\n            isArr,\n            result = source,\n            value = object[key];\n\n        if (source && ((isArr = isArray(source)) || isPlainObject(source))) {\n          // avoid merging previously merged cyclic sources\n          var stackLength = stackA.length;\n          while (stackLength--) {\n            if ((found = stackA[stackLength] == source)) {\n              value = stackB[stackLength];\n              break;\n            }\n          }\n          if (!found) {\n            var isShallow;\n            if (callback) {\n              result = callback(value, source);\n              if ((isShallow = typeof result != 'undefined')) {\n                value = result;\n              }\n            }\n            if (!isShallow) {\n              value = isArr\n                ? (isArray(value) ? value : [])\n                : (isPlainObject(value) ? value : {});\n            }\n            // add `source` and associated `value` to the stack of traversed objects\n            stackA.push(source);\n            stackB.push(value);\n\n            // recursively merge objects and arrays (susceptible to call stack limits)\n            if (!isShallow) {\n              baseMerge(value, source, callback, stackA, stackB);\n            }\n          }\n        }\n        else {\n          if (callback) {\n            result = callback(value, source);\n            if (typeof result == 'undefined') {\n              result = source;\n            }\n          }\n          if (typeof result != 'undefined') {\n            value = result;\n          }\n        }\n        object[key] = value;\n      });\n    }\n\n    /**\n     * The base implementation of `_.random` without argument juggling or support\n     * for returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns a random number.\n     */\n    function baseRandom(min, max) {\n      return min + floor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * or `thisArg` binding.\n     *\n     * @private\n     * @param {Array} array The array to process.\n     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n     * @param {Function} [callback] The function called per iteration.\n     * @returns {Array} Returns a duplicate-value-free array.\n     */\n    function baseUniq(array, isSorted, callback) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array ? array.length : 0,\n          result = [];\n\n      var isLarge = !isSorted && length >= largeArraySize && indexOf === baseIndexOf,\n          seen = (callback || isLarge) ? getArray() : result;\n\n      if (isLarge) {\n        var cache = createCache(seen);\n        indexOf = cacheIndexOf;\n        seen = cache;\n      }\n      while (++index < length) {\n        var value = array[index],\n            computed = callback ? callback(value, index, array) : value;\n\n        if (isSorted\n              ? !index || seen[seen.length - 1] !== computed\n              : indexOf(seen, computed) < 0\n            ) {\n          if (callback || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      if (isLarge) {\n        releaseArray(seen.array);\n        releaseObject(seen);\n      } else if (callback) {\n        releaseArray(seen);\n      }\n      return result;\n    }\n\n    /**\n     * Creates a function that aggregates a collection, creating an object composed\n     * of keys generated from the results of running each element of the collection\n     * through a callback. The given `setter` function sets the keys and values\n     * of the composed object.\n     *\n     * @private\n     * @param {Function} setter The setter function.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter) {\n      return function(collection, callback, thisArg) {\n        var result = {};\n        callback = lodash.createCallback(callback, thisArg, 3);\n\n        var index = -1,\n            length = collection ? collection.length : 0;\n\n        if (typeof length == 'number') {\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, callback(value, index, collection), collection);\n          }\n        } else {\n          forOwn(collection, function(value, key, collection) {\n            setter(result, value, callback(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that, when called, either curries or invokes `func`\n     * with an optional `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of method flags to compose.\n     *  The bitmask may be composed of the following flags:\n     *  1 - `_.bind`\n     *  2 - `_.bindKey`\n     *  4 - `_.curry`\n     *  8 - `_.curry` (bound)\n     *  16 - `_.partial`\n     *  32 - `_.partialRight`\n     * @param {Array} [partialArgs] An array of arguments to prepend to those\n     *  provided to the new function.\n     * @param {Array} [partialRightArgs] An array of arguments to append to those\n     *  provided to the new function.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new function.\n     */\n    function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {\n      var isBind = bitmask & 1,\n          isBindKey = bitmask & 2,\n          isCurry = bitmask & 4,\n          isCurryBound = bitmask & 8,\n          isPartial = bitmask & 16,\n          isPartialRight = bitmask & 32;\n\n      if (!isBindKey && !isFunction(func)) {\n        throw new TypeError;\n      }\n      if (isPartial && !partialArgs.length) {\n        bitmask &= ~16;\n        isPartial = partialArgs = false;\n      }\n      if (isPartialRight && !partialRightArgs.length) {\n        bitmask &= ~32;\n        isPartialRight = partialRightArgs = false;\n      }\n      var bindData = func && func.__bindData__;\n      if (bindData && bindData !== true) {\n        // clone `bindData`\n        bindData = slice(bindData);\n        if (bindData[2]) {\n          bindData[2] = slice(bindData[2]);\n        }\n        if (bindData[3]) {\n          bindData[3] = slice(bindData[3]);\n        }\n        // set `thisBinding` is not previously bound\n        if (isBind && !(bindData[1] & 1)) {\n          bindData[4] = thisArg;\n        }\n        // set if previously bound but not currently (subsequent curried functions)\n        if (!isBind && bindData[1] & 1) {\n          bitmask |= 8;\n        }\n        // set curried arity if not yet set\n        if (isCurry && !(bindData[1] & 4)) {\n          bindData[5] = arity;\n        }\n        // append partial left arguments\n        if (isPartial) {\n          push.apply(bindData[2] || (bindData[2] = []), partialArgs);\n        }\n        // append partial right arguments\n        if (isPartialRight) {\n          unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);\n        }\n        // merge flags\n        bindData[1] |= bitmask;\n        return createWrapper.apply(null, bindData);\n      }\n      // fast path for `_.bind`\n      var creater = (bitmask == 1 || bitmask === 17) ? baseBind : baseCreateWrapper;\n      return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);\n    }\n\n    /**\n     * Used by `escape` to convert characters to HTML entities.\n     *\n     * @private\n     * @param {string} match The matched character to escape.\n     * @returns {string} Returns the escaped character.\n     */\n    function escapeHtmlChar(match) {\n      return htmlEscapes[match];\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized, this method returns the custom method, otherwise it returns\n     * the `baseIndexOf` function.\n     *\n     * @private\n     * @returns {Function} Returns the \"indexOf\" function.\n     */\n    function getIndexOf() {\n      var result = (result = lodash.indexOf) === indexOf ? baseIndexOf : result;\n      return result;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.\n     */\n    function isNative(value) {\n      return typeof value == 'function' && reNative.test(value);\n    }\n\n    /**\n     * Sets `this` binding data on a given function.\n     *\n     * @private\n     * @param {Function} func The function to set data on.\n     * @param {Array} value The data array to set.\n     */\n    var setBindData = !defineProperty ? noop : function(func, value) {\n      descriptor.value = value;\n      defineProperty(func, '__bindData__', descriptor);\n      descriptor.value = null;\n    };\n\n    /**\n     * A fallback implementation of `isPlainObject` which checks if a given value\n     * is an object created by the `Object` constructor, assuming objects created\n     * by the `Object` constructor have no inherited enumerable properties and that\n     * there are no `Object.prototype` extensions.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     */\n    function shimIsPlainObject(value) {\n      var ctor,\n          result;\n\n      // avoid non Object objects, `arguments` objects, and DOM elements\n      if (!(value && toString.call(value) == objectClass) ||\n          (ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor))) {\n        return false;\n      }\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      forIn(value, function(value, key) {\n        result = key;\n      });\n      return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Used by `unescape` to convert HTML entities to characters.\n     *\n     * @private\n     * @param {string} match The matched character to unescape.\n     * @returns {string} Returns the unescaped character.\n     */\n    function unescapeHtmlChar(match) {\n      return htmlUnescapes[match];\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `value` is an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.\n     * @example\n     *\n     * (function() { return _.isArguments(arguments); })(1, 2, 3);\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return value && typeof value == 'object' && typeof value.length == 'number' &&\n        toString.call(value) == argsClass || false;\n    }\n\n    /**\n     * Checks if `value` is an array.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an array, else `false`.\n     * @example\n     *\n     * (function() { return _.isArray(arguments); })();\n     * // => false\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     */\n    var isArray = nativeIsArray || function(value) {\n      return value && typeof value == 'object' && typeof value.length == 'number' &&\n        toString.call(value) == arrayClass || false;\n    };\n\n    /**\n     * A fallback implementation of `Object.keys` which produces an array of the\n     * given object's own enumerable property names.\n     *\n     * @private\n     * @type Function\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names.\n     */\n    var shimKeys = function(object) {\n      var index, iterable = object, result = [];\n      if (!iterable) return result;\n      if (!(objectTypes[typeof object])) return result;\n        for (index in iterable) {\n          if (hasOwnProperty.call(iterable, index)) {\n            result.push(index);\n          }\n        }\n      return result\n    };\n\n    /**\n     * Creates an array composed of the own enumerable property names of an object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names.\n     * @example\n     *\n     * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      if (!isObject(object)) {\n        return [];\n      }\n      return nativeKeys(object);\n    };\n\n    /**\n     * Used to convert characters to HTML entities:\n     *\n     * Though the `>` character is escaped for symmetry, characters like `>` and `/`\n     * don't require escaping in HTML and have no special meaning unless they're part\n     * of a tag or an unquoted attribute value.\n     * http://mathiasbynens.be/notes/ambiguous-ampersands (under \"semi-related fun fact\")\n     */\n    var htmlEscapes = {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#39;'\n    };\n\n    /** Used to convert HTML entities to characters */\n    var htmlUnescapes = invert(htmlEscapes);\n\n    /** Used to match HTML entities and HTML characters */\n    var reEscapedHtml = RegExp('(' + keys(htmlUnescapes).join('|') + ')', 'g'),\n        reUnescapedHtml = RegExp('[' + keys(htmlEscapes).join('') + ']', 'g');\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources will overwrite property assignments of previous\n     * sources. If a callback is provided it will be executed to produce the\n     * assigned values. The callback is bound to `thisArg` and invoked with two\n     * arguments; (objectValue, sourceValue).\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @alias extend\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param {Function} [callback] The function to customize assigning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });\n     * // => { 'name': 'fred', 'employer': 'slate' }\n     *\n     * var defaults = _.partialRight(_.assign, function(a, b) {\n     *   return typeof a == 'undefined' ? b : a;\n     * });\n     *\n     * var object = { 'name': 'barney' };\n     * defaults(object, { 'name': 'fred', 'employer': 'slate' });\n     * // => { 'name': 'barney', 'employer': 'slate' }\n     */\n    var assign = function(object, source, guard) {\n      var index, iterable = object, result = iterable;\n      if (!iterable) return result;\n      var args = arguments,\n          argsIndex = 0,\n          argsLength = typeof guard == 'number' ? 2 : args.length;\n      if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\n        var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);\n      } else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\n        callback = args[--argsLength];\n      }\n      while (++argsIndex < argsLength) {\n        iterable = args[argsIndex];\n        if (iterable && objectTypes[typeof iterable]) {\n        var ownIndex = -1,\n            ownProps = objectTypes[typeof iterable] && keys(iterable),\n            length = ownProps ? ownProps.length : 0;\n\n        while (++ownIndex < length) {\n          index = ownProps[ownIndex];\n          result[index] = callback ? callback(result[index], iterable[index]) : iterable[index];\n        }\n        }\n      }\n      return result\n    };\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects will also\n     * be cloned, otherwise they will be assigned by reference. If a callback\n     * is provided it will be executed to produce the cloned values. If the\n     * callback returns `undefined` cloning will be handled by the method instead.\n     * The callback is bound to `thisArg` and invoked with one argument; (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep=false] Specify a deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * var shallow = _.clone(characters);\n     * shallow[0] === characters[0];\n     * // => true\n     *\n     * var deep = _.clone(characters, true);\n     * deep[0] === characters[0];\n     * // => false\n     *\n     * _.mixin({\n     *   'clone': _.partialRight(_.clone, function(value) {\n     *     return _.isElement(value) ? value.cloneNode(false) : undefined;\n     *   })\n     * });\n     *\n     * var clone = _.clone(document.body);\n     * clone.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, callback, thisArg) {\n      // allows working with \"Collections\" methods without using their `index`\n      // and `collection` arguments for `isDeep` and `callback`\n      if (typeof isDeep != 'boolean' && isDeep != null) {\n        thisArg = callback;\n        callback = isDeep;\n        isDeep = false;\n      }\n      return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n    }\n\n    /**\n     * Creates a deep clone of `value`. If a callback is provided it will be\n     * executed to produce the cloned values. If the callback returns `undefined`\n     * cloning will be handled by the method instead. The callback is bound to\n     * `thisArg` and invoked with one argument; (value).\n     *\n     * Note: This method is loosely based on the structured clone algorithm. Functions\n     * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and\n     * objects created by constructors other than `Object` are cloned to plain `Object` objects.\n     * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * var deep = _.cloneDeep(characters);\n     * deep[0] === characters[0];\n     * // => false\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'node': element\n     * };\n     *\n     * var clone = _.cloneDeep(view, function(value) {\n     *   return _.isElement(value) ? value.cloneNode(true) : undefined;\n     * });\n     *\n     * clone.node == view.node;\n     * // => false\n     */\n    function cloneDeep(value, callback, thisArg) {\n      return baseClone(value, true, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n    }\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, { 'constructor': Circle });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? assign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional defaults of the same property will be ignored.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param- {Object} [guard] Allows working with `_.reduce` without using its\n     *  `key` and `object` arguments as sources.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * var object = { 'name': 'barney' };\n     * _.defaults(object, { 'name': 'fred', 'employer': 'slate' });\n     * // => { 'name': 'barney', 'employer': 'slate' }\n     */\n    var defaults = function(object, source, guard) {\n      var index, iterable = object, result = iterable;\n      if (!iterable) return result;\n      var args = arguments,\n          argsIndex = 0,\n          argsLength = typeof guard == 'number' ? 2 : args.length;\n      while (++argsIndex < argsLength) {\n        iterable = args[argsIndex];\n        if (iterable && objectTypes[typeof iterable]) {\n        var ownIndex = -1,\n            ownProps = objectTypes[typeof iterable] && keys(iterable),\n            length = ownProps ? ownProps.length : 0;\n\n        while (++ownIndex < length) {\n          index = ownProps[ownIndex];\n          if (typeof result[index] == 'undefined') result[index] = iterable[index];\n        }\n        }\n      }\n      return result\n    };\n\n    /**\n     * This method is like `_.findIndex` except that it returns the key of the\n     * first element that passes the callback check, instead of the element itself.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [callback=identity] The function called per\n     *  iteration. If a property name or object is provided it will be used to\n     *  create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {string|undefined} Returns the key of the found element, else `undefined`.\n     * @example\n     *\n     * var characters = {\n     *   'barney': {  'age': 36, 'blocked': false },\n     *   'fred': {    'age': 40, 'blocked': true },\n     *   'pebbles': { 'age': 1,  'blocked': false }\n     * };\n     *\n     * _.findKey(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (property order is not guaranteed across environments)\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findKey(characters, { 'age': 1 });\n     * // => 'pebbles'\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findKey(characters, 'blocked');\n     * // => 'fred'\n     */\n    function findKey(object, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forOwn(object, function(value, key, object) {\n        if (callback(value, key, object)) {\n          result = key;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [callback=identity] The function called per\n     *  iteration. If a property name or object is provided it will be used to\n     *  create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {string|undefined} Returns the key of the found element, else `undefined`.\n     * @example\n     *\n     * var characters = {\n     *   'barney': {  'age': 36, 'blocked': true },\n     *   'fred': {    'age': 40, 'blocked': false },\n     *   'pebbles': { 'age': 1,  'blocked': true }\n     * };\n     *\n     * _.findLastKey(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles`, assuming `_.findKey` returns `barney`\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findLastKey(characters, { 'age': 40 });\n     * // => 'fred'\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findLastKey(characters, 'blocked');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forOwnRight(object, function(value, key, object) {\n        if (callback(value, key, object)) {\n          result = key;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object,\n     * executing the callback for each property. The callback is bound to `thisArg`\n     * and invoked with three arguments; (value, key, object). Callbacks may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * Shape.prototype.move = function(x, y) {\n     *   this.x += x;\n     *   this.y += y;\n     * };\n     *\n     * _.forIn(new Shape, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)\n     */\n    var forIn = function(collection, callback, thisArg) {\n      var index, iterable = collection, result = iterable;\n      if (!iterable) return result;\n      if (!objectTypes[typeof iterable]) return result;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n        for (index in iterable) {\n          if (callback(iterable[index], index, collection) === false) return result;\n        }\n      return result\n    };\n\n    /**\n     * This method is like `_.forIn` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * Shape.prototype.move = function(x, y) {\n     *   this.x += x;\n     *   this.y += y;\n     * };\n     *\n     * _.forInRight(new Shape, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'move', 'y', and 'x' assuming `_.forIn ` logs 'x', 'y', and 'move'\n     */\n    function forInRight(object, callback, thisArg) {\n      var pairs = [];\n\n      forIn(object, function(value, key) {\n        pairs.push(key, value);\n      });\n\n      var length = pairs.length;\n      callback = baseCreateCallback(callback, thisArg, 3);\n      while (length--) {\n        if (callback(pairs[length--], pairs[length], object) === false) {\n          break;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Iterates over own enumerable properties of an object, executing the callback\n     * for each property. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, key, object). Callbacks may exit iteration early by\n     * explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n     *   console.log(key);\n     * });\n     * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)\n     */\n    var forOwn = function(collection, callback, thisArg) {\n      var index, iterable = collection, result = iterable;\n      if (!iterable) return result;\n      if (!objectTypes[typeof iterable]) return result;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n        var ownIndex = -1,\n            ownProps = objectTypes[typeof iterable] && keys(iterable),\n            length = ownProps ? ownProps.length : 0;\n\n        while (++ownIndex < length) {\n          index = ownProps[ownIndex];\n          if (callback(iterable[index], index, collection) === false) return result;\n        }\n      return result\n    };\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.forOwnRight({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'length', '1', and '0' assuming `_.forOwn` logs '0', '1', and 'length'\n     */\n    function forOwnRight(object, callback, thisArg) {\n      var props = keys(object),\n          length = props.length;\n\n      callback = baseCreateCallback(callback, thisArg, 3);\n      while (length--) {\n        var key = props[length];\n        if (callback(object[key], key, object) === false) {\n          break;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Creates a sorted array of property names of all enumerable properties,\n     * own and inherited, of `object` that have function values.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names that have function values.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]\n     */\n    function functions(object) {\n      var result = [];\n      forIn(object, function(value, key) {\n        if (isFunction(value)) {\n          result.push(key);\n        }\n      });\n      return result.sort();\n    }\n\n    /**\n     * Checks if the specified property name exists as a direct property of `object`,\n     * instead of an inherited property.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @param {string} key The name of the property to check.\n     * @returns {boolean} Returns `true` if key is a direct property, else `false`.\n     * @example\n     *\n     * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');\n     * // => true\n     */\n    function has(object, key) {\n      return object ? hasOwnProperty.call(object, key) : false;\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of the given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the created inverted object.\n     * @example\n     *\n     * _.invert({ 'first': 'fred', 'second': 'barney' });\n     * // => { 'fred': 'first', 'barney': 'second' }\n     */\n    function invert(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        result[object[key]] = key;\n      }\n      return result;\n    }\n\n    /**\n     * Checks if `value` is a boolean value.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a boolean value, else `false`.\n     * @example\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        value && typeof value == 'object' && toString.call(value) == boolClass || false;\n    }\n\n    /**\n     * Checks if `value` is a date.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a date, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     */\n    function isDate(value) {\n      return value && typeof value == 'object' && toString.call(value) == dateClass || false;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     */\n    function isElement(value) {\n      return value && value.nodeType === 1 || false;\n    }\n\n    /**\n     * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a\n     * length of `0` and objects with no own enumerable properties are considered\n     * \"empty\".\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if the `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({});\n     * // => true\n     *\n     * _.isEmpty('');\n     * // => true\n     */\n    function isEmpty(value) {\n      var result = true;\n      if (!value) {\n        return result;\n      }\n      var className = toString.call(value),\n          length = value.length;\n\n      if ((className == arrayClass || className == stringClass || className == argsClass ) ||\n          (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {\n        return !length;\n      }\n      forOwn(value, function() {\n        return (result = false);\n      });\n      return result;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent to each other. If a callback is provided it will be executed\n     * to compare values. If the callback returns `undefined` comparisons will\n     * be handled by the method instead. The callback is bound to `thisArg` and\n     * invoked with two arguments; (a, b).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} a The value to compare.\n     * @param {*} b The other value to compare.\n     * @param {Function} [callback] The function to customize comparing values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * var copy = { 'name': 'fred' };\n     *\n     * object == copy;\n     * // => false\n     *\n     * _.isEqual(object, copy);\n     * // => true\n     *\n     * var words = ['hello', 'goodbye'];\n     * var otherWords = ['hi', 'goodbye'];\n     *\n     * _.isEqual(words, otherWords, function(a, b) {\n     *   var reGreet = /^(?:hello|hi)$/i,\n     *       aGreet = _.isString(a) && reGreet.test(a),\n     *       bGreet = _.isString(b) && reGreet.test(b);\n     *\n     *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;\n     * });\n     * // => true\n     */\n    function isEqual(a, b, callback, thisArg) {\n      return baseIsEqual(a, b, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 2));\n    }\n\n    /**\n     * Checks if `value` is, or can be coerced to, a finite number.\n     *\n     * Note: This is not the same as native `isFinite` which will return true for\n     * booleans and empty strings. See http://es5.github.io/#x15.1.2.5.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is finite, else `false`.\n     * @example\n     *\n     * _.isFinite(-101);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => true\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite('');\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));\n    }\n\n    /**\n     * Checks if `value` is a function.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     */\n    function isFunction(value) {\n      return typeof value == 'function';\n    }\n\n    /**\n     * Checks if `value` is the language type of Object.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // check if the value is the ECMAScript language type of Object\n      // http://es5.github.io/#x8\n      // and avoid a V8 bug\n      // http://code.google.com/p/v8/issues/detail?id=2291\n      return !!(value && objectTypes[typeof value]);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * Note: This is not the same as native `isNaN` which will return `true` for\n     * `undefined` and other non-numeric values. See http://es5.github.io/#x15.1.2.4.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // `NaN` as a primitive is the only value that is not equal to itself\n      // (perform the [[Class]] check first to avoid errors with some host objects in IE)\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(undefined);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is a number.\n     *\n     * Note: `NaN` is considered a number. See http://es5.github.io/#x8.5.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4 * 5);\n     * // => true\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        value && typeof value == 'object' && toString.call(value) == numberClass || false;\n    }\n\n    /**\n     * Checks if `value` is an object created by the `Object` constructor.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * _.isPlainObject(new Shape);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     */\n    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n      if (!(value && toString.call(value) == objectClass)) {\n        return false;\n      }\n      var valueOf = value.valueOf,\n          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n      return objProto\n        ? (value == objProto || getPrototypeOf(value) == objProto)\n        : shimIsPlainObject(value);\n    };\n\n    /**\n     * Checks if `value` is a regular expression.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a regular expression, else `false`.\n     * @example\n     *\n     * _.isRegExp(/fred/);\n     * // => true\n     */\n    function isRegExp(value) {\n      return value && typeof value == 'object' && toString.call(value) == regexpClass || false;\n    }\n\n    /**\n     * Checks if `value` is a string.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('fred');\n     * // => true\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        value && typeof value == 'object' && toString.call(value) == stringClass || false;\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     */\n    function isUndefined(value) {\n      return typeof value == 'undefined';\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through the callback.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new object with values of the results of each `callback` execution.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2, 'c': 3} , function(num) { return num * 3; });\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     *\n     * var characters = {\n     *   'fred': { 'name': 'fred', 'age': 40 },\n     *   'pebbles': { 'name': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.mapValues(characters, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 }\n     */\n    function mapValues(object, callback, thisArg) {\n      var result = {};\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      forOwn(object, function(value, key, object) {\n        result[key] = callback(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * will overwrite property assignments of previous sources. If a callback is\n     * provided it will be executed to produce the merged values of the destination\n     * and source properties. If the callback returns `undefined` merging will\n     * be handled by the method instead. The callback is bound to `thisArg` and\n     * invoked with two arguments; (objectValue, sourceValue).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param {Function} [callback] The function to customize merging properties.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * var names = {\n     *   'characters': [\n     *     { 'name': 'barney' },\n     *     { 'name': 'fred' }\n     *   ]\n     * };\n     *\n     * var ages = {\n     *   'characters': [\n     *     { 'age': 36 },\n     *     { 'age': 40 }\n     *   ]\n     * };\n     *\n     * _.merge(names, ages);\n     * // => { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }\n     *\n     * var food = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var otherFood = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(food, otherFood, function(a, b) {\n     *   return _.isArray(a) ? a.concat(b) : undefined;\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }\n     */\n    function merge(object) {\n      var args = arguments,\n          length = 2;\n\n      if (!isObject(object)) {\n        return object;\n      }\n      // allows working with `_.reduce` and `_.reduceRight` without using\n      // their `index` and `collection` arguments\n      if (typeof args[2] != 'number') {\n        length = args.length;\n      }\n      if (length > 3 && typeof args[length - 2] == 'function') {\n        var callback = baseCreateCallback(args[--length - 1], args[length--], 2);\n      } else if (length > 2 && typeof args[length - 1] == 'function') {\n        callback = args[--length];\n      }\n      var sources = slice(arguments, 1, length),\n          index = -1,\n          stackA = getArray(),\n          stackB = getArray();\n\n      while (++index < length) {\n        baseMerge(object, sources[index], callback, stackA, stackB);\n      }\n      releaseArray(stackA);\n      releaseArray(stackB);\n      return object;\n    }\n\n    /**\n     * Creates a shallow clone of `object` excluding the specified properties.\n     * Property names may be specified as individual arguments or as arrays of\n     * property names. If a callback is provided it will be executed for each\n     * property of `object` omitting the properties the callback returns truey\n     * for. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The source object.\n     * @param {Function|...string|string[]} [callback] The properties to omit or the\n     *  function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns an object without the omitted properties.\n     * @example\n     *\n     * _.omit({ 'name': 'fred', 'age': 40 }, 'age');\n     * // => { 'name': 'fred' }\n     *\n     * _.omit({ 'name': 'fred', 'age': 40 }, function(value) {\n     *   return typeof value == 'number';\n     * });\n     * // => { 'name': 'fred' }\n     */\n    function omit(object, callback, thisArg) {\n      var result = {};\n      if (typeof callback != 'function') {\n        var props = [];\n        forIn(object, function(value, key) {\n          props.push(key);\n        });\n        props = baseDifference(props, baseFlatten(arguments, true, false, 1));\n\n        var index = -1,\n            length = props.length;\n\n        while (++index < length) {\n          var key = props[index];\n          result[key] = object[key];\n        }\n      } else {\n        callback = lodash.createCallback(callback, thisArg, 3);\n        forIn(object, function(value, key, object) {\n          if (!callback(value, key, object)) {\n            result[key] = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Creates a two dimensional array of an object's key-value pairs,\n     * i.e. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (property order is not guaranteed across environments)\n     */\n    function pairs(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a shallow clone of `object` composed of the specified properties.\n     * Property names may be specified as individual arguments or as arrays of\n     * property names. If a callback is provided it will be executed for each\n     * property of `object` picking the properties the callback returns truey\n     * for. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The source object.\n     * @param {Function|...string|string[]} [callback] The function called per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns an object composed of the picked properties.\n     * @example\n     *\n     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, 'name');\n     * // => { 'name': 'fred' }\n     *\n     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, function(value, key) {\n     *   return key.charAt(0) != '_';\n     * });\n     * // => { 'name': 'fred' }\n     */\n    function pick(object, callback, thisArg) {\n      var result = {};\n      if (typeof callback != 'function') {\n        var index = -1,\n            props = baseFlatten(arguments, true, false, 1),\n            length = isObject(object) ? props.length : 0;\n\n        while (++index < length) {\n          var key = props[index];\n          if (key in object) {\n            result[key] = object[key];\n          }\n        }\n      } else {\n        callback = lodash.createCallback(callback, thisArg, 3);\n        forIn(object, function(value, key, object) {\n          if (callback(value, key, object)) {\n            result[key] = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * An alternative to `_.reduce` this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable properties through a callback, with each callback execution\n     * potentially mutating the `accumulator` object. The callback is bound to\n     * `thisArg` and invoked with four arguments; (accumulator, value, key, object).\n     * Callbacks may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var squares = _.transform([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], function(result, num) {\n     *   num *= num;\n     *   if (num % 2) {\n     *     return result.push(num) < 3;\n     *   }\n     * });\n     * // => [1, 9, 25]\n     *\n     * var mapped = _.transform({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n     *   result[key] = num * 3;\n     * });\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     */\n    function transform(object, callback, accumulator, thisArg) {\n      var isArr = isArray(object);\n      if (accumulator == null) {\n        if (isArr) {\n          accumulator = [];\n        } else {\n          var ctor = object && object.constructor,\n              proto = ctor && ctor.prototype;\n\n          accumulator = baseCreate(proto);\n        }\n      }\n      if (callback) {\n        callback = lodash.createCallback(callback, thisArg, 4);\n        (isArr ? forEach : forOwn)(object, function(value, index, object) {\n          return callback(accumulator, value, index, object);\n        });\n      }\n      return accumulator;\n    }\n\n    /**\n     * Creates an array composed of the own enumerable property values of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property values.\n     * @example\n     *\n     * _.values({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => [1, 2, 3] (property order is not guaranteed across environments)\n     */\n    function values(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements from the specified indexes, or keys, of the\n     * `collection`. Indexes may be specified as individual arguments or as arrays\n     * of indexes.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [index] The indexes of `collection`\n     *   to retrieve, specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns a new array of elements corresponding to the\n     *  provided indexes.\n     * @example\n     *\n     * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);\n     * // => ['a', 'c', 'e']\n     *\n     * _.at(['fred', 'barney', 'pebbles'], 0, 2);\n     * // => ['fred', 'pebbles']\n     */\n    function at(collection) {\n      var args = arguments,\n          index = -1,\n          props = baseFlatten(args, true, false, 1),\n          length = (args[2] && args[2][args[1]] === collection) ? 1 : props.length,\n          result = Array(length);\n\n      while(++index < length) {\n        result[index] = collection[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * Checks if a given value is present in a collection using strict equality\n     * for comparisons, i.e. `===`. If `fromIndex` is negative, it is used as the\n     * offset from the end of the collection.\n     *\n     * @static\n     * @memberOf _\n     * @alias include\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {*} target The value to check for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {boolean} Returns `true` if the `target` element is found, else `false`.\n     * @example\n     *\n     * _.contains([1, 2, 3], 1);\n     * // => true\n     *\n     * _.contains([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.contains({ 'name': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.contains('pebbles', 'eb');\n     * // => true\n     */\n    function contains(collection, target, fromIndex) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = collection ? collection.length : 0,\n          result = false;\n\n      fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;\n      if (isArray(collection)) {\n        result = indexOf(collection, target, fromIndex) > -1;\n      } else if (typeof length == 'number') {\n        result = (isString(collection) ? collection.indexOf(target, fromIndex) : indexOf(collection, target, fromIndex)) > -1;\n      } else {\n        forOwn(collection, function(value) {\n          if (++index >= fromIndex) {\n            return !(result = value === target);\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through the callback. The corresponding value\n     * of each key is the number of times the key was returned by the callback.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);\n    });\n\n    /**\n     * Checks if the given callback returns truey value for **all** elements of\n     * a collection. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if all elements passed the callback check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes']);\n     * // => false\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.every(characters, 'age');\n     * // => true\n     *\n     * // using \"_.where\" callback shorthand\n     * _.every(characters, { 'age': 36 });\n     * // => false\n     */\n    function every(collection, callback, thisArg) {\n      var result = true;\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if (!(result = !!callback(collection[index], index, collection))) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          return (result = !!callback(value, index, collection));\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, returning an array of all elements\n     * the callback returns truey for. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of elements that passed the callback check.\n     * @example\n     *\n     * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n     * // => [2, 4, 6]\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.filter(characters, 'blocked');\n     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.filter(characters, { 'age': 36 });\n     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]\n     */\n    function filter(collection, callback, thisArg) {\n      var result = [];\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          var value = collection[index];\n          if (callback(value, index, collection)) {\n            result.push(value);\n          }\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          if (callback(value, index, collection)) {\n            result.push(value);\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, returning the first element that\n     * the callback returns truey for. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect, findWhere\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the found element, else `undefined`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': false },\n     *   { 'name': 'fred',    'age': 40, 'blocked': true },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }\n     * ];\n     *\n     * _.find(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => { 'name': 'barney', 'age': 36, 'blocked': false }\n     *\n     * // using \"_.where\" callback shorthand\n     * _.find(characters, { 'age': 1 });\n     * // =>  { 'name': 'pebbles', 'age': 1, 'blocked': false }\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.find(characters, 'blocked');\n     * // => { 'name': 'fred', 'age': 40, 'blocked': true }\n     */\n    function find(collection, callback, thisArg) {\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          var value = collection[index];\n          if (callback(value, index, collection)) {\n            return value;\n          }\n        }\n      } else {\n        var result;\n        forOwn(collection, function(value, index, collection) {\n          if (callback(value, index, collection)) {\n            result = value;\n            return false;\n          }\n        });\n        return result;\n      }\n    }\n\n    /**\n     * This method is like `_.find` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the found element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(num) {\n     *   return num % 2 == 1;\n     * });\n     * // => 3\n     */\n    function findLast(collection, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forEachRight(collection, function(value, index, collection) {\n        if (callback(value, index, collection)) {\n          result = value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, executing the callback for each\n     * element. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection). Callbacks may exit iteration early by\n     * explicitly returning `false`.\n     *\n     * Note: As with other \"Collections\" methods, objects with a `length` property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');\n     * // => logs each number and returns '1,2,3'\n     *\n     * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });\n     * // => logs each number and returns the object (property order is not guaranteed across environments)\n     */\n    function forEach(collection, callback, thisArg) {\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if (callback(collection[index], index, collection) === false) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, callback);\n      }\n      return collection;\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2, 3]).forEachRight(function(num) { console.log(num); }).join(',');\n     * // => logs each number from right to left and returns '3,2,1'\n     */\n    function forEachRight(collection, callback, thisArg) {\n      var length = collection ? collection.length : 0;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        while (length--) {\n          if (callback(collection[length], length, collection) === false) {\n            break;\n          }\n        }\n      } else {\n        var props = keys(collection);\n        length = props.length;\n        forOwn(collection, function(value, key, collection) {\n          key = props ? props[--length] : --length;\n          return callback(collection[key], key, collection);\n        });\n      }\n      return collection;\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of a collection through the callback. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of the collection through the given callback. The corresponding\n     * value of each key is the last element responsible for generating the key.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keys = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keys, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keys, function(key) { return String.fromCharCode(key.code); });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(characters, function(key) { this.fromCharCode(key.code); }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method named by `methodName` on each element in the `collection`\n     * returning an array of the results of each invoked method. Additional arguments\n     * will be provided to each invoked method. If `methodName` is a function it\n     * will be invoked for, and `this` bound to, each element in the `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|string} methodName The name of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [arg] Arguments to invoke the method with.\n     * @returns {Array} Returns a new array of the results of each invoked method.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    function invoke(collection, methodName) {\n      var args = slice(arguments, 2),\n          index = -1,\n          isFunc = typeof methodName == 'function',\n          length = collection ? collection.length : 0,\n          result = Array(typeof length == 'number' ? length : 0);\n\n      forEach(collection, function(value) {\n        result[++index] = (isFunc ? methodName : value[methodName]).apply(value, args);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an array of values by running each element in the collection\n     * through the callback. The callback is bound to `thisArg` and invoked with\n     * three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of the results of each `callback` execution.\n     * @example\n     *\n     * _.map([1, 2, 3], function(num) { return num * 3; });\n     * // => [3, 6, 9]\n     *\n     * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });\n     * // => [3, 6, 9] (property order is not guaranteed across environments)\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.map(characters, 'name');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, callback, thisArg) {\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      callback = lodash.createCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        var result = Array(length);\n        while (++index < length) {\n          result[index] = callback(collection[index], index, collection);\n        }\n      } else {\n        result = [];\n        forOwn(collection, function(value, key, collection) {\n          result[++index] = callback(value, key, collection);\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the maximum value of a collection. If the collection is empty or\n     * falsey `-Infinity` is returned. If a callback is provided it will be executed\n     * for each value in the collection to generate the criterion by which the value\n     * is ranked. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(characters, function(chr) { return chr.age; });\n     * // => { 'name': 'fred', 'age': 40 };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.max(characters, 'age');\n     * // => { 'name': 'fred', 'age': 40 };\n     */\n    function max(collection, callback, thisArg) {\n      var computed = -Infinity,\n          result = computed;\n\n      // allows working with functions like `_.map` without using\n      // their `index` argument as a callback\n      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {\n        callback = null;\n      }\n      if (callback == null && isArray(collection)) {\n        var index = -1,\n            length = collection.length;\n\n        while (++index < length) {\n          var value = collection[index];\n          if (value > result) {\n            result = value;\n          }\n        }\n      } else {\n        callback = (callback == null && isString(collection))\n          ? charAtCallback\n          : lodash.createCallback(callback, thisArg, 3);\n\n        forEach(collection, function(value, index, collection) {\n          var current = callback(value, index, collection);\n          if (current > computed) {\n            computed = current;\n            result = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the minimum value of a collection. If the collection is empty or\n     * falsey `Infinity` is returned. If a callback is provided it will be executed\n     * for each value in the collection to generate the criterion by which the value\n     * is ranked. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(characters, function(chr) { return chr.age; });\n     * // => { 'name': 'barney', 'age': 36 };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.min(characters, 'age');\n     * // => { 'name': 'barney', 'age': 36 };\n     */\n    function min(collection, callback, thisArg) {\n      var computed = Infinity,\n          result = computed;\n\n      // allows working with functions like `_.map` without using\n      // their `index` argument as a callback\n      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {\n        callback = null;\n      }\n      if (callback == null && isArray(collection)) {\n        var index = -1,\n            length = collection.length;\n\n        while (++index < length) {\n          var value = collection[index];\n          if (value < result) {\n            result = value;\n          }\n        }\n      } else {\n        callback = (callback == null && isString(collection))\n          ? charAtCallback\n          : lodash.createCallback(callback, thisArg, 3);\n\n        forEach(collection, function(value, index, collection) {\n          var current = callback(value, index, collection);\n          if (current < computed) {\n            computed = current;\n            result = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the value of a specified property from all elements in the collection.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {string} property The name of the property to pluck.\n     * @returns {Array} Returns a new array of property values.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(characters, 'name');\n     * // => ['barney', 'fred']\n     */\n    var pluck = map;\n\n    /**\n     * Reduces a collection to a value which is the accumulated result of running\n     * each element in the collection through the callback, where each successive\n     * callback execution consumes the return value of the previous execution. If\n     * `accumulator` is not provided the first element of the collection will be\n     * used as the initial `accumulator` value. The callback is bound to `thisArg`\n     * and invoked with four arguments; (accumulator, value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] Initial value of the accumulator.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var sum = _.reduce([1, 2, 3], function(sum, num) {\n     *   return sum + num;\n     * });\n     * // => 6\n     *\n     * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n     *   result[key] = num * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     */\n    function reduce(collection, callback, accumulator, thisArg) {\n      if (!collection) return accumulator;\n      var noaccum = arguments.length < 3;\n      callback = lodash.createCallback(callback, thisArg, 4);\n\n      var index = -1,\n          length = collection.length;\n\n      if (typeof length == 'number') {\n        if (noaccum) {\n          accumulator = collection[++index];\n        }\n        while (++index < length) {\n          accumulator = callback(accumulator, collection[index], index, collection);\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          accumulator = noaccum\n            ? (noaccum = false, value)\n            : callback(accumulator, value, index, collection)\n        });\n      }\n      return accumulator;\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] Initial value of the accumulator.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var list = [[0, 1], [2, 3], [4, 5]];\n     * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, callback, accumulator, thisArg) {\n      var noaccum = arguments.length < 3;\n      callback = lodash.createCallback(callback, thisArg, 4);\n      forEachRight(collection, function(value, index, collection) {\n        accumulator = noaccum\n          ? (noaccum = false, value)\n          : callback(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The opposite of `_.filter` this method returns the elements of a\n     * collection that the callback does **not** return truey for.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of elements that failed the callback check.\n     * @example\n     *\n     * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n     * // => [1, 3, 5]\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.reject(characters, 'blocked');\n     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.reject(characters, { 'age': 36 });\n     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]\n     */\n    function reject(collection, callback, thisArg) {\n      callback = lodash.createCallback(callback, thisArg, 3);\n      return filter(collection, function(value, index, collection) {\n        return !callback(value, index, collection);\n      });\n    }\n\n    /**\n     * Retrieves a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Allows working with functions like `_.map`\n     *  without using their `index` arguments as `n`.\n     * @returns {Array} Returns the random sample(s) of `collection`.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (collection && typeof collection.length != 'number') {\n        collection = values(collection);\n      }\n      if (n == null || guard) {\n        return collection ? collection[baseRandom(0, collection.length - 1)] : undefined;\n      }\n      var result = shuffle(collection);\n      result.length = nativeMin(nativeMax(0, n), result.length);\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the Fisher-Yates\n     * shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns a new shuffled collection.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4, 5, 6]);\n     * // => [4, 1, 6, 3, 5, 2]\n     */\n    function shuffle(collection) {\n      var index = -1,\n          length = collection ? collection.length : 0,\n          result = Array(typeof length == 'number' ? length : 0);\n\n      forEach(collection, function(value) {\n        var rand = baseRandom(0, ++index);\n        result[index] = result[rand];\n        result[rand] = value;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the size of the `collection` by returning `collection.length` for arrays\n     * and array-like objects or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns `collection.length` or number of own enumerable properties.\n     * @example\n     *\n     * _.size([1, 2]);\n     * // => 2\n     *\n     * _.size({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => 3\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? collection.length : 0;\n      return typeof length == 'number' ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if the callback returns a truey value for **any** element of a\n     * collection. The function returns as soon as it finds a passing value and\n     * does not iterate over the entire collection. The callback is bound to\n     * `thisArg` and invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if any element passed the callback check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.some(characters, 'blocked');\n     * // => true\n     *\n     * // using \"_.where\" callback shorthand\n     * _.some(characters, { 'age': 1 });\n     * // => false\n     */\n    function some(collection, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if ((result = callback(collection[index], index, collection))) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          return !(result = callback(value, index, collection));\n        });\n      }\n      return !!result;\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through the callback. This method\n     * performs a stable sort, that is, it will preserve the original sort order\n     * of equal elements. The callback is bound to `thisArg` and invoked with\n     * three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an array of property names is provided for `callback` the collection\n     * will be sorted by each property value.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of sorted elements.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);\n     * // => [3, 1, 2]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36 },\n     *   { 'name': 'fred',    'age': 40 },\n     *   { 'name': 'barney',  'age': 26 },\n     *   { 'name': 'fred',    'age': 30 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.map(_.sortBy(characters, 'age'), _.values);\n     * // => [['barney', 26], ['fred', 30], ['barney', 36], ['fred', 40]]\n     *\n     * // sorting by multiple properties\n     * _.map(_.sortBy(characters, ['name', 'age']), _.values);\n     * // = > [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]\n     */\n    function sortBy(collection, callback, thisArg) {\n      var index = -1,\n          isArr = isArray(callback),\n          length = collection ? collection.length : 0,\n          result = Array(typeof length == 'number' ? length : 0);\n\n      if (!isArr) {\n        callback = lodash.createCallback(callback, thisArg, 3);\n      }\n      forEach(collection, function(value, key, collection) {\n        var object = result[++index] = getObject();\n        if (isArr) {\n          object.criteria = map(callback, function(key) { return value[key]; });\n        } else {\n          (object.criteria = getArray())[0] = callback(value, key, collection);\n        }\n        object.index = index;\n        object.value = value;\n      });\n\n      length = result.length;\n      result.sort(compareAscending);\n      while (length--) {\n        var object = result[length];\n        result[length] = object.value;\n        if (!isArr) {\n          releaseArray(object.criteria);\n        }\n        releaseObject(object);\n      }\n      return result;\n    }\n\n    /**\n     * Converts the `collection` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to convert.\n     * @returns {Array} Returns the new converted array.\n     * @example\n     *\n     * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);\n     * // => [2, 3, 4]\n     */\n    function toArray(collection) {\n      if (collection && typeof collection.length == 'number') {\n        return slice(collection);\n      }\n      return values(collection);\n    }\n\n    /**\n     * Performs a deep comparison of each element in a `collection` to the given\n     * `properties` object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Object} props The object of property values to filter by.\n     * @returns {Array} Returns a new array of elements that have the given properties.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'pets': ['hoppy'] },\n     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.where(characters, { 'age': 36 });\n     * // => [{ 'name': 'barney', 'age': 36, 'pets': ['hoppy'] }]\n     *\n     * _.where(characters, { 'pets': ['dino'] });\n     * // => [{ 'name': 'fred', 'age': 40, 'pets': ['baby puss', 'dino'] }]\n     */\n    var where = filter;\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are all falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array excluding all values of the provided arrays using strict\n     * equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to process.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);\n     * // => [1, 3, 4]\n     */\n    function difference(array) {\n      return baseDifference(array, baseFlatten(arguments, true, true, 1));\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element that passes the callback check, instead of the element itself.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': false },\n     *   { 'name': 'fred',    'age': 40, 'blocked': true },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }\n     * ];\n     *\n     * _.findIndex(characters, function(chr) {\n     *   return chr.age < 20;\n     * });\n     * // => 2\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findIndex(characters, { 'age': 36 });\n     * // => 0\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findIndex(characters, 'blocked');\n     * // => 1\n     */\n    function findIndex(array, callback, thisArg) {\n      var index = -1,\n          length = array ? array.length : 0;\n\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (++index < length) {\n        if (callback(array[index], index, array)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': true },\n     *   { 'name': 'fred',    'age': 40, 'blocked': false },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': true }\n     * ];\n     *\n     * _.findLastIndex(characters, function(chr) {\n     *   return chr.age > 30;\n     * });\n     * // => 1\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findLastIndex(characters, { 'age': 36 });\n     * // => 0\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findLastIndex(characters, 'blocked');\n     * // => 2\n     */\n    function findLastIndex(array, callback, thisArg) {\n      var length = array ? array.length : 0;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (length--) {\n        if (callback(array[length], length, array)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Gets the first element or first `n` elements of an array. If a callback\n     * is provided elements at the beginning of the array are returned as long\n     * as the callback returns truey. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head, take\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback] The function called\n     *  per element or the number of elements to return. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the first element(s) of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.first([1, 2, 3], function(num) {\n     *   return num < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.first(characters, 'blocked');\n     * // => [{ 'name': 'barney', 'blocked': true, 'employer': 'slate' }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.pluck(_.first(characters, { 'employer': 'slate' }), 'name');\n     * // => ['barney', 'fred']\n     */\n    function first(array, callback, thisArg) {\n      var n = 0,\n          length = array ? array.length : 0;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = -1;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (++index < length && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback;\n        if (n == null || thisArg) {\n          return array ? array[0] : undefined;\n        }\n      }\n      return slice(array, 0, nativeMin(nativeMax(0, n), length));\n    }\n\n    /**\n     * Flattens a nested array (the nesting can be to any depth). If `isShallow`\n     * is truey, the array will only be flattened a single level. If a callback\n     * is provided each element of the array is passed through the callback before\n     * flattening. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2], [3, [[4]]]]);\n     * // => [1, 2, 3, 4];\n     *\n     * _.flatten([1, [2], [3, [[4]]]], true);\n     * // => [1, 2, 3, [[4]]];\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 30, 'pets': ['hoppy'] },\n     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.flatten(characters, 'pets');\n     * // => ['hoppy', 'baby puss', 'dino']\n     */\n    function flatten(array, isShallow, callback, thisArg) {\n      // juggle arguments\n      if (typeof isShallow != 'boolean' && isShallow != null) {\n        thisArg = callback;\n        callback = (typeof isShallow != 'function' && thisArg && thisArg[isShallow] === array) ? null : isShallow;\n        isShallow = false;\n      }\n      if (callback != null) {\n        array = map(array, callback, thisArg);\n      }\n      return baseFlatten(array, isShallow);\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found using\n     * strict equality for comparisons, i.e. `===`. If the array is already sorted\n     * providing `true` for `fromIndex` will run a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value or `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 3, 1, 2, 3], 2);\n     * // => 1\n     *\n     * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);\n     * // => 4\n     *\n     * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      if (typeof fromIndex == 'number') {\n        var length = array ? array.length : 0;\n        fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0);\n      } else if (fromIndex) {\n        var index = sortedIndex(array, value);\n        return array[index] === value ? index : -1;\n      }\n      return baseIndexOf(array, value, fromIndex);\n    }\n\n    /**\n     * Gets all but the last element or last `n` elements of an array. If a\n     * callback is provided elements at the end of the array are excluded from\n     * the result as long as the callback returns truey. The callback is bound\n     * to `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback=1] The function called\n     *  per element or the number of elements to exclude. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.initial([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.initial([1, 2, 3], function(num) {\n     *   return num > 1;\n     * });\n     * // => [1]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.initial(characters, 'blocked');\n     * // => [{ 'name': 'barney',  'blocked': false, 'employer': 'slate' }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.pluck(_.initial(characters, { 'employer': 'na' }), 'name');\n     * // => ['barney', 'fred']\n     */\n    function initial(array, callback, thisArg) {\n      var n = 0,\n          length = array ? array.length : 0;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = length;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (index-- && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = (callback == null || thisArg) ? 1 : callback || n;\n      }\n      return slice(array, 0, nativeMin(nativeMax(0, length - n), length));\n    }\n\n    /**\n     * Creates an array of unique values present in all provided arrays using\n     * strict equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of shared values.\n     * @example\n     *\n     * _.intersection([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n     * // => [1, 2]\n     */\n    function intersection() {\n      var args = [],\n          argsIndex = -1,\n          argsLength = arguments.length,\n          caches = getArray(),\n          indexOf = getIndexOf(),\n          trustIndexOf = indexOf === baseIndexOf,\n          seen = getArray();\n\n      while (++argsIndex < argsLength) {\n        var value = arguments[argsIndex];\n        if (isArray(value) || isArguments(value)) {\n          args.push(value);\n          caches.push(trustIndexOf && value.length >= largeArraySize &&\n            createCache(argsIndex ? args[argsIndex] : seen));\n        }\n      }\n      var array = args[0],\n          index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      outer:\n      while (++index < length) {\n        var cache = caches[0];\n        value = array[index];\n\n        if ((cache ? cacheIndexOf(cache, value) : indexOf(seen, value)) < 0) {\n          argsIndex = argsLength;\n          (cache || seen).push(value);\n          while (--argsIndex) {\n            cache = caches[argsIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n      }\n      while (argsLength--) {\n        cache = caches[argsLength];\n        if (cache) {\n          releaseObject(cache);\n        }\n      }\n      releaseArray(caches);\n      releaseArray(seen);\n      return result;\n    }\n\n    /**\n     * Gets the last element or last `n` elements of an array. If a callback is\n     * provided elements at the end of the array are returned as long as the\n     * callback returns truey. The callback is bound to `thisArg` and invoked\n     * with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback] The function called\n     *  per element or the number of elements to return. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the last element(s) of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     *\n     * _.last([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.last([1, 2, 3], function(num) {\n     *   return num > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.pluck(_.last(characters, 'blocked'), 'name');\n     * // => ['fred', 'pebbles']\n     *\n     * // using \"_.where\" callback shorthand\n     * _.last(characters, { 'employer': 'na' });\n     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]\n     */\n    function last(array, callback, thisArg) {\n      var n = 0,\n          length = array ? array.length : 0;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = length;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (index-- && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback;\n        if (n == null || thisArg) {\n          return array ? array[length - 1] : undefined;\n        }\n      }\n      return slice(array, nativeMax(0, length - n));\n    }\n\n    /**\n     * Gets the index at which the last occurrence of `value` is found using strict\n     * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used\n     * as the offset from the end of the collection.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value or `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);\n     * // => 4\n     *\n     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var index = array ? array.length : 0;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from the given array using strict equality for\n     * comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to modify.\n     * @param {...*} [value] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull(array) {\n      var args = arguments,\n          argsIndex = 0,\n          argsLength = args.length,\n          length = array ? array.length : 0;\n\n      while (++argsIndex < argsLength) {\n        var index = -1,\n            value = args[argsIndex];\n        while (++index < length) {\n          if (array[index] === value) {\n            splice.call(array, index--, 1);\n            length--;\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to but not including `end`. If `start` is less than `stop` a\n     * zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns a new range array.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      start = +start || 0;\n      step = typeof step == 'number' ? step : (+step || 1);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      }\n      // use `Array(length)` so engines like Chakra and V8 avoid slower modes\n      // http://youtu.be/XAqIpGU8ZZk#t=17m25s\n      var index = -1,\n          length = nativeMax(0, ceil((end - start) / (step || 1))),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Removes all elements from an array that the callback returns truey for\n     * and returns an array of removed elements. The callback is bound to `thisArg`\n     * and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4, 5, 6];\n     * var evens = _.remove(array, function(num) { return num % 2 == 0; });\n     *\n     * console.log(array);\n     * // => [1, 3, 5]\n     *\n     * console.log(evens);\n     * // => [2, 4, 6]\n     */\n    function remove(array, callback, thisArg) {\n      var index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (callback(value, index, array)) {\n          result.push(value);\n          splice.call(array, index--, 1);\n          length--;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.initial` this method gets all but the first element or\n     * first `n` elements of an array. If a callback function is provided elements\n     * at the beginning of the array are excluded from the result as long as the\n     * callback returns truey. The callback is bound to `thisArg` and invoked\n     * with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias drop, tail\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback=1] The function called\n     *  per element or the number of elements to exclude. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.rest([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.rest([1, 2, 3], function(num) {\n     *   return num < 3;\n     * });\n     * // => [3]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': false,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true, 'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.pluck(_.rest(characters, 'blocked'), 'name');\n     * // => ['fred', 'pebbles']\n     *\n     * // using \"_.where\" callback shorthand\n     * _.rest(characters, { 'employer': 'slate' });\n     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]\n     */\n    function rest(array, callback, thisArg) {\n      if (typeof callback != 'number' && callback != null) {\n        var n = 0,\n            index = -1,\n            length = array ? array.length : 0;\n\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (++index < length && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = (callback == null || thisArg) ? 1 : nativeMax(0, callback);\n      }\n      return slice(array, n);\n    }\n\n    /**\n     * Uses a binary search to determine the smallest index at which a value\n     * should be inserted into a given sorted array in order to maintain the sort\n     * order of the array. If a callback is provided it will be executed for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * callback is bound to `thisArg` and invoked with one argument; (value).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([20, 30, 50], 40);\n     * // => 2\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 2\n     *\n     * var dict = {\n     *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }\n     * };\n     *\n     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n     *   return dict.wordToNumber[word];\n     * });\n     * // => 2\n     *\n     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n     *   return this.wordToNumber[word];\n     * }, dict);\n     * // => 2\n     */\n    function sortedIndex(array, value, callback, thisArg) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      // explicitly reference `identity` for better inlining in Firefox\n      callback = callback ? lodash.createCallback(callback, thisArg, 1) : identity;\n      value = callback(value);\n\n      while (low < high) {\n        var mid = (low + high) >>> 1;\n        (callback(array[mid]) < value)\n          ? low = mid + 1\n          : high = mid;\n      }\n      return low;\n    }\n\n    /**\n     * Creates an array of unique values, in order, of the provided arrays using\n     * strict equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of combined values.\n     * @example\n     *\n     * _.union([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n     * // => [1, 2, 3, 5, 4]\n     */\n    function union() {\n      return baseUniq(baseFlatten(arguments, true, true));\n    }\n\n    /**\n     * Creates a duplicate-value-free version of an array using strict equality\n     * for comparisons, i.e. `===`. If the array is sorted, providing\n     * `true` for `isSorted` will use a faster algorithm. If a callback is provided\n     * each element of `array` is passed through the callback before uniqueness\n     * is computed. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Arrays\n     * @param {Array} array The array to process.\n     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([1, 2, 1, 3, 1]);\n     * // => [1, 2, 3]\n     *\n     * _.uniq([1, 1, 2, 2, 3], true);\n     * // => [1, 2, 3]\n     *\n     * _.uniq(['A', 'b', 'C', 'a', 'B', 'c'], function(letter) { return letter.toLowerCase(); });\n     * // => ['A', 'b', 'C']\n     *\n     * _.uniq([1, 2.5, 3, 1.5, 2, 3.5], function(num) { return this.floor(num); }, Math);\n     * // => [1, 2.5, 3]\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, callback, thisArg) {\n      // juggle arguments\n      if (typeof isSorted != 'boolean' && isSorted != null) {\n        thisArg = callback;\n        callback = (typeof isSorted != 'function' && thisArg && thisArg[isSorted] === array) ? null : isSorted;\n        isSorted = false;\n      }\n      if (callback != null) {\n        callback = lodash.createCallback(callback, thisArg, 3);\n      }\n      return baseUniq(array, isSorted, callback);\n    }\n\n    /**\n     * Creates an array excluding all provided values using strict equality for\n     * comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to filter.\n     * @param {...*} [value] The values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);\n     * // => [2, 3, 4]\n     */\n    function without(array) {\n      return baseDifference(array, slice(arguments, 1));\n    }\n\n    /**\n     * Creates an array that is the symmetric difference of the provided arrays.\n     * See http://en.wikipedia.org/wiki/Symmetric_difference.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of values.\n     * @example\n     *\n     * _.xor([1, 2, 3], [5, 2, 1, 4]);\n     * // => [3, 5, 4]\n     *\n     * _.xor([1, 2, 5], [2, 3, 5], [3, 4, 5]);\n     * // => [1, 4, 5]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArray(array) || isArguments(array)) {\n          var result = result\n            ? baseUniq(baseDifference(result, array).concat(baseDifference(array, result)))\n            : array;\n        }\n      }\n      return result || [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second\n     * elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @alias unzip\n     * @category Arrays\n     * @param {...Array} [array] Arrays to process.\n     * @returns {Array} Returns a new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    function zip() {\n      var array = arguments.length > 1 ? arguments : arguments[0],\n          index = -1,\n          length = array ? max(pluck(array, 'length')) : 0,\n          result = Array(length < 0 ? 0 : length);\n\n      while (++index < length) {\n        result[index] = pluck(array, index);\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed from arrays of `keys` and `values`. Provide\n     * either a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`\n     * or two arrays, one of `keys` and one of corresponding `values`.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Arrays\n     * @param {Array} keys The array of keys.\n     * @param {Array} [values=[]] The array of values.\n     * @returns {Object} Returns an object composed of the given keys and\n     *  corresponding values.\n     * @example\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(keys, values) {\n      var index = -1,\n          length = keys ? keys.length : 0,\n          result = {};\n\n      if (!values && length && !isArray(keys[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = keys[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a function that executes `func`, with  the `this` binding and\n     * arguments of the created function, only after being called `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {number} n The number of times the function must be called before\n     *  `func` is executed.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('Done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'Done saving!', after all saves have completed\n     */\n    function after(n, func) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that, when called, invokes `func` with the `this`\n     * binding of `thisArg` and prepends any additional `bind` arguments to those\n     * provided to the bound function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var func = function(greeting) {\n     *   return greeting + ' ' + this.name;\n     * };\n     *\n     * func = _.bind(func, { 'name': 'fred' }, 'hi');\n     * func();\n     * // => 'hi fred'\n     */\n    function bind(func, thisArg) {\n      return arguments.length > 2\n        ? createWrapper(func, 17, slice(arguments, 2), null, thisArg)\n        : createWrapper(func, 1, null, null, thisArg);\n    }\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all the function properties\n     * of `object` will be bound.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...string} [methodName] The object method names to\n     *  bind, specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() { console.log('clicked ' + this.label); }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs', when the button is clicked\n     */\n    function bindAll(object) {\n      var funcs = arguments.length > 1 ? baseFlatten(arguments, true, false, 1) : functions(object),\n          index = -1,\n          length = funcs.length;\n\n      while (++index < length) {\n        var key = funcs[index];\n        object[key] = createWrapper(object[key], 1, null, null, object);\n      }\n      return object;\n    }\n\n    /**\n     * Creates a function that, when called, invokes the method at `object[key]`\n     * and prepends any additional `bindKey` arguments to those provided to the bound\n     * function. This method differs from `_.bind` by allowing bound functions to\n     * reference methods that will be redefined or don't yet exist.\n     * See http://michaux.ca/articles/lazy-function-definition-pattern.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'name': 'fred',\n     *   'greet': function(greeting) {\n     *     return greeting + ' ' + this.name;\n     *   }\n     * };\n     *\n     * var func = _.bindKey(object, 'greet', 'hi');\n     * func();\n     * // => 'hi fred'\n     *\n     * object.greet = function(greeting) {\n     *   return greeting + 'ya ' + this.name + '!';\n     * };\n     *\n     * func();\n     * // => 'hiya fred!'\n     */\n    function bindKey(object, key) {\n      return arguments.length > 2\n        ? createWrapper(key, 19, slice(arguments, 2), null, object)\n        : createWrapper(key, 3, null, null, object);\n    }\n\n    /**\n     * Creates a function that is the composition of the provided functions,\n     * where each function consumes the return value of the function that follows.\n     * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.\n     * Each function is executed with the `this` binding of the composed function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {...Function} [func] Functions to compose.\n     * @returns {Function} Returns the new composed function.\n     * @example\n     *\n     * var realNameMap = {\n     *   'pebbles': 'penelope'\n     * };\n     *\n     * var format = function(name) {\n     *   name = realNameMap[name.toLowerCase()] || name;\n     *   return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\n     * };\n     *\n     * var greet = function(formatted) {\n     *   return 'Hiya ' + formatted + '!';\n     * };\n     *\n     * var welcome = _.compose(greet, format);\n     * welcome('pebbles');\n     * // => 'Hiya Penelope!'\n     */\n    function compose() {\n      var funcs = arguments,\n          length = funcs.length;\n\n      while (length--) {\n        if (!isFunction(funcs[length])) {\n          throw new TypeError;\n        }\n      }\n      return function() {\n        var args = arguments,\n            length = funcs.length;\n\n        while (length--) {\n          args = [funcs[length].apply(this, args)];\n        }\n        return args[0];\n      };\n    }\n\n    /**\n     * Creates a function which accepts one or more arguments of `func` that when\n     * invoked either executes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` can be specified\n     * if `func.length` is not sufficient.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var curried = _.curry(function(a, b, c) {\n     *   console.log(a + b + c);\n     * });\n     *\n     * curried(1)(2)(3);\n     * // => 6\n     *\n     * curried(1, 2)(3);\n     * // => 6\n     *\n     * curried(1, 2, 3);\n     * // => 6\n     */\n    function curry(func, arity) {\n      arity = typeof arity == 'number' ? arity : (+arity || func.length);\n      return createWrapper(func, 4, null, null, null, arity);\n    }\n\n    /**\n     * Creates a function that will delay the execution of `func` until after\n     * `wait` milliseconds have elapsed since the last time it was invoked.\n     * Provide an options object to indicate that `func` should be invoked on\n     * the leading and/or trailing edge of the `wait` timeout. Subsequent calls\n     * to the debounced function will return the result of the last `func` call.\n     *\n     * Note: If `leading` and `trailing` options are `true` `func` will be called\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to debounce.\n     * @param {number} wait The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify execution on the leading edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be delayed before it's called.\n     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * var lazyLayout = _.debounce(calculateLayout, 150);\n     * jQuery(window).on('resize', lazyLayout);\n     *\n     * // execute `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * });\n     *\n     * // ensure `batchLog` is executed once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * source.addEventListener('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }, false);\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      wait = nativeMax(0, wait) || 0;\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = options.leading;\n        maxWait = 'maxWait' in options && (nativeMax(wait, options.maxWait) || 0);\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n      var delayed = function() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0) {\n          if (maxTimeoutId) {\n            clearTimeout(maxTimeoutId);\n          }\n          var isCalled = trailingCall;\n          maxTimeoutId = timeoutId = trailingCall = undefined;\n          if (isCalled) {\n            lastCalled = now();\n            result = func.apply(thisArg, args);\n            if (!timeoutId && !maxTimeoutId) {\n              args = thisArg = null;\n            }\n          }\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      };\n\n      var maxDelayed = function() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (trailing || (maxWait !== wait)) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = null;\n          }\n        }\n      };\n\n      return function() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = null;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Defers executing the `func` function until the current call stack has cleared.\n     * Additional arguments will be provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to defer.\n     * @param {...*} [arg] Arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) { console.log(text); }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    function defer(func) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      var args = slice(arguments, 1);\n      return setTimeout(function() { func.apply(undefined, args); }, 1);\n    }\n\n    /**\n     * Executes the `func` function after `wait` milliseconds. Additional arguments\n     * will be provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay execution.\n     * @param {...*} [arg] Arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) { console.log(text); }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    function delay(func, wait) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      var args = slice(arguments, 2);\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it will be used to determine the cache key for storing the result\n     * based on the arguments provided to the memoized function. By default, the\n     * first argument provided to the memoized function is used as the cache key.\n     * The `func` is executed with the `this` binding of the memoized function.\n     * The result cache is exposed as the `cache` property on the memoized function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] A function used to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var fibonacci = _.memoize(function(n) {\n     *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);\n     * });\n     *\n     * fibonacci(9)\n     * // => 34\n     *\n     * var data = {\n     *   'fred': { 'name': 'fred', 'age': 40 },\n     *   'pebbles': { 'name': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // modifying the result cache\n     * var get = _.memoize(function(name) { return data[name]; }, _.identity);\n     * get('pebbles');\n     * // => { 'name': 'pebbles', 'age': 1 }\n     *\n     * get.cache.pebbles.name = 'penelope';\n     * get('pebbles');\n     * // => { 'name': 'penelope', 'age': 1 }\n     */\n    function memoize(func, resolver) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      var memoized = function() {\n        var cache = memoized.cache,\n            key = resolver ? resolver.apply(this, arguments) : keyPrefix + arguments[0];\n\n        return hasOwnProperty.call(cache, key)\n          ? cache[key]\n          : (cache[key] = func.apply(this, arguments));\n      }\n      memoized.cache = {};\n      return memoized;\n    }\n\n    /**\n     * Creates a function that is restricted to execute `func` once. Repeat calls to\n     * the function will return the value of the first call. The `func` is executed\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` executes `createApplication` once\n     */\n    function once(func) {\n      var ran,\n          result;\n\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      return function() {\n        if (ran) {\n          return result;\n        }\n        ran = true;\n        result = func.apply(this, arguments);\n\n        // clear the `func` variable so the function may be garbage collected\n        func = null;\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that, when called, invokes `func` with any additional\n     * `partial` arguments prepended to those provided to the new function. This\n     * method is similar to `_.bind` except it does **not** alter the `this` binding.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) { return greeting + ' ' + name; };\n     * var hi = _.partial(greet, 'hi');\n     * hi('fred');\n     * // => 'hi fred'\n     */\n    function partial(func) {\n      return createWrapper(func, 16, slice(arguments, 1));\n    }\n\n    /**\n     * This method is like `_.partial` except that `partial` arguments are\n     * appended to those provided to the new function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var defaultsDeep = _.partialRight(_.merge, _.defaults);\n     *\n     * var options = {\n     *   'variable': 'data',\n     *   'imports': { 'jq': $ }\n     * };\n     *\n     * defaultsDeep(options, _.templateSettings);\n     *\n     * options.variable\n     * // => 'data'\n     *\n     * options.imports\n     * // => { '_': _, 'jq': $ }\n     */\n    function partialRight(func) {\n      return createWrapper(func, 32, null, slice(arguments, 1));\n    }\n\n    /**\n     * Creates a function that, when executed, will only call the `func` function\n     * at most once per every `wait` milliseconds. Provide an options object to\n     * indicate that `func` should be invoked on the leading and/or trailing edge\n     * of the `wait` timeout. Subsequent calls to the throttled function will\n     * return the result of the last `func` call.\n     *\n     * Note: If `leading` and `trailing` options are `true` `func` will be called\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to throttle.\n     * @param {number} wait The number of milliseconds to throttle executions to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify execution on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * var throttled = _.throttle(updatePosition, 100);\n     * jQuery(window).on('scroll', throttled);\n     *\n     * // execute `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? options.leading : leading;\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n      debounceOptions.leading = leading;\n      debounceOptions.maxWait = wait;\n      debounceOptions.trailing = trailing;\n\n      return debounce(func, wait, debounceOptions);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Additional arguments provided to the function are appended\n     * to those provided to the wrapper function. The wrapper is executed with\n     * the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('Fred, Wilma, & Pebbles');\n     * // => '<p>Fred, Wilma, &amp; Pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return createWrapper(wrapper, 16, [value]);\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * var getter = _.constant(object);\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Produces a callback bound to an optional `thisArg`. If `func` is a property\n     * name the created callback will return the property value for a given element.\n     * If `func` is an object the created callback will return `true` for elements\n     * that contain the equivalent object properties, otherwise it will return `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} [func=identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of the created callback.\n     * @param {number} [argCount] The number of arguments the callback accepts.\n     * @returns {Function} Returns a callback function.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.createCallback = _.wrap(_.createCallback, function(func, callback, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(callback);\n     *   return !match ? func(callback, thisArg) : function(object) {\n     *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(characters, 'age__gt38');\n     * // => [{ 'name': 'fred', 'age': 40 }]\n     */\n    function createCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (func == null || type == 'function') {\n        return baseCreateCallback(func, thisArg, argCount);\n      }\n      // handle \"_.pluck\" style callback shorthands\n      if (type != 'object') {\n        return property(func);\n      }\n      var props = keys(func),\n          key = props[0],\n          a = func[key];\n\n      // handle \"_.where\" style callback shorthands\n      if (props.length == 1 && a === a && !isObject(a)) {\n        // fast path the common case of providing an object with a single\n        // property containing a primitive value\n        return function(object) {\n          var b = object[key];\n          return a === b && (a !== 0 || (1 / a == 1 / b));\n        };\n      }\n      return function(object) {\n        var length = props.length,\n            result = false;\n\n        while (length--) {\n          if (!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))) {\n            break;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Converts the characters `&`, `<`, `>`, `\"`, and `'` in `string` to their\n     * corresponding HTML entities.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} string The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('Fred, Wilma, & Pebbles');\n     * // => 'Fred, Wilma, &amp; Pebbles'\n     */\n    function escape(string) {\n      return string == null ? '' : String(string).replace(reUnescapedHtml, escapeHtmlChar);\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Adds function properties of a source object to the destination object.\n     * If `object` is a function methods will be added to its prototype as well.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {Function|Object} [object=lodash] object The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added are chainable.\n     * @example\n     *\n     * function capitalize(string) {\n     *   return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n     * }\n     *\n     * _.mixin({ 'capitalize': capitalize });\n     * _.capitalize('fred');\n     * // => 'Fred'\n     *\n     * _('fred').capitalize().value();\n     * // => 'Fred'\n     *\n     * _.mixin({ 'capitalize': capitalize }, { 'chain': false });\n     * _('fred').capitalize();\n     * // => 'Fred'\n     */\n    function mixin(object, source, options) {\n      var chain = true,\n          methodNames = source && functions(source);\n\n      if (!source || (!options && !methodNames.length)) {\n        if (options == null) {\n          options = source;\n        }\n        ctor = lodashWrapper;\n        source = object;\n        object = lodash;\n        methodNames = functions(source);\n      }\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      var ctor = object,\n          isFunc = isFunction(ctor);\n\n      forEach(methodNames, function(methodName) {\n        var func = object[methodName] = source[methodName];\n        if (isFunc) {\n          ctor.prototype[methodName] = function() {\n            var chainAll = this.__chain__,\n                value = this.__wrapped__,\n                args = [value];\n\n            push.apply(args, arguments);\n            var result = func.apply(object, args);\n            if (chain || chainAll) {\n              if (value === result && isObject(result)) {\n                return this;\n              }\n              result = new ctor(result);\n              result.__chain__ = chainAll;\n            }\n            return result;\n          };\n        }\n      });\n    }\n\n    /**\n     * Reverts the '_' variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      context._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // no operation performed\n    }\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @example\n     *\n     * var stamp = _.now();\n     * _.defer(function() { console.log(_.now() - stamp); });\n     * // => logs the number of milliseconds it took for the deferred function to be called\n     */\n    var now = isNative(now = Date.now) && now || function() {\n      return new Date().getTime();\n    };\n\n    /**\n     * Converts the given value into an integer of the specified radix.\n     * If `radix` is `undefined` or `0` a `radix` of `10` is used unless the\n     * `value` is a hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * Note: This method avoids differences in native ES3 and ES5 `parseInt`\n     * implementations. See http://es5.github.io/#E.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} value The value to parse.\n     * @param {number} [radix] The radix used to interpret the value to parse.\n     * @returns {number} Returns the new integer value.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     */\n    var parseInt = nativeParseInt(whitespace + '08') == 8 ? nativeParseInt : function(value, radix) {\n      // Firefox < 21 and Opera < 15 follow the ES3 specified implementation of `parseInt`\n      return nativeParseInt(isString(value) ? value.replace(reLeadingSpacesAndZeros, '') : value, radix || 0);\n    };\n\n    /**\n     * Creates a \"_.pluck\" style function, which returns the `key` value of a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} key The name of the property to retrieve.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'fred',   'age': 40 },\n     *   { 'name': 'barney', 'age': 36 }\n     * ];\n     *\n     * var getName = _.property('name');\n     *\n     * _.map(characters, getName);\n     * // => ['barney', 'fred']\n     *\n     * _.sortBy(characters, getName);\n     * // => [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred',   'age': 40 }]\n     */\n    function property(key) {\n      return function(object) {\n        return object[key];\n      };\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number will be\n     * returned. If `floating` is truey or either `min` or `max` are floats a\n     * floating-point number will be returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating=false] Specify returning a floating-point number.\n     * @returns {number} Returns a random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (typeof min == 'boolean' && noMax) {\n          floating = min;\n          min = 1;\n        }\n        else if (!noMax && typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand +'').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /**\n     * Resolves the value of property `key` on `object`. If `key` is a function\n     * it will be invoked with the `this` binding of `object` and its result returned,\n     * else the property value is returned. If `object` is falsey then `undefined`\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {Object} object The object to inspect.\n     * @param {string} key The name of the property to resolve.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = {\n     *   'cheese': 'crumpets',\n     *   'stuff': function() {\n     *     return 'nonsense';\n     *   }\n     * };\n     *\n     * _.result(object, 'cheese');\n     * // => 'crumpets'\n     *\n     * _.result(object, 'stuff');\n     * // => 'nonsense'\n     */\n    function result(object, key) {\n      if (object) {\n        var value = object[key];\n        return isFunction(value) ? object[key]() : value;\n      }\n    }\n\n    /**\n     * A micro-templating method that handles arbitrary delimiters, preserves\n     * whitespace, and correctly escapes quotes within interpolated code.\n     *\n     * Note: In the development build, `_.template` utilizes sourceURLs for easier\n     * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n     *\n     * For more information on precompiling templates see:\n     * https://lodash.com/custom-builds\n     *\n     * For more information on Chrome extension sandboxes see:\n     * http://developer.chrome.com/stable/extensions/sandboxingEval.html\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} text The template text.\n     * @param {Object} data The data object used to populate the text.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as local variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [variable] The data object variable name.\n     * @returns {Function|string} Returns a compiled function when no `data` object\n     *  is given, else it returns the interpolated text.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= name %>');\n     * compiled({ 'name': 'fred' });\n     * // => 'hello fred'\n     *\n     * // using the \"escape\" delimiter to escape HTML in data property values\n     * _.template('<b><%- value %></b>', { 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to generate HTML\n     * var list = '<% _.forEach(people, function(name) { %><li><%- name %></li><% }); %>';\n     * _.template(list, { 'people': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the ES6 delimiter as an alternative to the default \"interpolate\" delimiter\n     * _.template('hello ${ name }', { 'name': 'pebbles' });\n     * // => 'hello pebbles'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * _.template('<% print(\"hello \" + name); %>!', { 'name': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using a custom template delimiters\n     * _.templateSettings = {\n     *   'interpolate': /{{([\\s\\S]+?)}}/g\n     * };\n     *\n     * _.template('hello {{ name }}!', { 'name': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using the `imports` option to import jQuery\n     * var list = '<% jq.each(people, function(name) { %><li><%- name %></li><% }); %>';\n     * _.template(list, { 'people': ['fred', 'barney'] }, { 'imports': { 'jq': jQuery } });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     *   var __t, __p = '', __e = _.escape;\n     *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';\n     *   return __p;\n     * }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(text, data, options) {\n      // based on John Resig's `tmpl` implementation\n      // http://ejohn.org/blog/javascript-micro-templating/\n      // and Laura Doktorova's doT.js\n      // https://github.com/olado/doT\n      var settings = lodash.templateSettings;\n      text = String(text || '');\n\n      // avoid missing dependencies when `iteratorTemplate` is not defined\n      options = defaults({}, options, settings);\n\n      var imports = defaults({}, options.imports, settings.imports),\n          importsKeys = keys(imports),\n          importsValues = values(imports);\n\n      var isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // compile the regexp to match each delimiter\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      text.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // escape characters that cannot be included in string literals\n        source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // replace delimiters with snippets\n        if (escapeValue) {\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // the JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // if `variable` is not specified, wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain\n      var variable = options.variable,\n          hasVariable = variable;\n\n      if (!hasVariable) {\n        variable = 'obj';\n        source = 'with (' + variable + ') {\\n' + source + '\\n}\\n';\n      }\n      // cleanup code by stripping empty strings\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // frame code as the function body\n      source = 'function(' + variable + ') {\\n' +\n        (hasVariable ? '' : variable + ' || (' + variable + ' = {});\\n') +\n        \"var __t, __p = '', __e = _.escape\" +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      // Use a sourceURL for easier debugging.\n      // http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n      var sourceURL = '\\n/*\\n//# sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\\n*/';\n\n      try {\n        var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);\n      } catch(e) {\n        e.source = source;\n        throw e;\n      }\n      if (data) {\n        return result(data);\n      }\n      // provide the compiled function's source by its `toString` method, in\n      // supported environments, or the `source` property as a convenience for\n      // inlining compiled templates during the build process\n      result.source = source;\n      return result;\n    }\n\n    /**\n     * Executes the callback `n` times, returning an array of the results\n     * of each callback execution. The callback is bound to `thisArg` and invoked\n     * with one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {number} n The number of times to execute the callback.\n     * @param {Function} callback The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns an array of the results of each `callback` execution.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) { mage.castSpell(n); });\n     * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively\n     *\n     * _.times(3, function(n) { this.cast(n); }, mage);\n     * // => also calls `mage.castSpell(n)` three times\n     */\n    function times(n, callback, thisArg) {\n      n = (n = +n) > -1 ? n : 0;\n      var index = -1,\n          result = Array(n);\n\n      callback = baseCreateCallback(callback, thisArg, 1);\n      while (++index < n) {\n        result[index] = callback(index);\n      }\n      return result;\n    }\n\n    /**\n     * The inverse of `_.escape` this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their\n     * corresponding characters.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} string The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('Fred, Barney &amp; Pebbles');\n     * // => 'Fred, Barney & Pebbles'\n     */\n    function unescape(string) {\n      return string == null ? '' : String(string).replace(reEscapedHtml, unescapeHtmlChar);\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID will be appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return String(prefix == null ? '' : prefix) + id;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps the given value with explicit\n     * method chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chaining\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36 },\n     *   { 'name': 'fred',    'age': 40 },\n     *   { 'name': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(characters)\n     *     .sortBy('age')\n     *     .map(function(chr) { return chr.name + ' is ' + chr.age; })\n     *     .first()\n     *     .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      value = new lodashWrapper(value);\n      value.__chain__ = true;\n      return value;\n    }\n\n    /**\n     * Invokes `interceptor` with the `value` as the first argument and then\n     * returns `value`. The purpose of this method is to \"tap into\" a method\n     * chain in order to perform operations on intermediate results within\n     * the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chaining\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3, 4])\n     *  .tap(function(array) { array.pop(); })\n     *  .reverse()\n     *  .value();\n     * // => [3, 2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chaining\n     * @returns {*} Returns the wrapper object.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(characters).first();\n     * // => { 'name': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(characters).chain()\n     *   .first()\n     *   .pick('age')\n     *   .value();\n     * // => { 'age': 36 }\n     */\n    function wrapperChain() {\n      this.__chain__ = true;\n      return this;\n    }\n\n    /**\n     * Produces the `toString` result of the wrapped value.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chaining\n     * @returns {string} Returns the string result.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return String(this.__wrapped__);\n    }\n\n    /**\n     * Extracts the wrapped value.\n     *\n     * @name valueOf\n     * @memberOf _\n     * @alias value\n     * @category Chaining\n     * @returns {*} Returns the wrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).valueOf();\n     * // => [1, 2, 3]\n     */\n    function wrapperValueOf() {\n      return this.__wrapped__;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions that return wrapped values when chaining\n    lodash.after = after;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.chain = chain;\n    lodash.compact = compact;\n    lodash.compose = compose;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.createCallback = createCallback;\n    lodash.curry = curry;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.map = map;\n    lodash.mapValues = mapValues;\n    lodash.max = max;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.min = min;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.pull = pull;\n    lodash.range = range;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.shuffle = shuffle;\n    lodash.sortBy = sortBy;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.values = values;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n\n    // add aliases\n    lodash.collect = map;\n    lodash.drop = rest;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n    lodash.unzip = zip;\n\n    // add functions to `lodash.prototype`\n    mixin(lodash);\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions that return unwrapped values when chaining\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.contains = contains;\n    lodash.escape = escape;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.indexOf = indexOf;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isNaN = isNaN;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isUndefined = isUndefined;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.mixin = mixin;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.result = result;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.template = template;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n\n    // add aliases\n    lodash.all = every;\n    lodash.any = some;\n    lodash.detect = find;\n    lodash.findWhere = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.include = contains;\n    lodash.inject = reduce;\n\n    mixin(function() {\n      var source = {}\n      forOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }(), false);\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions capable of returning wrapped and unwrapped values when chaining\n    lodash.first = first;\n    lodash.last = last;\n    lodash.sample = sample;\n\n    // add aliases\n    lodash.take = first;\n    lodash.head = first;\n\n    forOwn(lodash, function(func, methodName) {\n      var callbackable = methodName !== 'sample';\n      if (!lodash.prototype[methodName]) {\n        lodash.prototype[methodName]= function(n, guard) {\n          var chainAll = this.__chain__,\n              result = func(this.__wrapped__, n, guard);\n\n          return !chainAll && (n == null || (guard && !(callbackable && typeof n == 'function')))\n            ? result\n            : new lodashWrapper(result, chainAll);\n        };\n      }\n    });\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = '2.4.2';\n\n    // add \"Chaining\" functions to the wrapper\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.value = wrapperValueOf;\n    lodash.prototype.valueOf = wrapperValueOf;\n\n    // add `Array` functions that return unwrapped values\n    forEach(['join', 'pop', 'shift'], function(methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function() {\n        var chainAll = this.__chain__,\n            result = func.apply(this.__wrapped__, arguments);\n\n        return chainAll\n          ? new lodashWrapper(result, chainAll)\n          : result;\n      };\n    });\n\n    // add `Array` functions that return the existing wrapped value\n    forEach(['push', 'reverse', 'sort', 'unshift'], function(methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function() {\n        func.apply(this.__wrapped__, arguments);\n        return this;\n      };\n    });\n\n    // add `Array` functions that return new wrapped values\n    forEach(['concat', 'slice', 'splice'], function(methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function() {\n        return new lodashWrapper(func.apply(this.__wrapped__, arguments), this.__chain__);\n      };\n    });\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // expose Lo-Dash\n  var _ = runInContext();\n\n  // some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lo-Dash to the global object even when an AMD loader is present in\n    // case Lo-Dash is loaded with a RequireJS shim config.\n    // See http://requirejs.org/docs/api.html#config-shim\n    root._ = _;\n\n    // define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module\n    define(function() {\n      return _;\n    });\n  }\n  // check for `exports` after `define` in case a build optimizer adds an `exports` object\n  else if (freeExports && freeModule) {\n    // in Node.js or RingoJS\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // in Narwhal or Rhino -require\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // in a browser or Rhino\n    root._ = _;\n  }\n}.call(this));\n"],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,SAAS2K,UAAUA,CAAC3K,KAAK,EAAE;MACzB,OAAO,OAAOA,KAAK,IAAI,UAAU;IACnC;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,SAASkH,QAAQA,CAAClH,KAAK,EAAE;MACvB;MACA;MACA;MACA;MACA,OAAO,CAAC,EAAEA,KAAK,IAAId,WAAW,CAAC,OAAOc,KAAK,CAAC,CAAC;IAC/C;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,SAAS+E,KAAKA,CAAC/E,KAAK,EAAE;MACpB;MACA;MACA,OAAOgO,QAAQ,CAAChO,KAAK,CAAC,IAAIA,KAAK,IAAI,CAACA,KAAK;IAC3C;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,SAASiO,MAAMA,CAACjO,KAAK,EAAE;MACrB,OAAOA,KAAK,KAAK,IAAI;IACvB;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,SAASgO,QAAQA,CAAChO,KAAK,EAAE;MACvB,OAAO,OAAOA,KAAK,IAAI,QAAQ,IAC7BA,KAAK,IAAI,OAAOA,KAAK,IAAI,QAAQ,IAAIuD,QAAQ,CAACqC,IAAI,CAAC5F,KAAK,CAAC,IAAIrB,WAAW,IAAI,KAAK;IACrF;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,IAAIqM,aAAa,GAAG,CAAClH,cAAc,GAAGmI,iBAAiB,GAAG,UAASjM,KAAK,EAAE;MACxE,IAAI,EAAEA,KAAK,IAAI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K,GAAGC,MAAM,EAAE;QACvB,IAAIH,KAAK,GAAGD,KAAK,CAACG,KAAK,CAAC;QACxB,IAAIF,KAAK,EAAE;UACTyB,MAAM,CAACf,IAAI,CAACV,KAAK,CAAC;QACpB;MACF;MACA,OAAOyB,MAAM;IACf;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,SAASmP,UAAUA,CAAC7Q,KAAK,EAAE;MACzB,OAAOuJ,cAAc,CAACvJ,KAAK,EAAE4J,WAAW,CAAC5C,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACrE;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,SAAS8J,SAASA,CAAC9Q,KAAK,EAAEuH,QAAQ,EAAEX,OAAO,EAAE;MAC3C,IAAIzG,KAAK,GAAG,CAAC,CAAC;QACVC,MAAM,GAAGJ,KAAK,GAAGA,KAAK,CAACI,MAAM,GAAG,CAAC;MAErCmH,QAAQ,GAAG3B,MAAM,CAAC8F,cAAc,CAACnE,QAAQ,EAAEX,OAAO,EAAE,CAAC,CAAC;MACtD,OAAO,EAAEzG,KAAK,GAAGC,MAAM,EAAE;QACvB,IAAImH,QAAQ,CAACvH,KAAK,CAACG,KAAK,CAAC,EAAEA,KAAK,EAAEH,KAAK,CAAC,EAAE;UACxC,OAAOG,KAAK;QACd;MACF;MACA,OAAO,CAAC,CAAC;IACX;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,SAAS4Q,aAAaA,CAAC/Q,KAAK,EA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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,SAASwQ,OAAOA,CAACxQ,MAAM,EAAEzB,GAAG,EAAE;MAC5B,OAAOwG,SAAS,CAAC5G,MAAM,GAAG,CAAC,GACvBuL,aAAa,CAACnL,GAAG,EAAE,EAAE,EAAE4B,KAAK,CAAC4E,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE/E,MAAM,CAAC,GACzD0J,aAAa,CAACnL,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAEyB,MAAM,CAAC;IAC/C;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,SAASyQ,OAAOA,CAAA,EAAG;MACjB,IAAIF,KAAK,GAAGxL,SAAS;QACjB5G,MAAM,GAAGoS,KAAK,CAACpS,MAAM;MAEzB,OAAOA,MAAM,EAAE,EAAE;QACf,IAAI,CAACwK,UAAU,CAAC4H,KAAK,CAACpS,MAAM,CAAC,CAAC,EAAE;UAC9B,MAAM,IAAI+C,SAAS,CAAD,CAAC;QACrB;MACF;MACA,OAAO,YAAW;QAChB,IAAI2D,IAAI,GAAGE,SAAS;UAChB5G,MAAM,GAAGoS,KAAK,CAACpS,MAAM;QAEzB,OAAOA,MAAM,EAAE,EAAE;UACf0G,IAAI,GAAG,CAAC0L,KAAK,CAACpS,MAAM,CAAC,CAAC2G,KAAK,CAAC,IAAI,EAAED,IAAI,CAAC,CAAC;QAC1C;QACA,OAAOA,IAAI,CAAC,CAAC,CAAC;MAChB,CAAC;IACH;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,S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,CAACvB,KAAK,CAAC,GAAGoH,QAAQ,CAACpH,KAAK,CAAC;MACjC;MACA,OAAOuB,MAAM;IACf;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,SAAS+U,QAAQA,CAACtU,MAAM,EAAE;MACxB,OAAOA,MAAM,IAAI,IAAI,GAAG,EAAE,GAAGe,MAAM,CAACf,MAAM,CAAC,CAACuB,OAAO,CAAC8I,aAAa,EAAEL,gBAAgB,CAAC;IACtF;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,SAASuK,QAAQA,CAACC,MAAM,EAAE;MACxB,IAAIC,EAAE,GAAG,EAAEzZ,SAAS;MACpB,OAAO+F,MAAM,CAACyT,MAAM,IAAI,IAAI,GAAG,EAAE,GAAGA,MAAM,CAAC,GAAGC,EAAE;IAClD;;IAEA;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,SAAS/B,KAAKA,CAAC5U,KAAK,EAAE;MACpBA,KAAK,GAAG,IAAI6F,aAAa,CAAC7F,KAAK,CAAC;MAChCA,KAAK,CAAC+F,SAAS,GAAG,IAAI;MACtB,OAAO/F,KAAK;IACd;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,SAAS4W,GAAGA,CAAC5W,KAAK,EAAE6W,WAAW,EAAE;MAC/BA,WAAW,CAAC7W,KAAK,CAAC;MAClB,OAAOA,KAAK;IACd;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,SAAS8W,YAAYA,CAAA,EAAG;MACtB,IAAI,CAAC/Q,SAAS,GAAG,IAAI;MACrB,OAAO,IAAI;IAC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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}