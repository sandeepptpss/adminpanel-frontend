{"ast":null,"code":"var Delta, Quill, UndoManager, _;\nQuill = require('../quill');\n_ = Quill.require('lodash');\nDelta = Quill.require('delta');\nUndoManager = function () {\n  UndoManager.DEFAULTS = {\n    delay: 1000,\n    maxStack: 100\n  };\n  UndoManager.hotkeys = {\n    UNDO: {\n      key: 'Z',\n      metaKey: true\n    },\n    REDO: {\n      key: 'Z',\n      metaKey: true,\n      shiftKey: true\n    }\n  };\n  function UndoManager(quill, options) {\n    this.quill = quill;\n    this.options = options != null ? options : {};\n    this.lastRecorded = 0;\n    this.emittedDelta = null;\n    this.clear();\n    this.initListeners();\n  }\n  UndoManager.prototype.initListeners = function () {\n    this.quill.onModuleLoad('keyboard', function (_this) {\n      return function (keyboard) {\n        keyboard.addHotkey(UndoManager.hotkeys.UNDO, function () {\n          _this.undo();\n          return false;\n        });\n        return keyboard.addHotkey(UndoManager.hotkeys.REDO, function () {\n          _this.redo();\n          return false;\n        });\n      };\n    }(this));\n    return this.quill.on(this.quill.constructor.events.TEXT_CHANGE, function (_this) {\n      return function (delta, origin) {\n        if (_.isEqual(delta, _this.emittedDelta)) {\n          return;\n        }\n        _this.record(delta, _this.oldDelta);\n        return _this.oldDelta = _this.quill.getContents();\n      };\n    }(this));\n  };\n  UndoManager.prototype.clear = function () {\n    this.stack = {\n      undo: [],\n      redo: []\n    };\n    return this.oldDelta = this.quill.getContents();\n  };\n  UndoManager.prototype.record = function (changeDelta, oldDelta) {\n    var change, ignored, timestamp, undoDelta;\n    if (!(changeDelta.ops.length > 0)) {\n      return;\n    }\n    this.stack.redo = [];\n    try {\n      undoDelta = this.quill.getContents().diff(this.oldDelta);\n      timestamp = new Date().getTime();\n      if (this.lastRecorded + this.options.delay > timestamp && this.stack.undo.length > 0) {\n        change = this.stack.undo.pop();\n        undoDelta = undoDelta.compose(change.undo);\n        changeDelta = change.redo.compose(changeDelta);\n      } else {\n        this.lastRecorded = timestamp;\n      }\n      this.stack.undo.push({\n        redo: changeDelta,\n        undo: undoDelta\n      });\n      if (this.stack.undo.length > this.options.maxStack) {\n        return this.stack.undo.unshift();\n      }\n    } catch (_error) {\n      ignored = _error;\n      return this.clear();\n    }\n  };\n  UndoManager.prototype.redo = function () {\n    return this._change('redo', 'undo');\n  };\n  UndoManager.prototype.undo = function () {\n    return this._change('undo', 'redo');\n  };\n  UndoManager.prototype._getLastChangeIndex = function (delta) {\n    var index, lastIndex;\n    lastIndex = 0;\n    index = 0;\n    delta.ops.forEach(function (op) {\n      if (op.insert != null) {\n        return lastIndex = Math.max(index + (op.insert.length || 1), lastIndex);\n      } else if (op[\"delete\"] != null) {\n        return lastIndex = Math.max(index, lastIndex);\n      } else if (op.retain != null) {\n        if (op.attributes != null) {\n          lastIndex = Math.max(index + op.retain, lastIndex);\n        }\n        return index += op.retain;\n      }\n    });\n    return lastIndex;\n  };\n  UndoManager.prototype._change = function (source, dest) {\n    var change, index;\n    if (this.stack[source].length > 0) {\n      change = this.stack[source].pop();\n      this.lastRecorded = 0;\n      this.emittedDelta = change[source];\n      this.quill.updateContents(change[source], 'user');\n      this.emittedDelta = null;\n      index = this._getLastChangeIndex(change[source]);\n      this.quill.setSelection(index, index);\n      this.oldDelta = this.quill.getContents();\n      return this.stack[dest].push(change);\n    }\n  };\n  return UndoManager;\n}();\nQuill.registerModule('undo-manager', UndoManager);\nmodule.exports = UndoManager;","map":{"version":3,"names":["Delta","Quill","UndoManager","_","require","DEFAULTS","delay","maxStack","hotkeys","UNDO","key","metaKey","REDO","shiftKey","quill","options","lastRecorded","emittedDelta","clear","initListeners","prototype","onModuleLoad","_this","keyboard","addHotkey","undo","redo","on","constructor","events","TEXT_CHANGE","delta","origin","isEqual","record","oldDelta","getContents","stack","changeDelta","change","ignored","timestamp","undoDelta","ops","length","diff","Date","getTime","pop","compose","push","unshift","_error","_change","_getLastChangeIndex","index","lastIndex","forEach","op","insert","Math","max","retain","attributes","source","dest","updateContents","setSelection","registerModule","module","exports"],"sources":["/home/tpss/public_html/Mernstack/authtask/frontend/node_modules/quilljs/lib/modules/undo-manager.js"],"sourcesContent":["var Delta, Quill, UndoManager, _;\n\nQuill = require('../quill');\n\n_ = Quill.require('lodash');\n\nDelta = Quill.require('delta');\n\nUndoManager = (function() {\n  UndoManager.DEFAULTS = {\n    delay: 1000,\n    maxStack: 100\n  };\n\n  UndoManager.hotkeys = {\n    UNDO: {\n      key: 'Z',\n      metaKey: true\n    },\n    REDO: {\n      key: 'Z',\n      metaKey: true,\n      shiftKey: true\n    }\n  };\n\n  function UndoManager(quill, options) {\n    this.quill = quill;\n    this.options = options != null ? options : {};\n    this.lastRecorded = 0;\n    this.emittedDelta = null;\n    this.clear();\n    this.initListeners();\n  }\n\n  UndoManager.prototype.initListeners = function() {\n    this.quill.onModuleLoad('keyboard', (function(_this) {\n      return function(keyboard) {\n        keyboard.addHotkey(UndoManager.hotkeys.UNDO, function() {\n          _this.undo();\n          return false;\n        });\n        return keyboard.addHotkey(UndoManager.hotkeys.REDO, function() {\n          _this.redo();\n          return false;\n        });\n      };\n    })(this));\n    return this.quill.on(this.quill.constructor.events.TEXT_CHANGE, (function(_this) {\n      return function(delta, origin) {\n        if (_.isEqual(delta, _this.emittedDelta)) {\n          return;\n        }\n        _this.record(delta, _this.oldDelta);\n        return _this.oldDelta = _this.quill.getContents();\n      };\n    })(this));\n  };\n\n  UndoManager.prototype.clear = function() {\n    this.stack = {\n      undo: [],\n      redo: []\n    };\n    return this.oldDelta = this.quill.getContents();\n  };\n\n  UndoManager.prototype.record = function(changeDelta, oldDelta) {\n    var change, ignored, timestamp, undoDelta;\n    if (!(changeDelta.ops.length > 0)) {\n      return;\n    }\n    this.stack.redo = [];\n    try {\n      undoDelta = this.quill.getContents().diff(this.oldDelta);\n      timestamp = new Date().getTime();\n      if (this.lastRecorded + this.options.delay > timestamp && this.stack.undo.length > 0) {\n        change = this.stack.undo.pop();\n        undoDelta = undoDelta.compose(change.undo);\n        changeDelta = change.redo.compose(changeDelta);\n      } else {\n        this.lastRecorded = timestamp;\n      }\n      this.stack.undo.push({\n        redo: changeDelta,\n        undo: undoDelta\n      });\n      if (this.stack.undo.length > this.options.maxStack) {\n        return this.stack.undo.unshift();\n      }\n    } catch (_error) {\n      ignored = _error;\n      return this.clear();\n    }\n  };\n\n  UndoManager.prototype.redo = function() {\n    return this._change('redo', 'undo');\n  };\n\n  UndoManager.prototype.undo = function() {\n    return this._change('undo', 'redo');\n  };\n\n  UndoManager.prototype._getLastChangeIndex = function(delta) {\n    var index, lastIndex;\n    lastIndex = 0;\n    index = 0;\n    delta.ops.forEach(function(op) {\n      if (op.insert != null) {\n        return lastIndex = Math.max(index + (op.insert.length || 1), lastIndex);\n      } else if (op[\"delete\"] != null) {\n        return lastIndex = Math.max(index, lastIndex);\n      } else if (op.retain != null) {\n        if (op.attributes != null) {\n          lastIndex = Math.max(index + op.retain, lastIndex);\n        }\n        return index += op.retain;\n      }\n    });\n    return lastIndex;\n  };\n\n  UndoManager.prototype._change = function(source, dest) {\n    var change, index;\n    if (this.stack[source].length > 0) {\n      change = this.stack[source].pop();\n      this.lastRecorded = 0;\n      this.emittedDelta = change[source];\n      this.quill.updateContents(change[source], 'user');\n      this.emittedDelta = null;\n      index = this._getLastChangeIndex(change[source]);\n      this.quill.setSelection(index, index);\n      this.oldDelta = this.quill.getContents();\n      return this.stack[dest].push(change);\n    }\n  };\n\n  return UndoManager;\n\n})();\n\nQuill.registerModule('undo-manager', UndoManager);\n\nmodule.exports = UndoManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}