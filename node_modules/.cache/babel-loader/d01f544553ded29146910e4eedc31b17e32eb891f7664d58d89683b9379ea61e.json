{"ast":null,"code":"var _jsxFileName = \"/home/tpss/public_html/Mernstack/authtask/frontend/src/components/blogDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogDetails = () => {\n  _s();\n  const [blog, setBlog] = useState(null);\n  const [formattedDate, setFormattedDate] = useState(\"\");\n  const {\n    title\n  } = useParams(); // <-- this is slug now\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        var _result$data;\n        const response = await fetch(`http://localhost:8002/api/get-blog-by-slug/${title}`);\n        const result = await response.json();\n        setBlog(result.data);\n        if ((_result$data = result.data) !== null && _result$data !== void 0 && _result$data.createdAt) {\n          const createdAt = new Date(result.data.createdAt);\n          if (!isNaN(createdAt.getTime())) {\n            const formatted = createdAt.toLocaleDateString(\"en-US\", {\n              year: \"numeric\",\n              month: \"long\",\n              day: \"numeric\"\n            });\n            setFormattedDate(formatted);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, [title]);\n  if (!blog) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"portfolio-blog custom-main-blog\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: blog.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Author Name: \", blog.auther]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), formattedDate && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: formattedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-blog-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:8002/${blog.image}`,\n        alt: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"blog-description\",\n      children: blog.decription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(BlogDetails, \"fSx6yaC463JJ4zdfklcdQGIdsJ8=\", false, function () {\n  return [useParams];\n});\n_c = BlogDetails;\nexport default BlogDetails;\n\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n\n// const BlogDetails = () => {\n//   const [blog, setBlog] = useState(null);\n//   const [formattedDate, setFormattedDate] = useState(\"\");\n//   const { title } = useParams();\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch(`http://localhost:8002/api/get-blog/${title}`);\n//         const result = await response.json();\n//         console.log(\"Fetched Data:\", result);\n//         setBlog(result.data);\n\n//         const createdAt = new Date(result.data.createdAt);\n//         const isValidDate = !isNaN(createdAt.getTime());\n//         if(isValidDate){\n//           const formatted = createdAt.toLocaleDateString(\"en-US\", {\n//             year: \"numeric\",\n//             month: \"long\",\n//             day: \"numeric\",\n//           });\n//           setFormattedDate(formatted);\n//         }\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//      }\n//   };\n//   fetchData();\n//   }, [id]);\n\n//   if (!blog) return <p>Loading...</p>;\n\n//   return (\n//     <div className=\"portfolio-blog custom-main-blog\">\n//       <h3>{blog.title}</h3>\n//       <h4>Author Name: {blog.auther}</h4>\n//       {formattedDate && <p>{formattedDate}</p>}\n//       <div className=\"portfolio-blog-image\">\n//         <img src={`http://localhost:8002/${blog.image}`} alt={blog.title} />\n//       </div>\n//       <p className=\"blog-description\">{blog.decription}</p>\n//     </div>\n//   );\n// };\n\n// export default BlogDetails;\nvar _c;\n$RefreshReg$(_c, \"BlogDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","BlogDetails","_s","blog","setBlog","formattedDate","setFormattedDate","title","fetchData","_result$data","response","fetch","result","json","data","createdAt","Date","isNaN","getTime","formatted","toLocaleDateString","year","month","day","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","auther","src","image","alt","decription","_c","$RefreshReg$"],"sources":["/home/tpss/public_html/Mernstack/authtask/frontend/src/components/blogDetails.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst BlogDetails = () => {\n  const [blog, setBlog] = useState(null);\n  const [formattedDate, setFormattedDate] = useState(\"\");\n  const { title } = useParams();  // <-- this is slug now\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8002/api/get-blog-by-slug/${title}`);\n        const result = await response.json();\n        setBlog(result.data);\n\n        if (result.data?.createdAt) {\n          const createdAt = new Date(result.data.createdAt);\n          if (!isNaN(createdAt.getTime())) {\n            const formatted = createdAt.toLocaleDateString(\"en-US\", {\n              year: \"numeric\",\n              month: \"long\",\n              day: \"numeric\",\n            });\n            setFormattedDate(formatted);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, [title]);\n\n  if (!blog) return <p>Loading...</p>;\n\n  return (\n    <div className=\"portfolio-blog custom-main-blog\">\n      <h3>{blog.title}</h3>\n      <h4>Author Name: {blog.auther}</h4>\n      {formattedDate && <p>{formattedDate}</p>}\n      <div className=\"portfolio-blog-image\">\n        <img src={`http://localhost:8002/${blog.image}`} alt={blog.title} />\n      </div>\n      <p className=\"blog-description\">{blog.decription}</p>\n    </div>\n  );\n};\n\nexport default BlogDetails;\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n\n// const BlogDetails = () => {\n//   const [blog, setBlog] = useState(null);\n//   const [formattedDate, setFormattedDate] = useState(\"\");\n//   const { title } = useParams();\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch(`http://localhost:8002/api/get-blog/${title}`);\n//         const result = await response.json();\n//         console.log(\"Fetched Data:\", result);\n//         setBlog(result.data);\n\n//         const createdAt = new Date(result.data.createdAt);\n//         const isValidDate = !isNaN(createdAt.getTime());\n//         if(isValidDate){\n//           const formatted = createdAt.toLocaleDateString(\"en-US\", {\n//             year: \"numeric\",\n//             month: \"long\",\n//             day: \"numeric\",\n//           });\n//           setFormattedDate(formatted);\n//         }\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//      }\n//   };\n//   fetchData();\n//   }, [id]);\n\n//   if (!blog) return <p>Loading...</p>;\n\n//   return (\n//     <div className=\"portfolio-blog custom-main-blog\">\n//       <h3>{blog.title}</h3>\n//       <h4>Author Name: {blog.auther}</h4>\n//       {formattedDate && <p>{formattedDate}</p>}\n//       <div className=\"portfolio-blog-image\">\n//         <img src={`http://localhost:8002/${blog.image}`} alt={blog.title} />\n//       </div>\n//       <p className=\"blog-description\">{blog.decription}</p>\n//     </div>\n//   );\n// };\n\n// export default BlogDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}