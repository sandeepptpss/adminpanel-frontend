{"ast":null,"code":"var Normalizer, dom, _;\n_ = require('lodash');\ndom = require('./dom');\nNormalizer = {\n  ALIASES: {\n    'STRONG': 'B',\n    'EM': 'I',\n    'DEL': 'S',\n    'STRIKE': 'S'\n  },\n  ATTRIBUTES: {\n    'color': 'color',\n    'face': 'fontFamily',\n    'size': 'fontSize'\n  },\n  STYLES: {\n    'background-color': 'background-color',\n    'color': 'color',\n    'font-family': 'font-family',\n    'font-size': 'font-size',\n    'text-align': 'text-align'\n  },\n  TAGS: {\n    'DIV': 'DIV',\n    'BR': 'BR',\n    'SPAN': 'SPAN',\n    'B': 'B',\n    'I': 'I',\n    'S': 'S',\n    'U': 'U',\n    'A': 'A',\n    'IMG': 'IMG',\n    'OL': 'OL',\n    'UL': 'UL',\n    'LI': 'LI'\n  },\n  handleBreaks: function (lineNode) {\n    var breaks;\n    breaks = _.map(lineNode.querySelectorAll(dom.DEFAULT_BREAK_TAG));\n    _.each(breaks, function (_this) {\n      return function (br) {\n        if (br.nextSibling != null && (!dom.isIE(10) || br.previousSibling != null)) {\n          return dom(br.nextSibling).splitAncestors(lineNode.parentNode);\n        }\n      };\n    }(this));\n    return lineNode;\n  },\n  normalizeLine: function (lineNode) {\n    lineNode = Normalizer.wrapInline(lineNode);\n    lineNode = Normalizer.handleBreaks(lineNode);\n    lineNode = Normalizer.pullBlocks(lineNode);\n    lineNode = Normalizer.normalizeNode(lineNode);\n    Normalizer.unwrapText(lineNode);\n    if (lineNode != null && dom.LIST_TAGS[lineNode.tagName] != null) {\n      lineNode = lineNode.firstChild;\n    }\n    return lineNode;\n  },\n  normalizeNode: function (node) {\n    if (dom(node).isTextNode()) {\n      return node;\n    }\n    _.each(Normalizer.ATTRIBUTES, function (style, attribute) {\n      var value;\n      if (node.hasAttribute(attribute)) {\n        value = node.getAttribute(attribute);\n        if (attribute === 'size') {\n          value = dom.convertFontSize(value);\n        }\n        node.style[style] = value;\n        return node.removeAttribute(attribute);\n      }\n    });\n    Normalizer.whitelistStyles(node);\n    return Normalizer.whitelistTags(node);\n  },\n  optimizeLine: function (lineNode) {\n    var lineNodeLength, node, nodes, _results;\n    lineNodeLength = dom(lineNode).length();\n    nodes = dom(lineNode).descendants();\n    _results = [];\n    while (nodes.length > 0) {\n      node = nodes.pop();\n      if ((node != null ? node.parentNode : void 0) == null) {\n        continue;\n      }\n      if (dom.EMBED_TAGS[node.tagName] != null) {\n        continue;\n      }\n      if (node.tagName === dom.DEFAULT_BREAK_TAG) {\n        if (lineNodeLength !== 0) {\n          _results.push(dom(node).remove());\n        } else {\n          _results.push(void 0);\n        }\n      } else if (dom(node).length() === 0) {\n        nodes.push(node.nextSibling);\n        _results.push(dom(node).unwrap());\n      } else if (node.previousSibling != null && node.tagName === node.previousSibling.tagName) {\n        if (_.isEqual(dom(node).attributes(), dom(node.previousSibling).attributes())) {\n          nodes.push(node.firstChild);\n          _results.push(dom(node.previousSibling).merge(node));\n        } else {\n          _results.push(void 0);\n        }\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  },\n  pullBlocks: function (lineNode) {\n    var curNode;\n    curNode = lineNode.firstChild;\n    while (curNode != null) {\n      if (dom.BLOCK_TAGS[curNode.tagName] != null && curNode.tagName !== 'LI') {\n        if (curNode.previousSibling != null) {\n          dom(curNode).splitAncestors(lineNode.parentNode);\n        }\n        if (curNode.nextSibling != null) {\n          dom(curNode.nextSibling).splitAncestors(lineNode.parentNode);\n        }\n        if (dom.LIST_TAGS[curNode.tagName] == null || !curNode.firstChild) {\n          dom(curNode).unwrap();\n          Normalizer.pullBlocks(lineNode);\n        } else {\n          dom(curNode.parentNode).unwrap();\n          if (lineNode.parentNode == null) {\n            lineNode = curNode;\n          }\n        }\n        break;\n      }\n      curNode = curNode.nextSibling;\n    }\n    return lineNode;\n  },\n  stripComments: function (html) {\n    return html.replace(/<!--[\\s\\S]*?-->/g, '');\n  },\n  stripWhitespace: function (html) {\n    html = html.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    html = html.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    html = html.replace(/(\\r?\\n|\\r)+/g, ' ');\n    html = html.replace(/\\>\\s+\\</g, '><');\n    return html;\n  },\n  whitelistStyles: function (node) {\n    var original, styles;\n    original = dom(node).styles();\n    styles = _.omit(original, function (value, key) {\n      return Normalizer.STYLES[key] == null;\n    });\n    if (_.keys(styles).length < _.keys(original).length) {\n      if (_.keys(styles).length > 0) {\n        return dom(node).styles(styles, true);\n      } else {\n        return node.removeAttribute('style');\n      }\n    }\n  },\n  whitelistTags: function (node) {\n    if (!dom(node).isElement()) {\n      return node;\n    }\n    if (Normalizer.ALIASES[node.tagName] != null) {\n      node = dom(node).switchTag(Normalizer.ALIASES[node.tagName]);\n    } else if (Normalizer.TAGS[node.tagName] == null) {\n      if (dom.BLOCK_TAGS[node.tagName] != null) {\n        node = dom(node).switchTag(dom.DEFAULT_BLOCK_TAG);\n      } else if (!node.hasAttributes() && node.firstChild != null) {\n        node = dom(node).unwrap();\n      } else {\n        node = dom(node).switchTag(dom.DEFAULT_INLINE_TAG);\n      }\n    }\n    return node;\n  },\n  wrapInline: function (lineNode) {\n    var blockNode, nextNode;\n    if (dom.BLOCK_TAGS[lineNode.tagName] != null) {\n      return lineNode;\n    }\n    blockNode = lineNode.ownerDocument.createElement(dom.DEFAULT_BLOCK_TAG);\n    lineNode.parentNode.insertBefore(blockNode, lineNode);\n    while (lineNode != null && dom.BLOCK_TAGS[lineNode.tagName] == null) {\n      nextNode = lineNode.nextSibling;\n      blockNode.appendChild(lineNode);\n      lineNode = nextNode;\n    }\n    return blockNode;\n  },\n  unwrapText: function (lineNode) {\n    var spans;\n    spans = _.map(lineNode.querySelectorAll(dom.DEFAULT_INLINE_TAG));\n    return _.each(spans, function (span) {\n      if (!span.hasAttributes()) {\n        return dom(span).unwrap();\n      }\n    });\n  }\n};\nmodule.exports = Normalizer;","map":{"version":3,"names":["Normalizer","dom","_","require","ALIASES","ATTRIBUTES","STYLES","TAGS","handleBreaks","lineNode","breaks","map","querySelectorAll","DEFAULT_BREAK_TAG","each","_this","br","nextSibling","isIE","previousSibling","splitAncestors","parentNode","normalizeLine","wrapInline","pullBlocks","normalizeNode","unwrapText","LIST_TAGS","tagName","firstChild","node","isTextNode","style","attribute","value","hasAttribute","getAttribute","convertFontSize","removeAttribute","whitelistStyles","whitelistTags","optimizeLine","lineNodeLength","nodes","_results","length","descendants","pop","EMBED_TAGS","push","remove","unwrap","isEqual","attributes","merge","curNode","BLOCK_TAGS","stripComments","html","replace","stripWhitespace","original","styles","omit","key","keys","isElement","switchTag","DEFAULT_BLOCK_TAG","hasAttributes","DEFAULT_INLINE_TAG","blockNode","nextNode","ownerDocument","createElement","insertBefore","appendChild","spans","span","module","exports"],"sources":["/home/tpss/public_html/Mernstack/authtask/frontend/node_modules/quilljs/lib/lib/normalizer.js"],"sourcesContent":["var Normalizer, dom, _;\n\n_ = require('lodash');\n\ndom = require('./dom');\n\nNormalizer = {\n  ALIASES: {\n    'STRONG': 'B',\n    'EM': 'I',\n    'DEL': 'S',\n    'STRIKE': 'S'\n  },\n  ATTRIBUTES: {\n    'color': 'color',\n    'face': 'fontFamily',\n    'size': 'fontSize'\n  },\n  STYLES: {\n    'background-color': 'background-color',\n    'color': 'color',\n    'font-family': 'font-family',\n    'font-size': 'font-size',\n    'text-align': 'text-align'\n  },\n  TAGS: {\n    'DIV': 'DIV',\n    'BR': 'BR',\n    'SPAN': 'SPAN',\n    'B': 'B',\n    'I': 'I',\n    'S': 'S',\n    'U': 'U',\n    'A': 'A',\n    'IMG': 'IMG',\n    'OL': 'OL',\n    'UL': 'UL',\n    'LI': 'LI'\n  },\n  handleBreaks: function(lineNode) {\n    var breaks;\n    breaks = _.map(lineNode.querySelectorAll(dom.DEFAULT_BREAK_TAG));\n    _.each(breaks, (function(_this) {\n      return function(br) {\n        if ((br.nextSibling != null) && (!dom.isIE(10) || (br.previousSibling != null))) {\n          return dom(br.nextSibling).splitAncestors(lineNode.parentNode);\n        }\n      };\n    })(this));\n    return lineNode;\n  },\n  normalizeLine: function(lineNode) {\n    lineNode = Normalizer.wrapInline(lineNode);\n    lineNode = Normalizer.handleBreaks(lineNode);\n    lineNode = Normalizer.pullBlocks(lineNode);\n    lineNode = Normalizer.normalizeNode(lineNode);\n    Normalizer.unwrapText(lineNode);\n    if ((lineNode != null) && (dom.LIST_TAGS[lineNode.tagName] != null)) {\n      lineNode = lineNode.firstChild;\n    }\n    return lineNode;\n  },\n  normalizeNode: function(node) {\n    if (dom(node).isTextNode()) {\n      return node;\n    }\n    _.each(Normalizer.ATTRIBUTES, function(style, attribute) {\n      var value;\n      if (node.hasAttribute(attribute)) {\n        value = node.getAttribute(attribute);\n        if (attribute === 'size') {\n          value = dom.convertFontSize(value);\n        }\n        node.style[style] = value;\n        return node.removeAttribute(attribute);\n      }\n    });\n    Normalizer.whitelistStyles(node);\n    return Normalizer.whitelistTags(node);\n  },\n  optimizeLine: function(lineNode) {\n    var lineNodeLength, node, nodes, _results;\n    lineNodeLength = dom(lineNode).length();\n    nodes = dom(lineNode).descendants();\n    _results = [];\n    while (nodes.length > 0) {\n      node = nodes.pop();\n      if ((node != null ? node.parentNode : void 0) == null) {\n        continue;\n      }\n      if (dom.EMBED_TAGS[node.tagName] != null) {\n        continue;\n      }\n      if (node.tagName === dom.DEFAULT_BREAK_TAG) {\n        if (lineNodeLength !== 0) {\n          _results.push(dom(node).remove());\n        } else {\n          _results.push(void 0);\n        }\n      } else if (dom(node).length() === 0) {\n        nodes.push(node.nextSibling);\n        _results.push(dom(node).unwrap());\n      } else if ((node.previousSibling != null) && node.tagName === node.previousSibling.tagName) {\n        if (_.isEqual(dom(node).attributes(), dom(node.previousSibling).attributes())) {\n          nodes.push(node.firstChild);\n          _results.push(dom(node.previousSibling).merge(node));\n        } else {\n          _results.push(void 0);\n        }\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  },\n  pullBlocks: function(lineNode) {\n    var curNode;\n    curNode = lineNode.firstChild;\n    while (curNode != null) {\n      if ((dom.BLOCK_TAGS[curNode.tagName] != null) && curNode.tagName !== 'LI') {\n        if (curNode.previousSibling != null) {\n          dom(curNode).splitAncestors(lineNode.parentNode);\n        }\n        if (curNode.nextSibling != null) {\n          dom(curNode.nextSibling).splitAncestors(lineNode.parentNode);\n        }\n        if ((dom.LIST_TAGS[curNode.tagName] == null) || !curNode.firstChild) {\n          dom(curNode).unwrap();\n          Normalizer.pullBlocks(lineNode);\n        } else {\n          dom(curNode.parentNode).unwrap();\n          if (lineNode.parentNode == null) {\n            lineNode = curNode;\n          }\n        }\n        break;\n      }\n      curNode = curNode.nextSibling;\n    }\n    return lineNode;\n  },\n  stripComments: function(html) {\n    return html.replace(/<!--[\\s\\S]*?-->/g, '');\n  },\n  stripWhitespace: function(html) {\n    html = html.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    html = html.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    html = html.replace(/(\\r?\\n|\\r)+/g, ' ');\n    html = html.replace(/\\>\\s+\\</g, '><');\n    return html;\n  },\n  whitelistStyles: function(node) {\n    var original, styles;\n    original = dom(node).styles();\n    styles = _.omit(original, function(value, key) {\n      return Normalizer.STYLES[key] == null;\n    });\n    if (_.keys(styles).length < _.keys(original).length) {\n      if (_.keys(styles).length > 0) {\n        return dom(node).styles(styles, true);\n      } else {\n        return node.removeAttribute('style');\n      }\n    }\n  },\n  whitelistTags: function(node) {\n    if (!dom(node).isElement()) {\n      return node;\n    }\n    if (Normalizer.ALIASES[node.tagName] != null) {\n      node = dom(node).switchTag(Normalizer.ALIASES[node.tagName]);\n    } else if (Normalizer.TAGS[node.tagName] == null) {\n      if (dom.BLOCK_TAGS[node.tagName] != null) {\n        node = dom(node).switchTag(dom.DEFAULT_BLOCK_TAG);\n      } else if (!node.hasAttributes() && (node.firstChild != null)) {\n        node = dom(node).unwrap();\n      } else {\n        node = dom(node).switchTag(dom.DEFAULT_INLINE_TAG);\n      }\n    }\n    return node;\n  },\n  wrapInline: function(lineNode) {\n    var blockNode, nextNode;\n    if (dom.BLOCK_TAGS[lineNode.tagName] != null) {\n      return lineNode;\n    }\n    blockNode = lineNode.ownerDocument.createElement(dom.DEFAULT_BLOCK_TAG);\n    lineNode.parentNode.insertBefore(blockNode, lineNode);\n    while ((lineNode != null) && (dom.BLOCK_TAGS[lineNode.tagName] == null)) {\n      nextNode = lineNode.nextSibling;\n      blockNode.appendChild(lineNode);\n      lineNode = nextNode;\n    }\n    return blockNode;\n  },\n  unwrapText: function(lineNode) {\n    var spans;\n    spans = _.map(lineNode.querySelectorAll(dom.DEFAULT_INLINE_TAG));\n    return _.each(spans, function(span) {\n      if (!span.hasAttributes()) {\n        return dom(span).unwrap();\n      }\n    });\n  }\n};\n\nmodule.exports = Normalizer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}