{"ast":null,"code":"var Delta = require('./delta');\nvar pkg = require('../package.json');\nmodule.exports = {\n  Delta: Delta,\n  name: 'rich-text',\n  uri: 'http://sharejs.org/types/rich-text/v1',\n  create: function (initial) {\n    return new Delta(initial);\n  },\n  apply: function (snapshot, delta) {\n    snapshot = new Delta(snapshot);\n    delta = new Delta(delta);\n    return snapshot.compose(delta);\n  },\n  compose: function (delta1, delta2) {\n    delta1 = new Delta(delta1);\n    delta2 = new Delta(delta2);\n    return delta1.compose(delta2);\n  },\n  diff: function (delta1, delta2) {\n    delta1 = new Delta(delta1);\n    delta2 = new Delta(delta2);\n    return delta1.diff(delta2);\n  },\n  transform: function (delta1, delta2, side) {\n    delta1 = new Delta(delta1);\n    delta2 = new Delta(delta2);\n    // Fuzzer specs is in opposite order of delta interface\n    return delta2.transform(delta1, side === 'left');\n  }\n};","map":{"version":3,"names":["Delta","require","pkg","module","exports","name","uri","create","initial","apply","snapshot","delta","compose","delta1","delta2","diff","transform","side"],"sources":["/home/tpss/public_html/Mernstack/authtask/frontend/node_modules/rich-text/lib/type.js"],"sourcesContent":["var Delta = require('./delta');\nvar pkg = require('../package.json');\n\n\nmodule.exports = {\n  Delta: Delta,\n  name: 'rich-text',\n  uri: 'http://sharejs.org/types/rich-text/v1',\n\n  create: function (initial) {\n    return new Delta(initial);\n  },\n\n  apply: function (snapshot, delta) {\n    snapshot = new Delta(snapshot);\n    delta = new Delta(delta);\n    return snapshot.compose(delta);\n  },\n\n  compose: function (delta1, delta2) {\n    delta1 = new Delta(delta1);\n    delta2 = new Delta(delta2);\n    return delta1.compose(delta2);\n  },\n\n  diff: function (delta1, delta2) {\n    delta1 = new Delta(delta1);\n    delta2 = new Delta(delta2);\n    return delta1.diff(delta2);\n  },\n\n  transform: function (delta1, delta2, side) {\n    delta1 = new Delta(delta1);\n    delta2 = new Delta(delta2);\n    // Fuzzer specs is in opposite order of delta interface\n    return delta2.transform(delta1, side === 'left');\n  }\n};\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAS,CAAC;AAC9B,IAAIC,GAAG,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAGpCE,MAAM,CAACC,OAAO,GAAG;EACfJ,KAAK,EAAEA,KAAK;EACZK,IAAI,EAAE,WAAW;EACjBC,GAAG,EAAE,uCAAuC;EAE5CC,MAAM,EAAE,SAAAA,CAAUC,OAAO,EAAE;IACzB,OAAO,IAAIR,KAAK,CAACQ,OAAO,CAAC;EAC3B,CAAC;EAEDC,KAAK,EAAE,SAAAA,CAAUC,QAAQ,EAAEC,KAAK,EAAE;IAChCD,QAAQ,GAAG,IAAIV,KAAK,CAACU,QAAQ,CAAC;IAC9BC,KAAK,GAAG,IAAIX,KAAK,CAACW,KAAK,CAAC;IACxB,OAAOD,QAAQ,CAACE,OAAO,CAACD,KAAK,CAAC;EAChC,CAAC;EAEDC,OAAO,EAAE,SAAAA,CAAUC,MAAM,EAAEC,MAAM,EAAE;IACjCD,MAAM,GAAG,IAAIb,KAAK,CAACa,MAAM,CAAC;IAC1BC,MAAM,GAAG,IAAId,KAAK,CAACc,MAAM,CAAC;IAC1B,OAAOD,MAAM,CAACD,OAAO,CAACE,MAAM,CAAC;EAC/B,CAAC;EAEDC,IAAI,EAAE,SAAAA,CAAUF,MAAM,EAAEC,MAAM,EAAE;IAC9BD,MAAM,GAAG,IAAIb,KAAK,CAACa,MAAM,CAAC;IAC1BC,MAAM,GAAG,IAAId,KAAK,CAACc,MAAM,CAAC;IAC1B,OAAOD,MAAM,CAACE,IAAI,CAACD,MAAM,CAAC;EAC5B,CAAC;EAEDE,SAAS,EAAE,SAAAA,CAAUH,MAAM,EAAEC,MAAM,EAAEG,IAAI,EAAE;IACzCJ,MAAM,GAAG,IAAIb,KAAK,CAACa,MAAM,CAAC;IAC1BC,MAAM,GAAG,IAAId,KAAK,CAACc,MAAM,CAAC;IAC1B;IACA,OAAOA,MAAM,CAACE,SAAS,CAACH,MAAM,EAAEI,IAAI,KAAK,MAAM,CAAC;EAClD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}