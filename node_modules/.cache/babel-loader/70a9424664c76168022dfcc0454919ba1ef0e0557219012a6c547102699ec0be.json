{"ast":null,"code":"import'../assets/resetpassword.css';import React,{useState}from'react';import axios from'axios';import{useNavigate,useLocation}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ResetPassword=()=>{const[password,setPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[error,setError]=useState('');const[success,setSuccess]=useState('');const navigate=useNavigate();const location=useLocation();const searchParams=new URLSearchParams(location.search);const token=searchParams.get('token');console.log(token);const handlePasswordChange=e=>{setPassword(e.target.value);};const handleConfirmPasswordChange=e=>{setConfirmPassword(e.target.value);};const handleSubmit=async e=>{e.preventDefault();if(password!==confirmPassword){setError('Passwords do not match');return;}try{const response=await axios.post(`http://localhost:8002/api/auth/reset-password?token=${token}`,{password});console.log({token},'Token sent for password reset');setSuccess(response.data.message);setError('');setTimeout(()=>{navigate('/login');},2000);}catch(error){setError(error.response?error.response.data.message:'Server error');setSuccess('');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"reset-password-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Reset account password\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Enter a new password\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),success&&/*#__PURE__*/_jsx(\"p\",{className:\"success\",children:success}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"reset-password-form\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-input\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",value:password,onChange:handlePasswordChange,required:true,placeholder:\"New Password\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-input\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"confirmPassword\",value:confirmPassword,onChange:handleConfirmPasswordChange,required:true,placeholder:\"Confirm Password\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"submit-resetpassword\",type:\"submit\",children:\"Reset Password\"})]})]});};export default ResetPassword;","map":{"version":3,"names":["React","useState","axios","useNavigate","useLocation","jsx","_jsx","jsxs","_jsxs","ResetPassword","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","navigate","location","searchParams","URLSearchParams","search","token","get","console","log","handlePasswordChange","e","target","value","handleConfirmPasswordChange","handleSubmit","preventDefault","response","post","data","message","setTimeout","className","children","onSubmit","type","id","onChange","required","placeholder"],"sources":["/home/tpss/public_html/Mernstack/authtask/frontend/src/components/ResetPasswordPage.jsx"],"sourcesContent":["import '../assets/resetpassword.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\nconst ResetPassword = () => {\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();  \n  const searchParams = new URLSearchParams(location.search);\n  const token = searchParams.get('token'); \n  console.log(token)\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n  const handleConfirmPasswordChange = (e) => {\n    setConfirmPassword(e.target.value);\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    try {\n      const response = await axios.post(\n        `http://localhost:8002/api/auth/reset-password?token=${token}`,\n        { password }\n      );\n      console.log({ token }, 'Token sent for password reset');\n      setSuccess(response.data.message);\n      setError('');\n      setTimeout(() => {\n        navigate('/login');\n      }, 2000);\n    } catch (error) {\n      setError(error.response ? error.response.data.message : 'Server error');\n      setSuccess('');\n    }\n  };\n  return (\n    <div className=\"reset-password-container\">\n      \n      <h2>Reset account password</h2>\n      <p>Enter a new password</p>\n      {error && <p className=\"error\">{error}</p>}\n      {success && <p className=\"success\">{success}</p>}\n      <form onSubmit={handleSubmit} className=\"reset-password-form\">\n        <div className=\"form-input\">\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n            required\n            placeholder=\"New Password\"\n          />\n        </div>\n        <div className=\"form-input\">\n          <input\n            type=\"password\"\n            id=\"confirmPassword\"\n            value={confirmPassword}\n            onChange={handleConfirmPasswordChange}\n            required\n            placeholder=\"Confirm Password\"\n          />\n        </div>\n        <button className=\"submit-resetpassword\" type=\"submit\">Reset Password</button>\n      </form>\n    </div>\n  );\n};\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}