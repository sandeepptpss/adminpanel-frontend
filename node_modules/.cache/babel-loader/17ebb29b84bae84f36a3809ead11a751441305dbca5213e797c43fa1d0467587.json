{"ast":null,"code":"var Delta,\n  Format,\n  Leaf,\n  Line,\n  LinkedList,\n  Normalizer,\n  dom,\n  _,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function (child, parent) {\n    for (var key in parent) {\n      if (__hasProp.call(parent, key)) child[key] = parent[key];\n    }\n    function ctor() {\n      this.constructor = child;\n    }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  };\n_ = require('lodash');\nDelta = require('rich-text').Delta;\ndom = require('../lib/dom');\nFormat = require('./format');\nLeaf = require('./leaf');\nLine = require('./line');\nLinkedList = require('../lib/linked-list');\nNormalizer = require('../lib/normalizer');\nLine = function (_super) {\n  __extends(Line, _super);\n  Line.CLASS_NAME = 'line';\n  Line.ID_PREFIX = 'line-';\n  function Line(doc, node) {\n    this.doc = doc;\n    this.node = node;\n    this.id = _.uniqueId(Line.ID_PREFIX);\n    this.formats = {};\n    dom(this.node).addClass(Line.CLASS_NAME);\n    this.rebuild();\n    Line.__super__.constructor.call(this, this.node);\n  }\n  Line.prototype.buildLeaves = function (node, formats) {\n    return _.each(dom(node).childNodes(), function (_this) {\n      return function (node) {\n        var nodeFormats;\n        node = Normalizer.normalizeNode(node);\n        nodeFormats = _.clone(formats);\n        _.each(_this.doc.formats, function (format, name) {\n          if (!format.isType(Format.types.LINE) && format.match(node)) {\n            return nodeFormats[name] = format.value(node);\n          }\n        });\n        if (Leaf.isLeafNode(node)) {\n          return _this.leaves.append(new Leaf(node, nodeFormats));\n        } else {\n          return _this.buildLeaves(node, nodeFormats);\n        }\n      };\n    }(this));\n  };\n  Line.prototype.deleteText = function (offset, length) {\n    var deleteLength, leaf, _ref;\n    if (!(length > 0)) {\n      return;\n    }\n    _ref = this.findLeafAt(offset), leaf = _ref[0], offset = _ref[1];\n    while (leaf != null && length > 0) {\n      deleteLength = Math.min(length, leaf.length - offset);\n      leaf.deleteText(offset, deleteLength);\n      length -= deleteLength;\n      leaf = leaf.next;\n      offset = 0;\n    }\n    return this.rebuild();\n  };\n  Line.prototype.findLeaf = function (leafNode) {\n    var curLeaf;\n    curLeaf = this.leaves.first;\n    while (curLeaf != null) {\n      if (curLeaf.node === leafNode) {\n        return curLeaf;\n      }\n      curLeaf = curLeaf.next;\n    }\n    return null;\n  };\n  Line.prototype.findLeafAt = function (offset, inclusive) {\n    var leaf;\n    if (inclusive == null) {\n      inclusive = false;\n    }\n    if (offset >= this.length - 1) {\n      return [this.leaves.last, this.leaves.last.length];\n    }\n    leaf = this.leaves.first;\n    while (leaf != null) {\n      if (offset < leaf.length || offset === leaf.length && inclusive) {\n        return [leaf, offset];\n      }\n      offset -= leaf.length;\n      leaf = leaf.next;\n    }\n    return [this.leaves.last, offset - this.leaves.last.length];\n  };\n  Line.prototype.format = function (name, value) {\n    var formats;\n    if (_.isObject(name)) {\n      formats = name;\n    } else {\n      formats = {};\n      formats[name] = value;\n    }\n    _.each(formats, function (_this) {\n      return function (value, name) {\n        var excludeFormat, format;\n        format = _this.doc.formats[name];\n        if (format.isType(Format.types.LINE)) {\n          if (format.config.exclude && _this.formats[format.config.exclude]) {\n            excludeFormat = _this.doc.formats[format.config.exclude];\n            if (excludeFormat != null) {\n              _this.node = excludeFormat.remove(_this.node);\n              delete _this.formats[format.config.exclude];\n            }\n          }\n          _this.node = format.add(_this.node, value);\n        }\n        if (value) {\n          return _this.formats[name] = value;\n        } else {\n          return delete _this.formats[name];\n        }\n      };\n    }(this));\n    return this.resetContent();\n  };\n  Line.prototype.formatText = function (offset, length, name, value) {\n    var format, leaf, leafOffset, leftNode, nextLeaf, rightNode, targetNode, _ref, _ref1, _ref2;\n    _ref = this.findLeafAt(offset), leaf = _ref[0], leafOffset = _ref[1];\n    format = this.doc.formats[name];\n    if (!(format != null && format.config.type !== Format.types.LINE)) {\n      return;\n    }\n    while (leaf != null && length > 0) {\n      nextLeaf = leaf.next;\n      if (value && leaf.formats[name] !== value || !value && leaf.formats[name] != null) {\n        targetNode = leaf.node;\n        if (leaf.formats[name] != null) {\n          dom(targetNode).splitAncestors(this.node);\n          while (!format.match(targetNode)) {\n            targetNode = targetNode.parentNode;\n          }\n        }\n        if (leafOffset > 0) {\n          _ref1 = dom(targetNode).split(leafOffset), leftNode = _ref1[0], targetNode = _ref1[1];\n        }\n        if (leaf.length > leafOffset + length) {\n          _ref2 = dom(targetNode).split(length), targetNode = _ref2[0], rightNode = _ref2[1];\n        }\n        format.add(targetNode, value);\n      }\n      length -= leaf.length - leafOffset;\n      leafOffset = 0;\n      leaf = nextLeaf;\n    }\n    return this.rebuild();\n  };\n  Line.prototype.insertText = function (offset, text, formats) {\n    var leaf, leafOffset, nextNode, node, prevNode, _ref, _ref1;\n    if (formats == null) {\n      formats = {};\n    }\n    if (!(text.length > 0)) {\n      return;\n    }\n    _ref = this.findLeafAt(offset), leaf = _ref[0], leafOffset = _ref[1];\n    if (_.isEqual(leaf.formats, formats)) {\n      leaf.insertText(leafOffset, text);\n      return this.resetContent();\n    } else {\n      node = _.reduce(formats, function (_this) {\n        return function (node, value, name) {\n          return _this.doc.formats[name].add(node, value);\n        };\n      }(this), this.node.ownerDocument.createTextNode(text));\n      _ref1 = dom(leaf.node).split(leafOffset), prevNode = _ref1[0], nextNode = _ref1[1];\n      if (nextNode) {\n        nextNode = dom(nextNode).splitAncestors(this.node).get();\n      }\n      this.node.insertBefore(node, nextNode);\n      return this.rebuild();\n    }\n  };\n  Line.prototype.optimize = function () {\n    Normalizer.optimizeLine(this.node);\n    return this.rebuild();\n  };\n  Line.prototype.rebuild = function (force) {\n    if (force == null) {\n      force = false;\n    }\n    if (!force && this.outerHTML != null && this.outerHTML === this.node.outerHTML) {\n      if (_.all(this.leaves.toArray(), function (_this) {\n        return function (leaf) {\n          return dom(leaf.node).isAncestor(_this.node);\n        };\n      }(this))) {\n        return false;\n      }\n    }\n    this.node = Normalizer.normalizeNode(this.node);\n    if (dom(this.node).length() === 0 && !this.node.querySelector(dom.DEFAULT_BREAK_TAG)) {\n      this.node.appendChild(this.node.ownerDocument.createElement(dom.DEFAULT_BREAK_TAG));\n    }\n    this.leaves = new LinkedList();\n    this.formats = _.reduce(this.doc.formats, function (_this) {\n      return function (formats, format, name) {\n        if (format.isType(Format.types.LINE)) {\n          if (format.match(_this.node)) {\n            formats[name] = format.value(_this.node);\n          } else {\n            delete formats[name];\n          }\n        }\n        return formats;\n      };\n    }(this), this.formats);\n    this.buildLeaves(this.node, {});\n    this.resetContent();\n    return true;\n  };\n  Line.prototype.resetContent = function () {\n    if (this.node.id !== this.id) {\n      this.node.id = this.id;\n    }\n    this.outerHTML = this.node.outerHTML;\n    this.length = 1;\n    this.delta = new Delta();\n    this.leaves.toArray().forEach(function (_this) {\n      return function (leaf) {\n        _this.length += leaf.length;\n        if (dom.EMBED_TAGS[leaf.node.tagName] != null) {\n          return _this.delta.insert(1, leaf.formats);\n        } else {\n          return _this.delta.insert(leaf.text, leaf.formats);\n        }\n      };\n    }(this));\n    return this.delta.insert('\\n', this.formats);\n  };\n  return Line;\n}(LinkedList.Node);\nmodule.exports = Line;","map":{"version":3,"names":["Delta","Format","Leaf","Line","LinkedList","Normalizer","dom","_","__hasProp","hasOwnProperty","__extends","child","parent","key","call","ctor","constructor","prototype","__super__","require","_super","CLASS_NAME","ID_PREFIX","doc","node","id","uniqueId","formats","addClass","rebuild","buildLeaves","each","childNodes","_this","nodeFormats","normalizeNode","clone","format","name","isType","types","LINE","match","value","isLeafNode","leaves","append","deleteText","offset","length","deleteLength","leaf","_ref","findLeafAt","Math","min","next","findLeaf","leafNode","curLeaf","first","inclusive","last","isObject","excludeFormat","config","exclude","remove","add","resetContent","formatText","leafOffset","leftNode","nextLeaf","rightNode","targetNode","_ref1","_ref2","type","splitAncestors","parentNode","split","insertText","text","nextNode","prevNode","isEqual","reduce","ownerDocument","createTextNode","get","insertBefore","optimize","optimizeLine","force","outerHTML","all","toArray","isAncestor","querySelector","DEFAULT_BREAK_TAG","appendChild","createElement","delta","forEach","EMBED_TAGS","tagName","insert","Node","module","exports"],"sources":["/home/tpss/public_html/Mernstack/authtask/frontend/node_modules/quilljs/lib/core/line.js"],"sourcesContent":["var Delta, Format, Leaf, Line, LinkedList, Normalizer, dom, _,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n_ = require('lodash');\n\nDelta = require('rich-text').Delta;\n\ndom = require('../lib/dom');\n\nFormat = require('./format');\n\nLeaf = require('./leaf');\n\nLine = require('./line');\n\nLinkedList = require('../lib/linked-list');\n\nNormalizer = require('../lib/normalizer');\n\nLine = (function(_super) {\n  __extends(Line, _super);\n\n  Line.CLASS_NAME = 'line';\n\n  Line.ID_PREFIX = 'line-';\n\n  function Line(doc, node) {\n    this.doc = doc;\n    this.node = node;\n    this.id = _.uniqueId(Line.ID_PREFIX);\n    this.formats = {};\n    dom(this.node).addClass(Line.CLASS_NAME);\n    this.rebuild();\n    Line.__super__.constructor.call(this, this.node);\n  }\n\n  Line.prototype.buildLeaves = function(node, formats) {\n    return _.each(dom(node).childNodes(), (function(_this) {\n      return function(node) {\n        var nodeFormats;\n        node = Normalizer.normalizeNode(node);\n        nodeFormats = _.clone(formats);\n        _.each(_this.doc.formats, function(format, name) {\n          if (!format.isType(Format.types.LINE) && format.match(node)) {\n            return nodeFormats[name] = format.value(node);\n          }\n        });\n        if (Leaf.isLeafNode(node)) {\n          return _this.leaves.append(new Leaf(node, nodeFormats));\n        } else {\n          return _this.buildLeaves(node, nodeFormats);\n        }\n      };\n    })(this));\n  };\n\n  Line.prototype.deleteText = function(offset, length) {\n    var deleteLength, leaf, _ref;\n    if (!(length > 0)) {\n      return;\n    }\n    _ref = this.findLeafAt(offset), leaf = _ref[0], offset = _ref[1];\n    while ((leaf != null) && length > 0) {\n      deleteLength = Math.min(length, leaf.length - offset);\n      leaf.deleteText(offset, deleteLength);\n      length -= deleteLength;\n      leaf = leaf.next;\n      offset = 0;\n    }\n    return this.rebuild();\n  };\n\n  Line.prototype.findLeaf = function(leafNode) {\n    var curLeaf;\n    curLeaf = this.leaves.first;\n    while (curLeaf != null) {\n      if (curLeaf.node === leafNode) {\n        return curLeaf;\n      }\n      curLeaf = curLeaf.next;\n    }\n    return null;\n  };\n\n  Line.prototype.findLeafAt = function(offset, inclusive) {\n    var leaf;\n    if (inclusive == null) {\n      inclusive = false;\n    }\n    if (offset >= this.length - 1) {\n      return [this.leaves.last, this.leaves.last.length];\n    }\n    leaf = this.leaves.first;\n    while (leaf != null) {\n      if (offset < leaf.length || (offset === leaf.length && inclusive)) {\n        return [leaf, offset];\n      }\n      offset -= leaf.length;\n      leaf = leaf.next;\n    }\n    return [this.leaves.last, offset - this.leaves.last.length];\n  };\n\n  Line.prototype.format = function(name, value) {\n    var formats;\n    if (_.isObject(name)) {\n      formats = name;\n    } else {\n      formats = {};\n      formats[name] = value;\n    }\n    _.each(formats, (function(_this) {\n      return function(value, name) {\n        var excludeFormat, format;\n        format = _this.doc.formats[name];\n        if (format.isType(Format.types.LINE)) {\n          if (format.config.exclude && _this.formats[format.config.exclude]) {\n            excludeFormat = _this.doc.formats[format.config.exclude];\n            if (excludeFormat != null) {\n              _this.node = excludeFormat.remove(_this.node);\n              delete _this.formats[format.config.exclude];\n            }\n          }\n          _this.node = format.add(_this.node, value);\n        }\n        if (value) {\n          return _this.formats[name] = value;\n        } else {\n          return delete _this.formats[name];\n        }\n      };\n    })(this));\n    return this.resetContent();\n  };\n\n  Line.prototype.formatText = function(offset, length, name, value) {\n    var format, leaf, leafOffset, leftNode, nextLeaf, rightNode, targetNode, _ref, _ref1, _ref2;\n    _ref = this.findLeafAt(offset), leaf = _ref[0], leafOffset = _ref[1];\n    format = this.doc.formats[name];\n    if (!((format != null) && format.config.type !== Format.types.LINE)) {\n      return;\n    }\n    while ((leaf != null) && length > 0) {\n      nextLeaf = leaf.next;\n      if ((value && leaf.formats[name] !== value) || (!value && (leaf.formats[name] != null))) {\n        targetNode = leaf.node;\n        if (leaf.formats[name] != null) {\n          dom(targetNode).splitAncestors(this.node);\n          while (!format.match(targetNode)) {\n            targetNode = targetNode.parentNode;\n          }\n        }\n        if (leafOffset > 0) {\n          _ref1 = dom(targetNode).split(leafOffset), leftNode = _ref1[0], targetNode = _ref1[1];\n        }\n        if (leaf.length > leafOffset + length) {\n          _ref2 = dom(targetNode).split(length), targetNode = _ref2[0], rightNode = _ref2[1];\n        }\n        format.add(targetNode, value);\n      }\n      length -= leaf.length - leafOffset;\n      leafOffset = 0;\n      leaf = nextLeaf;\n    }\n    return this.rebuild();\n  };\n\n  Line.prototype.insertText = function(offset, text, formats) {\n    var leaf, leafOffset, nextNode, node, prevNode, _ref, _ref1;\n    if (formats == null) {\n      formats = {};\n    }\n    if (!(text.length > 0)) {\n      return;\n    }\n    _ref = this.findLeafAt(offset), leaf = _ref[0], leafOffset = _ref[1];\n    if (_.isEqual(leaf.formats, formats)) {\n      leaf.insertText(leafOffset, text);\n      return this.resetContent();\n    } else {\n      node = _.reduce(formats, (function(_this) {\n        return function(node, value, name) {\n          return _this.doc.formats[name].add(node, value);\n        };\n      })(this), this.node.ownerDocument.createTextNode(text));\n      _ref1 = dom(leaf.node).split(leafOffset), prevNode = _ref1[0], nextNode = _ref1[1];\n      if (nextNode) {\n        nextNode = dom(nextNode).splitAncestors(this.node).get();\n      }\n      this.node.insertBefore(node, nextNode);\n      return this.rebuild();\n    }\n  };\n\n  Line.prototype.optimize = function() {\n    Normalizer.optimizeLine(this.node);\n    return this.rebuild();\n  };\n\n  Line.prototype.rebuild = function(force) {\n    if (force == null) {\n      force = false;\n    }\n    if (!force && (this.outerHTML != null) && this.outerHTML === this.node.outerHTML) {\n      if (_.all(this.leaves.toArray(), (function(_this) {\n        return function(leaf) {\n          return dom(leaf.node).isAncestor(_this.node);\n        };\n      })(this))) {\n        return false;\n      }\n    }\n    this.node = Normalizer.normalizeNode(this.node);\n    if (dom(this.node).length() === 0 && !this.node.querySelector(dom.DEFAULT_BREAK_TAG)) {\n      this.node.appendChild(this.node.ownerDocument.createElement(dom.DEFAULT_BREAK_TAG));\n    }\n    this.leaves = new LinkedList();\n    this.formats = _.reduce(this.doc.formats, (function(_this) {\n      return function(formats, format, name) {\n        if (format.isType(Format.types.LINE)) {\n          if (format.match(_this.node)) {\n            formats[name] = format.value(_this.node);\n          } else {\n            delete formats[name];\n          }\n        }\n        return formats;\n      };\n    })(this), this.formats);\n    this.buildLeaves(this.node, {});\n    this.resetContent();\n    return true;\n  };\n\n  Line.prototype.resetContent = function() {\n    if (this.node.id !== this.id) {\n      this.node.id = this.id;\n    }\n    this.outerHTML = this.node.outerHTML;\n    this.length = 1;\n    this.delta = new Delta();\n    this.leaves.toArray().forEach((function(_this) {\n      return function(leaf) {\n        _this.length += leaf.length;\n        if (dom.EMBED_TAGS[leaf.node.tagName] != null) {\n          return _this.delta.insert(1, leaf.formats);\n        } else {\n          return _this.delta.insert(leaf.text, leaf.formats);\n        }\n      };\n    })(this));\n    return this.delta.insert('\\n', this.formats);\n  };\n\n  return Line;\n\n})(LinkedList.Node);\n\nmodule.exports = Line;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}